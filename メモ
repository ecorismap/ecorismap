プロジェクトのデータをサーバーから取得、更新する際のアルゴリズムの修正を考えています。まずは以下のアイデアについて意見を聞かせてください。
- レイヤの権限には、プライベート、パブリック、共通があります。
- 管理者は、プロジェクトの設定において、レイヤを上記のいづれかで作成できます。また、プライベート、パブリックではテンプレートとしてデータも追加できます。
- 共通レイヤにもデータは追加でき、そのデータはユーザーは編集できません。共通データの閲覧用の意味合いがあります。
- テンプレートのデータは、管理者によって更新されることもあります。
- プライベートレイヤの場合、ユーザーは自分のデータを追加、編集、閲覧できます。またテンプレートがある場合は、それをテンプレートのデータとして閲覧、編集できます。編集した場合は、自分が編集したデータとなります。
- パブリックレイヤの場合、ユーザーは自分のデータを追加、編集、閲覧でき、また他人のデータも閲覧できます。また、他人のデータも編集できます。他人のデータを編集したら、自分が編集したデータとなります。テンプレートがある場合は、それをテンプレートのデータとして閲覧、編集できます。編集した場合は、自分が編集したデータとなります。
- ユーザーがローカルで追加、編集したデータは、送信ボタンで、サーバーにアップロードできます。アップロードするデータは、自分のデータ（他人、テンプレートを編集したものを含む）です。
- プロジェクトを開く際に、ユーザーは各レイヤをサーバーから取得します。その際に、同じIDのレイヤ、同じIDのデータがある場合はマージ処理が必要になります。
- データは暗号化されているので、サーバー側でマージ処理することはできません。
- 共通レイヤは、マージが発生することはありません。
- プライベートレイヤは、自分のレイヤ（データ）を取得します。テンプレートのレイヤ（データ）が存在する場合は、マージ処理を行います。同じレイヤIDで同じデータIDがある場合、自分のデータに置き換えます。それ以外はテンプレートのデータを使用します。
- パブリックレイヤは、自分のレイヤ（データ）、他人のレイヤ（データ）、テンプレートのレイヤ（データ）を取得してマージ処理を行います。他人と同じレイヤIDで同じデータIDがある場合、どのデータを採用するか確認して決定します。それ以外の場合は、プライベートと同じマージ処理になります。

確認ありがとうございます。次に実装に関係するファイルをecorismapのsrc全体から抽出して示してください。

それでは具体的な実装に入ります。具体的な修正方針を教えてください。

実装を開始してください。テストファイルも適宜作成して、テストが通るようにしてください。またLintエラーもないようにしてください。どうしても私に確認が必要なことがあれば、確認しても良いですが、なるべく出来上がるまで自分で実装を進めてください。

