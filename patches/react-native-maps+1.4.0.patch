diff --git a/node_modules/react-native-maps/.DS_Store b/node_modules/react-native-maps/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build.gradle b/node_modules/react-native-maps/android/build.gradle
index 82bd618..d931033 100644
--- a/node_modules/react-native-maps/android/build.gradle
+++ b/node_modules/react-native-maps/android/build.gradle
@@ -39,6 +39,7 @@ repositories {
     // Android JSC is installed from npm
     url "$rootDir/../node_modules/jsc-android/dist"
   }
+
   google()
 }
 
@@ -50,4 +51,6 @@ dependencies {
   implementation "com.google.android.gms:play-services-location:20.0.0"
   implementation 'com.google.maps.android:android-maps-utils:0.5'
   implementation "androidx.work:work-runtime:$work_version"
+  implementation 'com.google.protobuf:protobuf-java:3.24.0'
+  implementation 'com.google.code.gson:gson:2.8.8'
 }
diff --git a/node_modules/react-native-maps/android/build/.transforms/376d266fbac2a3b5d230210b50c417c6/results.bin b/node_modules/react-native-maps/android/build/.transforms/376d266fbac2a3b5d230210b50c417c6/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/376d266fbac2a3b5d230210b50c417c6/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/react-native-maps/android/build/.transforms/376d266fbac2a3b5d230210b50c417c6/transformed/classes/classes.dex b/node_modules/react-native-maps/android/build/.transforms/376d266fbac2a3b5d230210b50c417c6/transformed/classes/classes.dex
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/.transforms/41e89a3b991550f2b0b889a670d8c67e/results.bin b/node_modules/react-native-maps/android/build/.transforms/41e89a3b991550f2b0b889a670d8c67e/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/41e89a3b991550f2b0b889a670d8c67e/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/react-native-maps/android/build/.transforms/41e89a3b991550f2b0b889a670d8c67e/transformed/classes/classes.dex b/node_modules/react-native-maps/android/build/.transforms/41e89a3b991550f2b0b889a670d8c67e/transformed/classes/classes.dex
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/.transforms/4a00f01aea016c53205de383622b9dac/results.bin b/node_modules/react-native-maps/android/build/.transforms/4a00f01aea016c53205de383622b9dac/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/4a00f01aea016c53205de383622b9dac/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/react-native-maps/android/build/.transforms/4a00f01aea016c53205de383622b9dac/transformed/classes/classes.dex b/node_modules/react-native-maps/android/build/.transforms/4a00f01aea016c53205de383622b9dac/transformed/classes/classes.dex
new file mode 100644
index 0000000..4017697
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/4a00f01aea016c53205de383622b9dac/transformed/classes/classes.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/5450e76e757b21e1db1d745cf5e92e03/results.bin b/node_modules/react-native-maps/android/build/.transforms/5450e76e757b21e1db1d745cf5e92e03/results.bin
new file mode 100644
index 0000000..1ed65e0
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/5450e76e757b21e1db1d745cf5e92e03/results.bin
@@ -0,0 +1 @@
+i/
diff --git a/node_modules/react-native-maps/android/build/.transforms/6abc0c26ce46d31cffc9105775bd94f6/results.bin b/node_modules/react-native-maps/android/build/.transforms/6abc0c26ce46d31cffc9105775bd94f6/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/6abc0c26ce46d31cffc9105775bd94f6/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/react-native-maps/android/build/.transforms/6abc0c26ce46d31cffc9105775bd94f6/transformed/classes/classes.dex b/node_modules/react-native-maps/android/build/.transforms/6abc0c26ce46d31cffc9105775bd94f6/transformed/classes/classes.dex
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/.transforms/6da9207d6569aa3f85d7c60b9f07c992/results.bin b/node_modules/react-native-maps/android/build/.transforms/6da9207d6569aa3f85d7c60b9f07c992/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/6da9207d6569aa3f85d7c60b9f07c992/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/react-native-maps/android/build/.transforms/6da9207d6569aa3f85d7c60b9f07c992/transformed/classes/classes.dex b/node_modules/react-native-maps/android/build/.transforms/6da9207d6569aa3f85d7c60b9f07c992/transformed/classes/classes.dex
new file mode 100644
index 0000000..10e5c32
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/6da9207d6569aa3f85d7c60b9f07c992/transformed/classes/classes.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/results.bin b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/results.bin
new file mode 100644
index 0000000..5ff383e
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/results.bin
@@ -0,0 +1 @@
+o/debug
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/BufferPosition.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/BufferPosition.dex
new file mode 100644
index 0000000..ab60d2d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/BufferPosition.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Cache.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Cache.dex
new file mode 100644
index 0000000..b9c373a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Cache.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Compression.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Compression.dex
new file mode 100644
index 0000000..864994c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Compression.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Decompress.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Decompress.dex
new file mode 100644
index 0000000..d3a9e2e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Decompress.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/DecompressFunc.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/DecompressFunc.dex
new file mode 100644
index 0000000..3e0fe40
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/DecompressFunc.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Entry.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Entry.dex
new file mode 100644
index 0000000..30f9970
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Entry.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/EtagMismatch.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/EtagMismatch.dex
new file mode 100644
index 0000000..54dcc47
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/EtagMismatch.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/FetchSource.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/FetchSource.dex
new file mode 100644
index 0000000..58df58a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/FetchSource.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Header.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Header.dex
new file mode 100644
index 0000000..aa3b0f0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Header.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/PMTiles.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/PMTiles.dex
new file mode 100644
index 0000000..c546b13
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/PMTiles.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/PMTilesUtils.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/PMTilesUtils.dex
new file mode 100644
index 0000000..d6b49fd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/PMTilesUtils.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/RangeResponse.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/RangeResponse.dex
new file mode 100644
index 0000000..8ffca61
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/RangeResponse.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/RootDirData.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/RootDirData.dex
new file mode 100644
index 0000000..f14b781
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/RootDirData.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/SharedPromiseCache.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/SharedPromiseCache.dex
new file mode 100644
index 0000000..c899dfb
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/SharedPromiseCache.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/SharedPromiseCacheValue.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/SharedPromiseCacheValue.dex
new file mode 100644
index 0000000..04b8714
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/SharedPromiseCacheValue.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Source.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Source.dex
new file mode 100644
index 0000000..d966e6c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/Source.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/TileType.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/TileType.dex
new file mode 100644
index 0000000..b6450e1
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/PMTiles/TileType.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/LayoutStyle.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/LayoutStyle.dex
new file mode 100644
index 0000000..a2d768f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/LayoutStyle.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/PaintStyle.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/PaintStyle.dex
new file mode 100644
index 0000000..c186cff
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/PaintStyle.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/StyleLayer.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/StyleLayer.dex
new file mode 100644
index 0000000..6a56dd7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/StyleLayer/StyleLayer.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/VectorTileStyleManager/VectorTileStyleManager$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/VectorTileStyleManager/VectorTileStyleManager$1.dex
new file mode 100644
index 0000000..f69f920
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/VectorTileStyleManager/VectorTileStyleManager$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/VectorTileStyleManager/VectorTileStyleManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/VectorTileStyleManager/VectorTileStyleManager.dex
new file mode 100644
index 0000000..b2967f2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/VectorTileStyleManager/VectorTileStyleManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCallout.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCallout.dex
new file mode 100644
index 0000000..c55a7ff
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCallout.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCalloutManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCalloutManager.dex
new file mode 100644
index 0000000..9f98afd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCalloutManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCircle.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCircle.dex
new file mode 100644
index 0000000..d28c300
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCircle.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCircleManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCircleManager.dex
new file mode 100644
index 0000000..701c4e7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapCircleManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapFeature.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapFeature.dex
new file mode 100644
index 0000000..44ebdfd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapFeature.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.dex
new file mode 100644
index 0000000..2a59681
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.dex
new file mode 100644
index 0000000..ae0b55d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline.dex
new file mode 100644
index 0000000..f2e9697
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolyline.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolylineManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolylineManager.dex
new file mode 100644
index 0000000..359b629
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapGradientPolylineManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapHeatmap.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapHeatmap.dex
new file mode 100644
index 0000000..72ca529
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapHeatmap.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapHeatmapManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapHeatmapManager.dex
new file mode 100644
index 0000000..069ad9c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapHeatmapManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLiteManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLiteManager.dex
new file mode 100644
index 0000000..ce20932
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLiteManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.dex
new file mode 100644
index 0000000..0e19c0d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTile.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTile.dex
new file mode 100644
index 0000000..be9f180
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTile.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTileManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTileManager.dex
new file mode 100644
index 0000000..d005732
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapLocalTileManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapManager.dex
new file mode 100644
index 0000000..dedde58
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker$1.dex
new file mode 100644
index 0000000..ba019cc
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker$2.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker$2.dex
new file mode 100644
index 0000000..8f55015
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker$2.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker.dex
new file mode 100644
index 0000000..359dcb1
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarker.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.dex
new file mode 100644
index 0000000..96e5abb
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarkerManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarkerManager.dex
new file mode 100644
index 0000000..0b7ba80
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapMarkerManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$1$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$1$1.dex
new file mode 100644
index 0000000..45325a9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$1$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$1.dex
new file mode 100644
index 0000000..7d4d40f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$2.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$2.dex
new file mode 100644
index 0000000..f0a0c2c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$2.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$3.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$3.dex
new file mode 100644
index 0000000..0a8c3bf
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$3.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$4.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$4.dex
new file mode 100644
index 0000000..248e95a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$4.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$5.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$5.dex
new file mode 100644
index 0000000..2cef2b3
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$5.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$6.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$6.dex
new file mode 100644
index 0000000..5ceed4a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$6.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$7$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$7$1.dex
new file mode 100644
index 0000000..89bbb67
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$7$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$7.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$7.dex
new file mode 100644
index 0000000..466d83c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule$7.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule.dex
new file mode 100644
index 0000000..58fb427
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapModule.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapOverlay.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapOverlay.dex
new file mode 100644
index 0000000..07fa073
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapOverlay.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapOverlayManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapOverlayManager.dex
new file mode 100644
index 0000000..ed8720c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapOverlayManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTile.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTile.dex
new file mode 100644
index 0000000..036168d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTile.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileManager.dex
new file mode 100644
index 0000000..5e13746
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.dex
new file mode 100644
index 0000000..f2e5693
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.dex
new file mode 100644
index 0000000..0ec45b7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.dex
new file mode 100644
index 0000000..fb1a250
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.dex
new file mode 100644
index 0000000..340e476
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider.dex
new file mode 100644
index 0000000..85eba2f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPMTileProvider.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolygon.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolygon.dex
new file mode 100644
index 0000000..667ca77
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolygon.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolygonManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolygonManager.dex
new file mode 100644
index 0000000..18997f1
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolygonManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolyline.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolyline.dex
new file mode 100644
index 0000000..a687ebc
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolyline.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolylineManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolylineManager.dex
new file mode 100644
index 0000000..db229db
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapPolylineManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.dex
new file mode 100644
index 0000000..89b5194
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapTileProvider.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapTileProvider.dex
new file mode 100644
index 0000000..d64ce94
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapTileProvider.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapUrlTile.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapUrlTile.dex
new file mode 100644
index 0000000..7e97451
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapUrlTile.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapUrlTileManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapUrlTileManager.dex
new file mode 100644
index 0000000..1b81433
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapUrlTileManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$1.dex
new file mode 100644
index 0000000..5981c1b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$10.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$10.dex
new file mode 100644
index 0000000..47baf5b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$10.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$11.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$11.dex
new file mode 100644
index 0000000..bab18bf
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$11.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$12.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$12.dex
new file mode 100644
index 0000000..7aaf7a1
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$12.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$13.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$13.dex
new file mode 100644
index 0000000..050e440
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$13.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$14.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$14.dex
new file mode 100644
index 0000000..b2da4b8
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$14.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$15.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$15.dex
new file mode 100644
index 0000000..bab2b18
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$15.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$16.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$16.dex
new file mode 100644
index 0000000..ab6c079
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$16.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$17.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$17.dex
new file mode 100644
index 0000000..0f8691f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$17.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$2.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$2.dex
new file mode 100644
index 0000000..4fd3788
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$2.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$3.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$3.dex
new file mode 100644
index 0000000..d03223a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$3.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$4.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$4.dex
new file mode 100644
index 0000000..12b7ba5
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$4.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$5.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$5.dex
new file mode 100644
index 0000000..ce0e905
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$5.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$6.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$6.dex
new file mode 100644
index 0000000..dedc077
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$6.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$7.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$7.dex
new file mode 100644
index 0000000..520650f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$7.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$8.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$8.dex
new file mode 100644
index 0000000..001540d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$8.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$9.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$9.dex
new file mode 100644
index 0000000..7f27b39
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView$9.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView.dex
new file mode 100644
index 0000000..bd123da
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapView.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.dex
new file mode 100644
index 0000000..2799688
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.dex
new file mode 100644
index 0000000..8b86302
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile.dex
new file mode 100644
index 0000000..a1bb025
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTile.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTileManager.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTileManager.dex
new file mode 100644
index 0000000..7b081a0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/AirMapWMSTileManager.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/BuildConfig.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/BuildConfig.dex
new file mode 100644
index 0000000..cb7a7c9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/BuildConfig.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FileUtil.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FileUtil.dex
new file mode 100644
index 0000000..b683597
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FileUtil.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource$1.dex
new file mode 100644
index 0000000..17b8c6c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource$2.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource$2.dex
new file mode 100644
index 0000000..4c6381a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource$2.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource.dex
new file mode 100644
index 0000000..05eab55
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/FusedLocationSource.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReadable.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReadable.dex
new file mode 100644
index 0000000..13aca7e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReadable.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReader$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReader$1.dex
new file mode 100644
index 0000000..2910482
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReader$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReader.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReader.dex
new file mode 100644
index 0000000..1f44944
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageReader.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageUtil.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageUtil.dex
new file mode 100644
index 0000000..b0c6379
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ImageUtil.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/LatLngBoundsUtils.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/LatLngBoundsUtils.dex
new file mode 100644
index 0000000..151a470
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/LatLngBoundsUtils.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/MapsPackage.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/MapsPackage.dex
new file mode 100644
index 0000000..919f175
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/MapsPackage.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/RegionChangeEvent.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/RegionChangeEvent.dex
new file mode 100644
index 0000000..df56483
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/RegionChangeEvent.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/SizeReportingShadowNode.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/SizeReportingShadowNode.dex
new file mode 100644
index 0000000..597c374
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/SizeReportingShadowNode.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewAttacherGroup.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewAttacherGroup.dex
new file mode 100644
index 0000000..cb8f719
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewAttacherGroup.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewChangesTracker$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewChangesTracker$1.dex
new file mode 100644
index 0000000..7aa28df
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewChangesTracker$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewChangesTracker.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewChangesTracker.dex
new file mode 100644
index 0000000..21f7414
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/com/airbnb/android/react/maps/ViewChangesTracker.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$1.dex
new file mode 100644
index 0000000..68dd612
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$1.dex
new file mode 100644
index 0000000..3a60b29
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Builder.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Builder.dex
new file mode 100644
index 0000000..2d55cf1
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Builder.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature$1.dex
new file mode 100644
index 0000000..c197f8a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature$Builder.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature$Builder.dex
new file mode 100644
index 0000000..4f36503
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature$Builder.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature.dex
new file mode 100644
index 0000000..7c43446
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Feature.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$FeatureOrBuilder.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$FeatureOrBuilder.dex
new file mode 100644
index 0000000..6cd4736
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$FeatureOrBuilder.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$GeomType$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$GeomType$1.dex
new file mode 100644
index 0000000..f4c453f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$GeomType$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$GeomType.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$GeomType.dex
new file mode 100644
index 0000000..6011839
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$GeomType.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer$1.dex
new file mode 100644
index 0000000..4a0a422
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer$Builder.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer$Builder.dex
new file mode 100644
index 0000000..f111cfd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer$Builder.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer.dex
new file mode 100644
index 0000000..161f319
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Layer.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$LayerOrBuilder.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$LayerOrBuilder.dex
new file mode 100644
index 0000000..224f1c1
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$LayerOrBuilder.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value$1.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value$1.dex
new file mode 100644
index 0000000..7934041
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value$1.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value$Builder.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value$Builder.dex
new file mode 100644
index 0000000..319fd4c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value$Builder.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value.dex
new file mode 100644
index 0000000..c2cd5b2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$Value.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$ValueOrBuilder.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$ValueOrBuilder.dex
new file mode 100644
index 0000000..e62572d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile$ValueOrBuilder.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile.dex
new file mode 100644
index 0000000..ee73176
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$Tile.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$TileOrBuilder.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$TileOrBuilder.dex
new file mode 100644
index 0000000..423798d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile$TileOrBuilder.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile.dex b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile.dex
new file mode 100644
index 0000000..4bd5f96
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/debug/vector_tile/VectorTile.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/desugar_graph.bin b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/desugar_graph.bin
new file mode 100644
index 0000000..601f245
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/79ec74cbf846acf2cbd7f3479f1de7f6/transformed/desugar_graph.bin differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/8f1d92028dff181c60691d0d989fad46/results.bin b/node_modules/react-native-maps/android/build/.transforms/8f1d92028dff181c60691d0d989fad46/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/8f1d92028dff181c60691d0d989fad46/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/react-native-maps/android/build/.transforms/8f1d92028dff181c60691d0d989fad46/transformed/classes/classes.dex b/node_modules/react-native-maps/android/build/.transforms/8f1d92028dff181c60691d0d989fad46/transformed/classes/classes.dex
new file mode 100644
index 0000000..955c28b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/8f1d92028dff181c60691d0d989fad46/transformed/classes/classes.dex differ
diff --git a/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/results.bin b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/results.bin
new file mode 100644
index 0000000..6e09b8c
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/results.bin
@@ -0,0 +1 @@
+o/out
diff --git a/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/AndroidManifest.xml b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/AndroidManifest.xml
new file mode 100644
index 0000000..116aee6
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/AndroidManifest.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.airbnb.android.react.maps" >
+
+    <uses-sdk
+        android:minSdkVersion="21"
+        android:targetSdkVersion="33" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/META-INF/com/android/build/gradle/aar-metadata.properties b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/META-INF/com/android/build/gradle/aar-metadata.properties
new file mode 100644
index 0000000..8c9c699
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/META-INF/com/android/build/gradle/aar-metadata.properties
@@ -0,0 +1,4 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minAndroidGradlePluginVersion=1.0.0
diff --git a/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/R.txt b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/R.txt
new file mode 100644
index 0000000..9752a2d
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/R.txt
@@ -0,0 +1,2136 @@
+int anim abc_fade_in 0x0
+int anim abc_fade_out 0x0
+int anim abc_grow_fade_in_from_bottom 0x0
+int anim abc_popup_enter 0x0
+int anim abc_popup_exit 0x0
+int anim abc_shrink_fade_out_from_bottom 0x0
+int anim abc_slide_in_bottom 0x0
+int anim abc_slide_in_top 0x0
+int anim abc_slide_out_bottom 0x0
+int anim abc_slide_out_top 0x0
+int anim abc_tooltip_enter 0x0
+int anim abc_tooltip_exit 0x0
+int anim btn_checkbox_to_checked_box_inner_merged_animation 0x0
+int anim btn_checkbox_to_checked_box_outer_merged_animation 0x0
+int anim btn_checkbox_to_checked_icon_null_animation 0x0
+int anim btn_checkbox_to_unchecked_box_inner_merged_animation 0x0
+int anim btn_checkbox_to_unchecked_check_path_merged_animation 0x0
+int anim btn_checkbox_to_unchecked_icon_null_animation 0x0
+int anim btn_radio_to_off_mtrl_dot_group_animation 0x0
+int anim btn_radio_to_off_mtrl_ring_outer_animation 0x0
+int anim btn_radio_to_off_mtrl_ring_outer_path_animation 0x0
+int anim btn_radio_to_on_mtrl_dot_group_animation 0x0
+int anim btn_radio_to_on_mtrl_ring_outer_animation 0x0
+int anim btn_radio_to_on_mtrl_ring_outer_path_animation 0x0
+int anim catalyst_fade_in 0x0
+int anim catalyst_fade_out 0x0
+int anim catalyst_push_up_in 0x0
+int anim catalyst_push_up_out 0x0
+int anim catalyst_slide_down 0x0
+int anim catalyst_slide_up 0x0
+int anim fragment_fast_out_extra_slow_in 0x0
+int animator fragment_close_enter 0x0
+int animator fragment_close_exit 0x0
+int animator fragment_fade_enter 0x0
+int animator fragment_fade_exit 0x0
+int animator fragment_open_enter 0x0
+int animator fragment_open_exit 0x0
+int attr actionBarDivider 0x0
+int attr actionBarItemBackground 0x0
+int attr actionBarPopupTheme 0x0
+int attr actionBarSize 0x0
+int attr actionBarSplitStyle 0x0
+int attr actionBarStyle 0x0
+int attr actionBarTabBarStyle 0x0
+int attr actionBarTabStyle 0x0
+int attr actionBarTabTextStyle 0x0
+int attr actionBarTheme 0x0
+int attr actionBarWidgetTheme 0x0
+int attr actionButtonStyle 0x0
+int attr actionDropDownStyle 0x0
+int attr actionLayout 0x0
+int attr actionMenuTextAppearance 0x0
+int attr actionMenuTextColor 0x0
+int attr actionModeBackground 0x0
+int attr actionModeCloseButtonStyle 0x0
+int attr actionModeCloseContentDescription 0x0
+int attr actionModeCloseDrawable 0x0
+int attr actionModeCopyDrawable 0x0
+int attr actionModeCutDrawable 0x0
+int attr actionModeFindDrawable 0x0
+int attr actionModePasteDrawable 0x0
+int attr actionModePopupWindowStyle 0x0
+int attr actionModeSelectAllDrawable 0x0
+int attr actionModeShareDrawable 0x0
+int attr actionModeSplitBackground 0x0
+int attr actionModeStyle 0x0
+int attr actionModeTheme 0x0
+int attr actionModeWebSearchDrawable 0x0
+int attr actionOverflowButtonStyle 0x0
+int attr actionOverflowMenuStyle 0x0
+int attr actionProviderClass 0x0
+int attr actionViewClass 0x0
+int attr activityChooserViewStyle 0x0
+int attr actualImageResource 0x0
+int attr actualImageScaleType 0x0
+int attr actualImageUri 0x0
+int attr alertDialogButtonGroupStyle 0x0
+int attr alertDialogCenterButtons 0x0
+int attr alertDialogStyle 0x0
+int attr alertDialogTheme 0x0
+int attr allowStacking 0x0
+int attr alpha 0x0
+int attr alphabeticModifiers 0x0
+int attr ambientEnabled 0x0
+int attr arrowHeadLength 0x0
+int attr arrowShaftLength 0x0
+int attr autoCompleteTextViewStyle 0x0
+int attr autoSizeMaxTextSize 0x0
+int attr autoSizeMinTextSize 0x0
+int attr autoSizePresetSizes 0x0
+int attr autoSizeStepGranularity 0x0
+int attr autoSizeTextType 0x0
+int attr autofillInlineSuggestionChip 0x0
+int attr autofillInlineSuggestionEndIconStyle 0x0
+int attr autofillInlineSuggestionStartIconStyle 0x0
+int attr autofillInlineSuggestionSubtitle 0x0
+int attr autofillInlineSuggestionTitle 0x0
+int attr background 0x0
+int attr backgroundColor 0x0
+int attr backgroundImage 0x0
+int attr backgroundSplit 0x0
+int attr backgroundStacked 0x0
+int attr backgroundTint 0x0
+int attr backgroundTintMode 0x0
+int attr barLength 0x0
+int attr borderlessButtonStyle 0x0
+int attr buttonBarButtonStyle 0x0
+int attr buttonBarNegativeButtonStyle 0x0
+int attr buttonBarNeutralButtonStyle 0x0
+int attr buttonBarPositiveButtonStyle 0x0
+int attr buttonBarStyle 0x0
+int attr buttonCompat 0x0
+int attr buttonGravity 0x0
+int attr buttonIconDimen 0x0
+int attr buttonPanelSideLayout 0x0
+int attr buttonSize 0x0
+int attr buttonStyle 0x0
+int attr buttonStyleSmall 0x0
+int attr buttonTint 0x0
+int attr buttonTintMode 0x0
+int attr cameraBearing 0x0
+int attr cameraMaxZoomPreference 0x0
+int attr cameraMinZoomPreference 0x0
+int attr cameraTargetLat 0x0
+int attr cameraTargetLng 0x0
+int attr cameraTilt 0x0
+int attr cameraZoom 0x0
+int attr checkMarkCompat 0x0
+int attr checkMarkTint 0x0
+int attr checkMarkTintMode 0x0
+int attr checkboxStyle 0x0
+int attr checkedTextViewStyle 0x0
+int attr circleCrop 0x0
+int attr closeIcon 0x0
+int attr closeItemLayout 0x0
+int attr collapseContentDescription 0x0
+int attr collapseIcon 0x0
+int attr color 0x0
+int attr colorAccent 0x0
+int attr colorBackgroundFloating 0x0
+int attr colorButtonNormal 0x0
+int attr colorControlActivated 0x0
+int attr colorControlHighlight 0x0
+int attr colorControlNormal 0x0
+int attr colorError 0x0
+int attr colorPrimary 0x0
+int attr colorPrimaryDark 0x0
+int attr colorScheme 0x0
+int attr colorSwitchThumbNormal 0x0
+int attr commitIcon 0x0
+int attr contentDescription 0x0
+int attr contentInsetEnd 0x0
+int attr contentInsetEndWithActions 0x0
+int attr contentInsetLeft 0x0
+int attr contentInsetRight 0x0
+int attr contentInsetStart 0x0
+int attr contentInsetStartWithNavigation 0x0
+int attr controlBackground 0x0
+int attr customNavigationLayout 0x0
+int attr defaultQueryHint 0x0
+int attr dialogCornerRadius 0x0
+int attr dialogPreferredPadding 0x0
+int attr dialogTheme 0x0
+int attr displayOptions 0x0
+int attr divider 0x0
+int attr dividerHorizontal 0x0
+int attr dividerPadding 0x0
+int attr dividerVertical 0x0
+int attr drawableBottomCompat 0x0
+int attr drawableEndCompat 0x0
+int attr drawableLeftCompat 0x0
+int attr drawableRightCompat 0x0
+int attr drawableSize 0x0
+int attr drawableStartCompat 0x0
+int attr drawableTint 0x0
+int attr drawableTintMode 0x0
+int attr drawableTopCompat 0x0
+int attr drawerArrowStyle 0x0
+int attr dropDownListViewStyle 0x0
+int attr dropdownListPreferredItemHeight 0x0
+int attr editTextBackground 0x0
+int attr editTextColor 0x0
+int attr editTextStyle 0x0
+int attr elevation 0x0
+int attr emojiCompatEnabled 0x0
+int attr expandActivityOverflowButtonDrawable 0x0
+int attr fadeDuration 0x0
+int attr failureImage 0x0
+int attr failureImageScaleType 0x0
+int attr firstBaselineToTopHeight 0x0
+int attr font 0x0
+int attr fontFamily 0x0
+int attr fontProviderAuthority 0x0
+int attr fontProviderCerts 0x0
+int attr fontProviderFetchStrategy 0x0
+int attr fontProviderFetchTimeout 0x0
+int attr fontProviderPackage 0x0
+int attr fontProviderQuery 0x0
+int attr fontProviderSystemFontFamily 0x0
+int attr fontStyle 0x0
+int attr fontVariationSettings 0x0
+int attr fontWeight 0x0
+int attr gapBetweenBars 0x0
+int attr goIcon 0x0
+int attr height 0x0
+int attr hideOnContentScroll 0x0
+int attr homeAsUpIndicator 0x0
+int attr homeLayout 0x0
+int attr icon 0x0
+int attr iconTint 0x0
+int attr iconTintMode 0x0
+int attr iconifiedByDefault 0x0
+int attr imageAspectRatio 0x0
+int attr imageAspectRatioAdjust 0x0
+int attr imageButtonStyle 0x0
+int attr indeterminateProgressStyle 0x0
+int attr initialActivityCount 0x0
+int attr isAutofillInlineSuggestionTheme 0x0
+int attr isLightTheme 0x0
+int attr itemPadding 0x0
+int attr lStar 0x0
+int attr lastBaselineToBottomHeight 0x0
+int attr latLngBoundsNorthEastLatitude 0x0
+int attr latLngBoundsNorthEastLongitude 0x0
+int attr latLngBoundsSouthWestLatitude 0x0
+int attr latLngBoundsSouthWestLongitude 0x0
+int attr layout 0x0
+int attr lineHeight 0x0
+int attr listChoiceBackgroundIndicator 0x0
+int attr listChoiceIndicatorMultipleAnimated 0x0
+int attr listChoiceIndicatorSingleAnimated 0x0
+int attr listDividerAlertDialog 0x0
+int attr listItemLayout 0x0
+int attr listLayout 0x0
+int attr listMenuViewStyle 0x0
+int attr listPopupWindowStyle 0x0
+int attr listPreferredItemHeight 0x0
+int attr listPreferredItemHeightLarge 0x0
+int attr listPreferredItemHeightSmall 0x0
+int attr listPreferredItemPaddingEnd 0x0
+int attr listPreferredItemPaddingLeft 0x0
+int attr listPreferredItemPaddingRight 0x0
+int attr listPreferredItemPaddingStart 0x0
+int attr liteMode 0x0
+int attr logo 0x0
+int attr logoDescription 0x0
+int attr mapId 0x0
+int attr mapType 0x0
+int attr maxButtonHeight 0x0
+int attr measureWithLargestChild 0x0
+int attr menu 0x0
+int attr multiChoiceItemLayout 0x0
+int attr navigationContentDescription 0x0
+int attr navigationIcon 0x0
+int attr navigationMode 0x0
+int attr nestedScrollViewStyle 0x0
+int attr numericModifiers 0x0
+int attr overlapAnchor 0x0
+int attr overlayImage 0x0
+int attr paddingBottomNoButtons 0x0
+int attr paddingEnd 0x0
+int attr paddingStart 0x0
+int attr paddingTopNoTitle 0x0
+int attr panelBackground 0x0
+int attr panelMenuListTheme 0x0
+int attr panelMenuListWidth 0x0
+int attr placeholderImage 0x0
+int attr placeholderImageScaleType 0x0
+int attr popupMenuStyle 0x0
+int attr popupTheme 0x0
+int attr popupWindowStyle 0x0
+int attr preserveIconSpacing 0x0
+int attr pressedStateOverlayImage 0x0
+int attr progressBarAutoRotateInterval 0x0
+int attr progressBarImage 0x0
+int attr progressBarImageScaleType 0x0
+int attr progressBarPadding 0x0
+int attr progressBarStyle 0x0
+int attr queryBackground 0x0
+int attr queryHint 0x0
+int attr queryPatterns 0x0
+int attr radioButtonStyle 0x0
+int attr ratingBarStyle 0x0
+int attr ratingBarStyleIndicator 0x0
+int attr ratingBarStyleSmall 0x0
+int attr retryImage 0x0
+int attr retryImageScaleType 0x0
+int attr roundAsCircle 0x0
+int attr roundBottomEnd 0x0
+int attr roundBottomLeft 0x0
+int attr roundBottomRight 0x0
+int attr roundBottomStart 0x0
+int attr roundTopEnd 0x0
+int attr roundTopLeft 0x0
+int attr roundTopRight 0x0
+int attr roundTopStart 0x0
+int attr roundWithOverlayColor 0x0
+int attr roundedCornerRadius 0x0
+int attr roundingBorderColor 0x0
+int attr roundingBorderPadding 0x0
+int attr roundingBorderWidth 0x0
+int attr scopeUris 0x0
+int attr searchHintIcon 0x0
+int attr searchIcon 0x0
+int attr searchViewStyle 0x0
+int attr seekBarStyle 0x0
+int attr selectableItemBackground 0x0
+int attr selectableItemBackgroundBorderless 0x0
+int attr shortcutMatchRequired 0x0
+int attr showAsAction 0x0
+int attr showDividers 0x0
+int attr showText 0x0
+int attr showTitle 0x0
+int attr singleChoiceItemLayout 0x0
+int attr spinBars 0x0
+int attr spinnerDropDownItemStyle 0x0
+int attr spinnerStyle 0x0
+int attr splitTrack 0x0
+int attr srcCompat 0x0
+int attr state_above_anchor 0x0
+int attr subMenuArrow 0x0
+int attr submitBackground 0x0
+int attr subtitle 0x0
+int attr subtitleTextAppearance 0x0
+int attr subtitleTextColor 0x0
+int attr subtitleTextStyle 0x0
+int attr suggestionRowLayout 0x0
+int attr switchMinWidth 0x0
+int attr switchPadding 0x0
+int attr switchStyle 0x0
+int attr switchTextAppearance 0x0
+int attr textAllCaps 0x0
+int attr textAppearanceLargePopupMenu 0x0
+int attr textAppearanceListItem 0x0
+int attr textAppearanceListItemSecondary 0x0
+int attr textAppearanceListItemSmall 0x0
+int attr textAppearancePopupMenuHeader 0x0
+int attr textAppearanceSearchResultSubtitle 0x0
+int attr textAppearanceSearchResultTitle 0x0
+int attr textAppearanceSmallPopupMenu 0x0
+int attr textColorAlertDialogListItem 0x0
+int attr textColorSearchUrl 0x0
+int attr textLocale 0x0
+int attr theme 0x0
+int attr thickness 0x0
+int attr thumbTextPadding 0x0
+int attr thumbTint 0x0
+int attr thumbTintMode 0x0
+int attr tickMark 0x0
+int attr tickMarkTint 0x0
+int attr tickMarkTintMode 0x0
+int attr tint 0x0
+int attr tintMode 0x0
+int attr title 0x0
+int attr titleMargin 0x0
+int attr titleMarginBottom 0x0
+int attr titleMarginEnd 0x0
+int attr titleMarginStart 0x0
+int attr titleMarginTop 0x0
+int attr titleMargins 0x0
+int attr titleTextAppearance 0x0
+int attr titleTextColor 0x0
+int attr titleTextStyle 0x0
+int attr toolbarNavigationButtonStyle 0x0
+int attr toolbarStyle 0x0
+int attr tooltipForegroundColor 0x0
+int attr tooltipFrameBackground 0x0
+int attr tooltipText 0x0
+int attr track 0x0
+int attr trackTint 0x0
+int attr trackTintMode 0x0
+int attr ttcIndex 0x0
+int attr uiCompass 0x0
+int attr uiMapToolbar 0x0
+int attr uiRotateGestures 0x0
+int attr uiScrollGestures 0x0
+int attr uiScrollGesturesDuringRotateOrZoom 0x0
+int attr uiTiltGestures 0x0
+int attr uiZoomControls 0x0
+int attr uiZoomGestures 0x0
+int attr useViewLifecycle 0x0
+int attr viewAspectRatio 0x0
+int attr viewInflaterClass 0x0
+int attr voiceIcon 0x0
+int attr windowActionBar 0x0
+int attr windowActionBarOverlay 0x0
+int attr windowActionModeOverlay 0x0
+int attr windowFixedHeightMajor 0x0
+int attr windowFixedHeightMinor 0x0
+int attr windowFixedWidthMajor 0x0
+int attr windowFixedWidthMinor 0x0
+int attr windowMinWidthMajor 0x0
+int attr windowMinWidthMinor 0x0
+int attr windowNoTitle 0x0
+int attr zOrderOnTop 0x0
+int bool abc_action_bar_embed_tabs 0x0
+int bool abc_config_actionMenuItemAllCaps 0x0
+int bool enable_system_alarm_service_default 0x0
+int bool enable_system_foreground_service_default 0x0
+int bool enable_system_job_service_default 0x0
+int bool workmanager_test_configuration 0x0
+int color abc_background_cache_hint_selector_material_dark 0x0
+int color abc_background_cache_hint_selector_material_light 0x0
+int color abc_btn_colored_borderless_text_material 0x0
+int color abc_btn_colored_text_material 0x0
+int color abc_color_highlight_material 0x0
+int color abc_decor_view_status_guard 0x0
+int color abc_decor_view_status_guard_light 0x0
+int color abc_hint_foreground_material_dark 0x0
+int color abc_hint_foreground_material_light 0x0
+int color abc_primary_text_disable_only_material_dark 0x0
+int color abc_primary_text_disable_only_material_light 0x0
+int color abc_primary_text_material_dark 0x0
+int color abc_primary_text_material_light 0x0
+int color abc_search_url_text 0x0
+int color abc_search_url_text_normal 0x0
+int color abc_search_url_text_pressed 0x0
+int color abc_search_url_text_selected 0x0
+int color abc_secondary_text_material_dark 0x0
+int color abc_secondary_text_material_light 0x0
+int color abc_tint_btn_checkable 0x0
+int color abc_tint_default 0x0
+int color abc_tint_edittext 0x0
+int color abc_tint_seek_thumb 0x0
+int color abc_tint_spinner 0x0
+int color abc_tint_switch_track 0x0
+int color accent_material_dark 0x0
+int color accent_material_light 0x0
+int color androidx_core_ripple_material_light 0x0
+int color androidx_core_secondary_text_default_material_light 0x0
+int color background_floating_material_dark 0x0
+int color background_floating_material_light 0x0
+int color background_material_dark 0x0
+int color background_material_light 0x0
+int color bright_foreground_disabled_material_dark 0x0
+int color bright_foreground_disabled_material_light 0x0
+int color bright_foreground_inverse_material_dark 0x0
+int color bright_foreground_inverse_material_light 0x0
+int color bright_foreground_material_dark 0x0
+int color bright_foreground_material_light 0x0
+int color button_material_dark 0x0
+int color button_material_light 0x0
+int color catalyst_logbox_background 0x0
+int color catalyst_redbox_background 0x0
+int color common_google_signin_btn_text_dark 0x0
+int color common_google_signin_btn_text_dark_default 0x0
+int color common_google_signin_btn_text_dark_disabled 0x0
+int color common_google_signin_btn_text_dark_focused 0x0
+int color common_google_signin_btn_text_dark_pressed 0x0
+int color common_google_signin_btn_text_light 0x0
+int color common_google_signin_btn_text_light_default 0x0
+int color common_google_signin_btn_text_light_disabled 0x0
+int color common_google_signin_btn_text_light_focused 0x0
+int color common_google_signin_btn_text_light_pressed 0x0
+int color common_google_signin_btn_tint 0x0
+int color dim_foreground_disabled_material_dark 0x0
+int color dim_foreground_disabled_material_light 0x0
+int color dim_foreground_material_dark 0x0
+int color dim_foreground_material_light 0x0
+int color error_color_material_dark 0x0
+int color error_color_material_light 0x0
+int color foreground_material_dark 0x0
+int color foreground_material_light 0x0
+int color highlighted_text_material_dark 0x0
+int color highlighted_text_material_light 0x0
+int color material_blue_grey_800 0x0
+int color material_blue_grey_900 0x0
+int color material_blue_grey_950 0x0
+int color material_deep_teal_200 0x0
+int color material_deep_teal_500 0x0
+int color material_grey_100 0x0
+int color material_grey_300 0x0
+int color material_grey_50 0x0
+int color material_grey_600 0x0
+int color material_grey_800 0x0
+int color material_grey_850 0x0
+int color material_grey_900 0x0
+int color notification_action_color_filter 0x0
+int color notification_icon_bg_color 0x0
+int color primary_dark_material_dark 0x0
+int color primary_dark_material_light 0x0
+int color primary_material_dark 0x0
+int color primary_material_light 0x0
+int color primary_text_default_material_dark 0x0
+int color primary_text_default_material_light 0x0
+int color primary_text_disabled_material_dark 0x0
+int color primary_text_disabled_material_light 0x0
+int color ripple_material_dark 0x0
+int color ripple_material_light 0x0
+int color secondary_text_default_material_dark 0x0
+int color secondary_text_default_material_light 0x0
+int color secondary_text_disabled_material_dark 0x0
+int color secondary_text_disabled_material_light 0x0
+int color switch_thumb_disabled_material_dark 0x0
+int color switch_thumb_disabled_material_light 0x0
+int color switch_thumb_material_dark 0x0
+int color switch_thumb_material_light 0x0
+int color switch_thumb_normal_material_dark 0x0
+int color switch_thumb_normal_material_light 0x0
+int color tooltip_background_dark 0x0
+int color tooltip_background_light 0x0
+int dimen abc_action_bar_content_inset_material 0x0
+int dimen abc_action_bar_content_inset_with_nav 0x0
+int dimen abc_action_bar_default_height_material 0x0
+int dimen abc_action_bar_default_padding_end_material 0x0
+int dimen abc_action_bar_default_padding_start_material 0x0
+int dimen abc_action_bar_elevation_material 0x0
+int dimen abc_action_bar_icon_vertical_padding_material 0x0
+int dimen abc_action_bar_overflow_padding_end_material 0x0
+int dimen abc_action_bar_overflow_padding_start_material 0x0
+int dimen abc_action_bar_stacked_max_height 0x0
+int dimen abc_action_bar_stacked_tab_max_width 0x0
+int dimen abc_action_bar_subtitle_bottom_margin_material 0x0
+int dimen abc_action_bar_subtitle_top_margin_material 0x0
+int dimen abc_action_button_min_height_material 0x0
+int dimen abc_action_button_min_width_material 0x0
+int dimen abc_action_button_min_width_overflow_material 0x0
+int dimen abc_alert_dialog_button_bar_height 0x0
+int dimen abc_alert_dialog_button_dimen 0x0
+int dimen abc_button_inset_horizontal_material 0x0
+int dimen abc_button_inset_vertical_material 0x0
+int dimen abc_button_padding_horizontal_material 0x0
+int dimen abc_button_padding_vertical_material 0x0
+int dimen abc_cascading_menus_min_smallest_width 0x0
+int dimen abc_config_prefDialogWidth 0x0
+int dimen abc_control_corner_material 0x0
+int dimen abc_control_inset_material 0x0
+int dimen abc_control_padding_material 0x0
+int dimen abc_dialog_corner_radius_material 0x0
+int dimen abc_dialog_fixed_height_major 0x0
+int dimen abc_dialog_fixed_height_minor 0x0
+int dimen abc_dialog_fixed_width_major 0x0
+int dimen abc_dialog_fixed_width_minor 0x0
+int dimen abc_dialog_list_padding_bottom_no_buttons 0x0
+int dimen abc_dialog_list_padding_top_no_title 0x0
+int dimen abc_dialog_min_width_major 0x0
+int dimen abc_dialog_min_width_minor 0x0
+int dimen abc_dialog_padding_material 0x0
+int dimen abc_dialog_padding_top_material 0x0
+int dimen abc_dialog_title_divider_material 0x0
+int dimen abc_disabled_alpha_material_dark 0x0
+int dimen abc_disabled_alpha_material_light 0x0
+int dimen abc_dropdownitem_icon_width 0x0
+int dimen abc_dropdownitem_text_padding_left 0x0
+int dimen abc_dropdownitem_text_padding_right 0x0
+int dimen abc_edit_text_inset_bottom_material 0x0
+int dimen abc_edit_text_inset_horizontal_material 0x0
+int dimen abc_edit_text_inset_top_material 0x0
+int dimen abc_floating_window_z 0x0
+int dimen abc_list_item_height_large_material 0x0
+int dimen abc_list_item_height_material 0x0
+int dimen abc_list_item_height_small_material 0x0
+int dimen abc_list_item_padding_horizontal_material 0x0
+int dimen abc_panel_menu_list_width 0x0
+int dimen abc_progress_bar_height_material 0x0
+int dimen abc_search_view_preferred_height 0x0
+int dimen abc_search_view_preferred_width 0x0
+int dimen abc_seekbar_track_background_height_material 0x0
+int dimen abc_seekbar_track_progress_height_material 0x0
+int dimen abc_select_dialog_padding_start_material 0x0
+int dimen abc_star_big 0x0
+int dimen abc_star_medium 0x0
+int dimen abc_star_small 0x0
+int dimen abc_switch_padding 0x0
+int dimen abc_text_size_body_1_material 0x0
+int dimen abc_text_size_body_2_material 0x0
+int dimen abc_text_size_button_material 0x0
+int dimen abc_text_size_caption_material 0x0
+int dimen abc_text_size_display_1_material 0x0
+int dimen abc_text_size_display_2_material 0x0
+int dimen abc_text_size_display_3_material 0x0
+int dimen abc_text_size_display_4_material 0x0
+int dimen abc_text_size_headline_material 0x0
+int dimen abc_text_size_large_material 0x0
+int dimen abc_text_size_medium_material 0x0
+int dimen abc_text_size_menu_header_material 0x0
+int dimen abc_text_size_menu_material 0x0
+int dimen abc_text_size_small_material 0x0
+int dimen abc_text_size_subhead_material 0x0
+int dimen abc_text_size_subtitle_material_toolbar 0x0
+int dimen abc_text_size_title_material 0x0
+int dimen abc_text_size_title_material_toolbar 0x0
+int dimen autofill_inline_suggestion_icon_size 0x0
+int dimen compat_button_inset_horizontal_material 0x0
+int dimen compat_button_inset_vertical_material 0x0
+int dimen compat_button_padding_horizontal_material 0x0
+int dimen compat_button_padding_vertical_material 0x0
+int dimen compat_control_corner_material 0x0
+int dimen compat_notification_large_icon_max_height 0x0
+int dimen compat_notification_large_icon_max_width 0x0
+int dimen disabled_alpha_material_dark 0x0
+int dimen disabled_alpha_material_light 0x0
+int dimen highlight_alpha_material_colored 0x0
+int dimen highlight_alpha_material_dark 0x0
+int dimen highlight_alpha_material_light 0x0
+int dimen hint_alpha_material_dark 0x0
+int dimen hint_alpha_material_light 0x0
+int dimen hint_pressed_alpha_material_dark 0x0
+int dimen hint_pressed_alpha_material_light 0x0
+int dimen notification_action_icon_size 0x0
+int dimen notification_action_text_size 0x0
+int dimen notification_big_circle_margin 0x0
+int dimen notification_content_margin_start 0x0
+int dimen notification_large_icon_height 0x0
+int dimen notification_large_icon_width 0x0
+int dimen notification_main_column_padding_top 0x0
+int dimen notification_media_narrow_margin 0x0
+int dimen notification_right_icon_size 0x0
+int dimen notification_right_side_padding_top 0x0
+int dimen notification_small_icon_background_padding 0x0
+int dimen notification_small_icon_size_as_large 0x0
+int dimen notification_subtext_size 0x0
+int dimen notification_top_pad 0x0
+int dimen notification_top_pad_large_text 0x0
+int dimen tooltip_corner_radius 0x0
+int dimen tooltip_horizontal_padding 0x0
+int dimen tooltip_margin 0x0
+int dimen tooltip_precise_anchor_extra_offset 0x0
+int dimen tooltip_precise_anchor_threshold 0x0
+int dimen tooltip_vertical_padding 0x0
+int dimen tooltip_y_offset_non_touch 0x0
+int dimen tooltip_y_offset_touch 0x0
+int drawable abc_ab_share_pack_mtrl_alpha 0x0
+int drawable abc_action_bar_item_background_material 0x0
+int drawable abc_btn_borderless_material 0x0
+int drawable abc_btn_check_material 0x0
+int drawable abc_btn_check_material_anim 0x0
+int drawable abc_btn_check_to_on_mtrl_000 0x0
+int drawable abc_btn_check_to_on_mtrl_015 0x0
+int drawable abc_btn_colored_material 0x0
+int drawable abc_btn_default_mtrl_shape 0x0
+int drawable abc_btn_radio_material 0x0
+int drawable abc_btn_radio_material_anim 0x0
+int drawable abc_btn_radio_to_on_mtrl_000 0x0
+int drawable abc_btn_radio_to_on_mtrl_015 0x0
+int drawable abc_btn_switch_to_on_mtrl_00001 0x0
+int drawable abc_btn_switch_to_on_mtrl_00012 0x0
+int drawable abc_cab_background_internal_bg 0x0
+int drawable abc_cab_background_top_material 0x0
+int drawable abc_cab_background_top_mtrl_alpha 0x0
+int drawable abc_control_background_material 0x0
+int drawable abc_dialog_material_background 0x0
+int drawable abc_edit_text_material 0x0
+int drawable abc_ic_ab_back_material 0x0
+int drawable abc_ic_arrow_drop_right_black_24dp 0x0
+int drawable abc_ic_clear_material 0x0
+int drawable abc_ic_commit_search_api_mtrl_alpha 0x0
+int drawable abc_ic_go_search_api_material 0x0
+int drawable abc_ic_menu_copy_mtrl_am_alpha 0x0
+int drawable abc_ic_menu_cut_mtrl_alpha 0x0
+int drawable abc_ic_menu_overflow_material 0x0
+int drawable abc_ic_menu_paste_mtrl_am_alpha 0x0
+int drawable abc_ic_menu_selectall_mtrl_alpha 0x0
+int drawable abc_ic_menu_share_mtrl_alpha 0x0
+int drawable abc_ic_search_api_material 0x0
+int drawable abc_ic_voice_search_api_material 0x0
+int drawable abc_item_background_holo_dark 0x0
+int drawable abc_item_background_holo_light 0x0
+int drawable abc_list_divider_material 0x0
+int drawable abc_list_divider_mtrl_alpha 0x0
+int drawable abc_list_focused_holo 0x0
+int drawable abc_list_longpressed_holo 0x0
+int drawable abc_list_pressed_holo_dark 0x0
+int drawable abc_list_pressed_holo_light 0x0
+int drawable abc_list_selector_background_transition_holo_dark 0x0
+int drawable abc_list_selector_background_transition_holo_light 0x0
+int drawable abc_list_selector_disabled_holo_dark 0x0
+int drawable abc_list_selector_disabled_holo_light 0x0
+int drawable abc_list_selector_holo_dark 0x0
+int drawable abc_list_selector_holo_light 0x0
+int drawable abc_menu_hardkey_panel_mtrl_mult 0x0
+int drawable abc_popup_background_mtrl_mult 0x0
+int drawable abc_ratingbar_indicator_material 0x0
+int drawable abc_ratingbar_material 0x0
+int drawable abc_ratingbar_small_material 0x0
+int drawable abc_scrubber_control_off_mtrl_alpha 0x0
+int drawable abc_scrubber_control_to_pressed_mtrl_000 0x0
+int drawable abc_scrubber_control_to_pressed_mtrl_005 0x0
+int drawable abc_scrubber_primary_mtrl_alpha 0x0
+int drawable abc_scrubber_track_mtrl_alpha 0x0
+int drawable abc_seekbar_thumb_material 0x0
+int drawable abc_seekbar_tick_mark_material 0x0
+int drawable abc_seekbar_track_material 0x0
+int drawable abc_spinner_mtrl_am_alpha 0x0
+int drawable abc_spinner_textfield_background_material 0x0
+int drawable abc_star_black_48dp 0x0
+int drawable abc_star_half_black_48dp 0x0
+int drawable abc_switch_thumb_material 0x0
+int drawable abc_switch_track_mtrl_alpha 0x0
+int drawable abc_tab_indicator_material 0x0
+int drawable abc_tab_indicator_mtrl_alpha 0x0
+int drawable abc_text_cursor_material 0x0
+int drawable abc_text_select_handle_left_mtrl 0x0
+int drawable abc_text_select_handle_middle_mtrl 0x0
+int drawable abc_text_select_handle_right_mtrl 0x0
+int drawable abc_textfield_activated_mtrl_alpha 0x0
+int drawable abc_textfield_default_mtrl_alpha 0x0
+int drawable abc_textfield_search_activated_mtrl_alpha 0x0
+int drawable abc_textfield_search_default_mtrl_alpha 0x0
+int drawable abc_textfield_search_material 0x0
+int drawable abc_vector_test 0x0
+int drawable amu_bubble_mask 0x0
+int drawable amu_bubble_shadow 0x0
+int drawable autofill_inline_suggestion_chip_background 0x0
+int drawable btn_checkbox_checked_mtrl 0x0
+int drawable btn_checkbox_checked_to_unchecked_mtrl_animation 0x0
+int drawable btn_checkbox_unchecked_mtrl 0x0
+int drawable btn_checkbox_unchecked_to_checked_mtrl_animation 0x0
+int drawable btn_radio_off_mtrl 0x0
+int drawable btn_radio_off_to_on_mtrl_animation 0x0
+int drawable btn_radio_on_mtrl 0x0
+int drawable btn_radio_on_to_off_mtrl_animation 0x0
+int drawable common_full_open_on_phone 0x0
+int drawable common_google_signin_btn_icon_dark 0x0
+int drawable common_google_signin_btn_icon_dark_disabled 0x0
+int drawable common_google_signin_btn_icon_dark_focused 0x0
+int drawable common_google_signin_btn_icon_dark_normal 0x0
+int drawable common_google_signin_btn_icon_dark_normal_background 0x0
+int drawable common_google_signin_btn_icon_dark_pressed 0x0
+int drawable common_google_signin_btn_icon_disabled 0x0
+int drawable common_google_signin_btn_icon_light 0x0
+int drawable common_google_signin_btn_icon_light_disabled 0x0
+int drawable common_google_signin_btn_icon_light_focused 0x0
+int drawable common_google_signin_btn_icon_light_normal 0x0
+int drawable common_google_signin_btn_icon_light_normal_background 0x0
+int drawable common_google_signin_btn_icon_light_pressed 0x0
+int drawable common_google_signin_btn_text_dark 0x0
+int drawable common_google_signin_btn_text_dark_disabled 0x0
+int drawable common_google_signin_btn_text_dark_focused 0x0
+int drawable common_google_signin_btn_text_dark_normal 0x0
+int drawable common_google_signin_btn_text_dark_normal_background 0x0
+int drawable common_google_signin_btn_text_dark_pressed 0x0
+int drawable common_google_signin_btn_text_disabled 0x0
+int drawable common_google_signin_btn_text_light 0x0
+int drawable common_google_signin_btn_text_light_disabled 0x0
+int drawable common_google_signin_btn_text_light_focused 0x0
+int drawable common_google_signin_btn_text_light_normal 0x0
+int drawable common_google_signin_btn_text_light_normal_background 0x0
+int drawable common_google_signin_btn_text_light_pressed 0x0
+int drawable common_ic_googleplayservices 0x0
+int drawable googleg_disabled_color_18 0x0
+int drawable googleg_standard_color_18 0x0
+int drawable notification_action_background 0x0
+int drawable notification_bg 0x0
+int drawable notification_bg_low 0x0
+int drawable notification_bg_low_normal 0x0
+int drawable notification_bg_low_pressed 0x0
+int drawable notification_bg_normal 0x0
+int drawable notification_bg_normal_pressed 0x0
+int drawable notification_icon_background 0x0
+int drawable notification_template_icon_bg 0x0
+int drawable notification_template_icon_low_bg 0x0
+int drawable notification_tile_bg 0x0
+int drawable notify_panel_notification_icon_bg 0x0
+int drawable redbox_top_border_background 0x0
+int drawable test_level_drawable 0x0
+int drawable tooltip_frame_dark 0x0
+int drawable tooltip_frame_light 0x0
+int id accessibility_action_clickable_span 0x0
+int id accessibility_actions 0x0
+int id accessibility_collection 0x0
+int id accessibility_collection_item 0x0
+int id accessibility_custom_action_0 0x0
+int id accessibility_custom_action_1 0x0
+int id accessibility_custom_action_10 0x0
+int id accessibility_custom_action_11 0x0
+int id accessibility_custom_action_12 0x0
+int id accessibility_custom_action_13 0x0
+int id accessibility_custom_action_14 0x0
+int id accessibility_custom_action_15 0x0
+int id accessibility_custom_action_16 0x0
+int id accessibility_custom_action_17 0x0
+int id accessibility_custom_action_18 0x0
+int id accessibility_custom_action_19 0x0
+int id accessibility_custom_action_2 0x0
+int id accessibility_custom_action_20 0x0
+int id accessibility_custom_action_21 0x0
+int id accessibility_custom_action_22 0x0
+int id accessibility_custom_action_23 0x0
+int id accessibility_custom_action_24 0x0
+int id accessibility_custom_action_25 0x0
+int id accessibility_custom_action_26 0x0
+int id accessibility_custom_action_27 0x0
+int id accessibility_custom_action_28 0x0
+int id accessibility_custom_action_29 0x0
+int id accessibility_custom_action_3 0x0
+int id accessibility_custom_action_30 0x0
+int id accessibility_custom_action_31 0x0
+int id accessibility_custom_action_4 0x0
+int id accessibility_custom_action_5 0x0
+int id accessibility_custom_action_6 0x0
+int id accessibility_custom_action_7 0x0
+int id accessibility_custom_action_8 0x0
+int id accessibility_custom_action_9 0x0
+int id accessibility_hint 0x0
+int id accessibility_label 0x0
+int id accessibility_links 0x0
+int id accessibility_role 0x0
+int id accessibility_state 0x0
+int id accessibility_value 0x0
+int id action_bar 0x0
+int id action_bar_activity_content 0x0
+int id action_bar_container 0x0
+int id action_bar_root 0x0
+int id action_bar_spinner 0x0
+int id action_bar_subtitle 0x0
+int id action_bar_title 0x0
+int id action_container 0x0
+int id action_context_bar 0x0
+int id action_divider 0x0
+int id action_image 0x0
+int id action_menu_divider 0x0
+int id action_menu_presenter 0x0
+int id action_mode_bar 0x0
+int id action_mode_bar_stub 0x0
+int id action_mode_close_button 0x0
+int id action_text 0x0
+int id actions 0x0
+int id activity_chooser_view_content 0x0
+int id add 0x0
+int id adjust_height 0x0
+int id adjust_width 0x0
+int id alertTitle 0x0
+int id amu_text 0x0
+int id async 0x0
+int id auto 0x0
+int id autofill_inline_suggestion_end_icon 0x0
+int id autofill_inline_suggestion_start_icon 0x0
+int id autofill_inline_suggestion_subtitle 0x0
+int id autofill_inline_suggestion_title 0x0
+int id blocking 0x0
+int id buttonPanel 0x0
+int id catalyst_redbox_title 0x0
+int id center 0x0
+int id centerCrop 0x0
+int id centerInside 0x0
+int id checkbox 0x0
+int id checked 0x0
+int id chronometer 0x0
+int id content 0x0
+int id contentPanel 0x0
+int id custom 0x0
+int id customPanel 0x0
+int id dark 0x0
+int id decor_content_parent 0x0
+int id default_activity_button 0x0
+int id dialog_button 0x0
+int id edit_query 0x0
+int id expand_activities_button 0x0
+int id expanded_menu 0x0
+int id fitBottomStart 0x0
+int id fitCenter 0x0
+int id fitEnd 0x0
+int id fitStart 0x0
+int id fitXY 0x0
+int id focusCrop 0x0
+int id forever 0x0
+int id fps_text 0x0
+int id fragment_container_view_tag 0x0
+int id group_divider 0x0
+int id home 0x0
+int id hybrid 0x0
+int id icon 0x0
+int id icon_group 0x0
+int id icon_only 0x0
+int id image 0x0
+int id info 0x0
+int id italic 0x0
+int id item1 0x0
+int id item2 0x0
+int id item3 0x0
+int id item4 0x0
+int id labelled_by 0x0
+int id light 0x0
+int id line1 0x0
+int id line3 0x0
+int id listMode 0x0
+int id list_item 0x0
+int id message 0x0
+int id multiply 0x0
+int id none 0x0
+int id normal 0x0
+int id notification_background 0x0
+int id notification_main_column 0x0
+int id notification_main_column_container 0x0
+int id off 0x0
+int id on 0x0
+int id parentPanel 0x0
+int id pointer_enter 0x0
+int id pointer_enter_capture 0x0
+int id pointer_leave 0x0
+int id pointer_leave_capture 0x0
+int id pointer_move 0x0
+int id pointer_move_capture 0x0
+int id progress_circular 0x0
+int id progress_horizontal 0x0
+int id radio 0x0
+int id react_test_id 0x0
+int id right_icon 0x0
+int id right_side 0x0
+int id rn_frame_file 0x0
+int id rn_frame_method 0x0
+int id rn_redbox_dismiss_button 0x0
+int id rn_redbox_line_separator 0x0
+int id rn_redbox_loading_indicator 0x0
+int id rn_redbox_reload_button 0x0
+int id rn_redbox_report_button 0x0
+int id rn_redbox_report_label 0x0
+int id rn_redbox_stack 0x0
+int id satellite 0x0
+int id screen 0x0
+int id scrollIndicatorDown 0x0
+int id scrollIndicatorUp 0x0
+int id scrollView 0x0
+int id search_badge 0x0
+int id search_bar 0x0
+int id search_button 0x0
+int id search_close_btn 0x0
+int id search_edit_frame 0x0
+int id search_go_btn 0x0
+int id search_mag_icon 0x0
+int id search_plate 0x0
+int id search_src_text 0x0
+int id search_voice_btn 0x0
+int id select_dialog_listview 0x0
+int id shortcut 0x0
+int id spacer 0x0
+int id special_effects_controller_view_tag 0x0
+int id split_action_bar 0x0
+int id src_atop 0x0
+int id src_in 0x0
+int id src_over 0x0
+int id standard 0x0
+int id submenuarrow 0x0
+int id submit_area 0x0
+int id tabMode 0x0
+int id tag_accessibility_actions 0x0
+int id tag_accessibility_clickable_spans 0x0
+int id tag_accessibility_heading 0x0
+int id tag_accessibility_pane_title 0x0
+int id tag_on_apply_window_listener 0x0
+int id tag_on_receive_content_listener 0x0
+int id tag_on_receive_content_mime_types 0x0
+int id tag_screen_reader_focusable 0x0
+int id tag_state_description 0x0
+int id tag_transition_group 0x0
+int id tag_unhandled_key_event_manager 0x0
+int id tag_unhandled_key_listeners 0x0
+int id tag_window_insets_animation_callback 0x0
+int id terrain 0x0
+int id text 0x0
+int id text2 0x0
+int id textSpacerNoButtons 0x0
+int id textSpacerNoTitle 0x0
+int id time 0x0
+int id title 0x0
+int id titleDividerNoCustom 0x0
+int id title_template 0x0
+int id topPanel 0x0
+int id unchecked 0x0
+int id uniform 0x0
+int id up 0x0
+int id view_tag_instance_handle 0x0
+int id view_tag_native_id 0x0
+int id view_tree_lifecycle_owner 0x0
+int id view_tree_saved_state_registry_owner 0x0
+int id view_tree_view_model_store_owner 0x0
+int id visible_removing_fragment_view_tag 0x0
+int id webview 0x0
+int id wide 0x0
+int id window 0x0
+int id wrap_content 0x0
+int integer abc_config_activityDefaultDur 0x0
+int integer abc_config_activityShortDur 0x0
+int integer cancel_button_image_alpha 0x0
+int integer config_tooltipAnimTime 0x0
+int integer google_play_services_version 0x0
+int integer react_native_dev_server_port 0x0
+int integer react_native_inspector_proxy_port 0x0
+int integer status_bar_notification_info_maxnum 0x0
+int interpolator btn_checkbox_checked_mtrl_animation_interpolator_0 0x0
+int interpolator btn_checkbox_checked_mtrl_animation_interpolator_1 0x0
+int interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_0 0x0
+int interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_1 0x0
+int interpolator btn_radio_to_off_mtrl_animation_interpolator_0 0x0
+int interpolator btn_radio_to_on_mtrl_animation_interpolator_0 0x0
+int interpolator fast_out_slow_in 0x0
+int layout abc_action_bar_title_item 0x0
+int layout abc_action_bar_up_container 0x0
+int layout abc_action_menu_item_layout 0x0
+int layout abc_action_menu_layout 0x0
+int layout abc_action_mode_bar 0x0
+int layout abc_action_mode_close_item_material 0x0
+int layout abc_activity_chooser_view 0x0
+int layout abc_activity_chooser_view_list_item 0x0
+int layout abc_alert_dialog_button_bar_material 0x0
+int layout abc_alert_dialog_material 0x0
+int layout abc_alert_dialog_title_material 0x0
+int layout abc_cascading_menu_item_layout 0x0
+int layout abc_dialog_title_material 0x0
+int layout abc_expanded_menu_layout 0x0
+int layout abc_list_menu_item_checkbox 0x0
+int layout abc_list_menu_item_icon 0x0
+int layout abc_list_menu_item_layout 0x0
+int layout abc_list_menu_item_radio 0x0
+int layout abc_popup_menu_header_item_layout 0x0
+int layout abc_popup_menu_item_layout 0x0
+int layout abc_screen_content_include 0x0
+int layout abc_screen_simple 0x0
+int layout abc_screen_simple_overlay_action_mode 0x0
+int layout abc_screen_toolbar 0x0
+int layout abc_search_dropdown_item_icons_2line 0x0
+int layout abc_search_view 0x0
+int layout abc_select_dialog_material 0x0
+int layout abc_tooltip 0x0
+int layout amu_info_window 0x0
+int layout amu_text_bubble 0x0
+int layout amu_webview 0x0
+int layout autofill_inline_suggestion 0x0
+int layout custom_dialog 0x0
+int layout dev_loading_view 0x0
+int layout fps_view 0x0
+int layout notification_action 0x0
+int layout notification_action_tombstone 0x0
+int layout notification_template_custom_big 0x0
+int layout notification_template_icon_group 0x0
+int layout notification_template_part_chronometer 0x0
+int layout notification_template_part_time 0x0
+int layout redbox_item_frame 0x0
+int layout redbox_item_title 0x0
+int layout redbox_view 0x0
+int layout select_dialog_item_material 0x0
+int layout select_dialog_multichoice_material 0x0
+int layout select_dialog_singlechoice_material 0x0
+int layout support_simple_spinner_dropdown_item 0x0
+int menu example_menu 0x0
+int menu example_menu2 0x0
+int raw amu_ballon_gx_prefix 0x0
+int raw amu_basic_folder 0x0
+int raw amu_basic_placemark 0x0
+int raw amu_cdata 0x0
+int raw amu_default_balloon 0x0
+int raw amu_document_nest 0x0
+int raw amu_draw_order_ground_overlay 0x0
+int raw amu_extended_data 0x0
+int raw amu_ground_overlay 0x0
+int raw amu_ground_overlay_color 0x0
+int raw amu_inline_style 0x0
+int raw amu_multigeometry_placemarks 0x0
+int raw amu_multiple_placemarks 0x0
+int raw amu_nested_folders 0x0
+int raw amu_nested_multigeometry 0x0
+int raw amu_poly_style_boolean_alpha 0x0
+int raw amu_poly_style_boolean_numeric 0x0
+int raw amu_unknwown_folder 0x0
+int raw amu_unsupported 0x0
+int raw amu_visibility_ground_overlay 0x0
+int string abc_action_bar_home_description 0x0
+int string abc_action_bar_up_description 0x0
+int string abc_action_menu_overflow_description 0x0
+int string abc_action_mode_done 0x0
+int string abc_activity_chooser_view_see_all 0x0
+int string abc_activitychooserview_choose_application 0x0
+int string abc_capital_off 0x0
+int string abc_capital_on 0x0
+int string abc_menu_alt_shortcut_label 0x0
+int string abc_menu_ctrl_shortcut_label 0x0
+int string abc_menu_delete_shortcut_label 0x0
+int string abc_menu_enter_shortcut_label 0x0
+int string abc_menu_function_shortcut_label 0x0
+int string abc_menu_meta_shortcut_label 0x0
+int string abc_menu_shift_shortcut_label 0x0
+int string abc_menu_space_shortcut_label 0x0
+int string abc_menu_sym_shortcut_label 0x0
+int string abc_prepend_shortcut_label 0x0
+int string abc_search_hint 0x0
+int string abc_searchview_description_clear 0x0
+int string abc_searchview_description_query 0x0
+int string abc_searchview_description_search 0x0
+int string abc_searchview_description_submit 0x0
+int string abc_searchview_description_voice 0x0
+int string abc_shareactionprovider_share_with 0x0
+int string abc_shareactionprovider_share_with_application 0x0
+int string abc_toolbar_collapse_description 0x0
+int string alert_description 0x0
+int string androidx_startup 0x0
+int string catalyst_change_bundle_location 0x0
+int string catalyst_copy_button 0x0
+int string catalyst_debug 0x0
+int string catalyst_debug_chrome 0x0
+int string catalyst_debug_chrome_stop 0x0
+int string catalyst_debug_connecting 0x0
+int string catalyst_debug_error 0x0
+int string catalyst_debug_open 0x0
+int string catalyst_debug_stop 0x0
+int string catalyst_devtools_open 0x0
+int string catalyst_dismiss_button 0x0
+int string catalyst_heap_capture 0x0
+int string catalyst_hot_reloading 0x0
+int string catalyst_hot_reloading_auto_disable 0x0
+int string catalyst_hot_reloading_auto_enable 0x0
+int string catalyst_hot_reloading_stop 0x0
+int string catalyst_inspector 0x0
+int string catalyst_inspector_stop 0x0
+int string catalyst_loading_from_url 0x0
+int string catalyst_open_flipper_error 0x0
+int string catalyst_perf_monitor 0x0
+int string catalyst_perf_monitor_stop 0x0
+int string catalyst_reload 0x0
+int string catalyst_reload_button 0x0
+int string catalyst_reload_error 0x0
+int string catalyst_report_button 0x0
+int string catalyst_sample_profiler_disable 0x0
+int string catalyst_sample_profiler_enable 0x0
+int string catalyst_settings 0x0
+int string catalyst_settings_title 0x0
+int string combobox_description 0x0
+int string common_google_play_services_enable_button 0x0
+int string common_google_play_services_enable_text 0x0
+int string common_google_play_services_enable_title 0x0
+int string common_google_play_services_install_button 0x0
+int string common_google_play_services_install_text 0x0
+int string common_google_play_services_install_text_phone 0x0
+int string common_google_play_services_install_text_tablet 0x0
+int string common_google_play_services_install_title 0x0
+int string common_google_play_services_notification_channel_name 0x0
+int string common_google_play_services_notification_ticker 0x0
+int string common_google_play_services_unknown_issue 0x0
+int string common_google_play_services_unsupported_text 0x0
+int string common_google_play_services_unsupported_title 0x0
+int string common_google_play_services_update_button 0x0
+int string common_google_play_services_update_text 0x0
+int string common_google_play_services_update_title 0x0
+int string common_google_play_services_updating_text 0x0
+int string common_google_play_services_updating_title 0x0
+int string common_google_play_services_wear_update_text 0x0
+int string common_open_on_phone 0x0
+int string common_signin_button_text 0x0
+int string common_signin_button_text_long 0x0
+int string header_description 0x0
+int string image_description 0x0
+int string imagebutton_description 0x0
+int string link_description 0x0
+int string menu_description 0x0
+int string menubar_description 0x0
+int string menuitem_description 0x0
+int string progressbar_description 0x0
+int string radiogroup_description 0x0
+int string rn_tab_description 0x0
+int string scrollbar_description 0x0
+int string search_menu_title 0x0
+int string spinbutton_description 0x0
+int string state_busy_description 0x0
+int string state_collapsed_description 0x0
+int string state_expanded_description 0x0
+int string state_mixed_description 0x0
+int string state_off_description 0x0
+int string state_on_description 0x0
+int string state_unselected_description 0x0
+int string status_bar_notification_info_overflow 0x0
+int string summary_description 0x0
+int string tablist_description 0x0
+int string timer_description 0x0
+int string toolbar_description 0x0
+int style AlertDialog_AppCompat 0x0
+int style AlertDialog_AppCompat_Light 0x0
+int style Animation_AppCompat_Dialog 0x0
+int style Animation_AppCompat_DropDownUp 0x0
+int style Animation_AppCompat_Tooltip 0x0
+int style Animation_Catalyst_LogBox 0x0
+int style Animation_Catalyst_RedBox 0x0
+int style Base_AlertDialog_AppCompat 0x0
+int style Base_AlertDialog_AppCompat_Light 0x0
+int style Base_Animation_AppCompat_Dialog 0x0
+int style Base_Animation_AppCompat_DropDownUp 0x0
+int style Base_Animation_AppCompat_Tooltip 0x0
+int style Base_DialogWindowTitleBackground_AppCompat 0x0
+int style Base_DialogWindowTitle_AppCompat 0x0
+int style Base_TextAppearance_AppCompat 0x0
+int style Base_TextAppearance_AppCompat_Body1 0x0
+int style Base_TextAppearance_AppCompat_Body2 0x0
+int style Base_TextAppearance_AppCompat_Button 0x0
+int style Base_TextAppearance_AppCompat_Caption 0x0
+int style Base_TextAppearance_AppCompat_Display1 0x0
+int style Base_TextAppearance_AppCompat_Display2 0x0
+int style Base_TextAppearance_AppCompat_Display3 0x0
+int style Base_TextAppearance_AppCompat_Display4 0x0
+int style Base_TextAppearance_AppCompat_Headline 0x0
+int style Base_TextAppearance_AppCompat_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Large 0x0
+int style Base_TextAppearance_AppCompat_Large_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large 0x0
+int style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small 0x0
+int style Base_TextAppearance_AppCompat_Medium 0x0
+int style Base_TextAppearance_AppCompat_Medium_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Menu 0x0
+int style Base_TextAppearance_AppCompat_SearchResult 0x0
+int style Base_TextAppearance_AppCompat_SearchResult_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_SearchResult_Title 0x0
+int style Base_TextAppearance_AppCompat_Small 0x0
+int style Base_TextAppearance_AppCompat_Small_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Subhead 0x0
+int style Base_TextAppearance_AppCompat_Subhead_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Title 0x0
+int style Base_TextAppearance_AppCompat_Title_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Tooltip 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Menu 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Title 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionMode_Title 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Colored 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_DropDownItem 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Header 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Large 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Small 0x0
+int style Base_TextAppearance_AppCompat_Widget_Switch 0x0
+int style Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem 0x0
+int style Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item 0x0
+int style Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle 0x0
+int style Base_TextAppearance_Widget_AppCompat_Toolbar_Title 0x0
+int style Base_ThemeOverlay_AppCompat 0x0
+int style Base_ThemeOverlay_AppCompat_ActionBar 0x0
+int style Base_ThemeOverlay_AppCompat_Dark 0x0
+int style Base_ThemeOverlay_AppCompat_Dark_ActionBar 0x0
+int style Base_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_ThemeOverlay_AppCompat_Dialog_Alert 0x0
+int style Base_ThemeOverlay_AppCompat_Light 0x0
+int style Base_Theme_AppCompat 0x0
+int style Base_Theme_AppCompat_CompactMenu 0x0
+int style Base_Theme_AppCompat_Dialog 0x0
+int style Base_Theme_AppCompat_DialogWhenLarge 0x0
+int style Base_Theme_AppCompat_Dialog_Alert 0x0
+int style Base_Theme_AppCompat_Dialog_FixedSize 0x0
+int style Base_Theme_AppCompat_Dialog_MinWidth 0x0
+int style Base_Theme_AppCompat_Light 0x0
+int style Base_Theme_AppCompat_Light_DarkActionBar 0x0
+int style Base_Theme_AppCompat_Light_Dialog 0x0
+int style Base_Theme_AppCompat_Light_DialogWhenLarge 0x0
+int style Base_Theme_AppCompat_Light_Dialog_Alert 0x0
+int style Base_Theme_AppCompat_Light_Dialog_FixedSize 0x0
+int style Base_Theme_AppCompat_Light_Dialog_MinWidth 0x0
+int style Base_V21_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_V21_Theme_AppCompat 0x0
+int style Base_V21_Theme_AppCompat_Dialog 0x0
+int style Base_V21_Theme_AppCompat_Light 0x0
+int style Base_V21_Theme_AppCompat_Light_Dialog 0x0
+int style Base_V22_Theme_AppCompat 0x0
+int style Base_V22_Theme_AppCompat_Light 0x0
+int style Base_V23_Theme_AppCompat 0x0
+int style Base_V23_Theme_AppCompat_Light 0x0
+int style Base_V26_Theme_AppCompat 0x0
+int style Base_V26_Theme_AppCompat_Light 0x0
+int style Base_V26_Widget_AppCompat_Toolbar 0x0
+int style Base_V28_Theme_AppCompat 0x0
+int style Base_V28_Theme_AppCompat_Light 0x0
+int style Base_V7_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_V7_Theme_AppCompat 0x0
+int style Base_V7_Theme_AppCompat_Dialog 0x0
+int style Base_V7_Theme_AppCompat_Light 0x0
+int style Base_V7_Theme_AppCompat_Light_Dialog 0x0
+int style Base_V7_Widget_AppCompat_AutoCompleteTextView 0x0
+int style Base_V7_Widget_AppCompat_EditText 0x0
+int style Base_V7_Widget_AppCompat_Toolbar 0x0
+int style Base_Widget_AppCompat_ActionBar 0x0
+int style Base_Widget_AppCompat_ActionBar_Solid 0x0
+int style Base_Widget_AppCompat_ActionBar_TabBar 0x0
+int style Base_Widget_AppCompat_ActionBar_TabText 0x0
+int style Base_Widget_AppCompat_ActionBar_TabView 0x0
+int style Base_Widget_AppCompat_ActionButton 0x0
+int style Base_Widget_AppCompat_ActionButton_CloseMode 0x0
+int style Base_Widget_AppCompat_ActionButton_Overflow 0x0
+int style Base_Widget_AppCompat_ActionMode 0x0
+int style Base_Widget_AppCompat_ActivityChooserView 0x0
+int style Base_Widget_AppCompat_AutoCompleteTextView 0x0
+int style Base_Widget_AppCompat_Button 0x0
+int style Base_Widget_AppCompat_ButtonBar 0x0
+int style Base_Widget_AppCompat_ButtonBar_AlertDialog 0x0
+int style Base_Widget_AppCompat_Button_Borderless 0x0
+int style Base_Widget_AppCompat_Button_Borderless_Colored 0x0
+int style Base_Widget_AppCompat_Button_ButtonBar_AlertDialog 0x0
+int style Base_Widget_AppCompat_Button_Colored 0x0
+int style Base_Widget_AppCompat_Button_Small 0x0
+int style Base_Widget_AppCompat_CompoundButton_CheckBox 0x0
+int style Base_Widget_AppCompat_CompoundButton_RadioButton 0x0
+int style Base_Widget_AppCompat_CompoundButton_Switch 0x0
+int style Base_Widget_AppCompat_DrawerArrowToggle 0x0
+int style Base_Widget_AppCompat_DrawerArrowToggle_Common 0x0
+int style Base_Widget_AppCompat_DropDownItem_Spinner 0x0
+int style Base_Widget_AppCompat_EditText 0x0
+int style Base_Widget_AppCompat_ImageButton 0x0
+int style Base_Widget_AppCompat_Light_ActionBar 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_Solid 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabBar 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabText 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabView 0x0
+int style Base_Widget_AppCompat_Light_PopupMenu 0x0
+int style Base_Widget_AppCompat_Light_PopupMenu_Overflow 0x0
+int style Base_Widget_AppCompat_ListMenuView 0x0
+int style Base_Widget_AppCompat_ListPopupWindow 0x0
+int style Base_Widget_AppCompat_ListView 0x0
+int style Base_Widget_AppCompat_ListView_DropDown 0x0
+int style Base_Widget_AppCompat_ListView_Menu 0x0
+int style Base_Widget_AppCompat_PopupMenu 0x0
+int style Base_Widget_AppCompat_PopupMenu_Overflow 0x0
+int style Base_Widget_AppCompat_PopupWindow 0x0
+int style Base_Widget_AppCompat_ProgressBar 0x0
+int style Base_Widget_AppCompat_ProgressBar_Horizontal 0x0
+int style Base_Widget_AppCompat_RatingBar 0x0
+int style Base_Widget_AppCompat_RatingBar_Indicator 0x0
+int style Base_Widget_AppCompat_RatingBar_Small 0x0
+int style Base_Widget_AppCompat_SearchView 0x0
+int style Base_Widget_AppCompat_SearchView_ActionBar 0x0
+int style Base_Widget_AppCompat_SeekBar 0x0
+int style Base_Widget_AppCompat_SeekBar_Discrete 0x0
+int style Base_Widget_AppCompat_Spinner 0x0
+int style Base_Widget_AppCompat_Spinner_Underlined 0x0
+int style Base_Widget_AppCompat_TextView 0x0
+int style Base_Widget_AppCompat_TextView_SpinnerItem 0x0
+int style Base_Widget_AppCompat_Toolbar 0x0
+int style Base_Widget_AppCompat_Toolbar_Button_Navigation 0x0
+int style CalendarDatePickerDialog 0x0
+int style CalendarDatePickerStyle 0x0
+int style DialogAnimationFade 0x0
+int style DialogAnimationSlide 0x0
+int style Platform_AppCompat 0x0
+int style Platform_AppCompat_Light 0x0
+int style Platform_ThemeOverlay_AppCompat 0x0
+int style Platform_ThemeOverlay_AppCompat_Dark 0x0
+int style Platform_ThemeOverlay_AppCompat_Light 0x0
+int style Platform_V21_AppCompat 0x0
+int style Platform_V21_AppCompat_Light 0x0
+int style Platform_V25_AppCompat 0x0
+int style Platform_V25_AppCompat_Light 0x0
+int style Platform_Widget_AppCompat_Spinner 0x0
+int style RtlOverlay_DialogWindowTitle_AppCompat 0x0
+int style RtlOverlay_Widget_AppCompat_ActionBar_TitleItem 0x0
+int style RtlOverlay_Widget_AppCompat_DialogTitle_Icon 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Text 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Title 0x0
+int style RtlOverlay_Widget_AppCompat_SearchView_MagIcon 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Query 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Text 0x0
+int style RtlUnderlay_Widget_AppCompat_ActionButton 0x0
+int style RtlUnderlay_Widget_AppCompat_ActionButton_Overflow 0x0
+int style SpinnerDatePickerDialog 0x0
+int style SpinnerDatePickerStyle 0x0
+int style TextAppearance_AppCompat 0x0
+int style TextAppearance_AppCompat_Body1 0x0
+int style TextAppearance_AppCompat_Body2 0x0
+int style TextAppearance_AppCompat_Button 0x0
+int style TextAppearance_AppCompat_Caption 0x0
+int style TextAppearance_AppCompat_Display1 0x0
+int style TextAppearance_AppCompat_Display2 0x0
+int style TextAppearance_AppCompat_Display3 0x0
+int style TextAppearance_AppCompat_Display4 0x0
+int style TextAppearance_AppCompat_Headline 0x0
+int style TextAppearance_AppCompat_Inverse 0x0
+int style TextAppearance_AppCompat_Large 0x0
+int style TextAppearance_AppCompat_Large_Inverse 0x0
+int style TextAppearance_AppCompat_Light_SearchResult_Subtitle 0x0
+int style TextAppearance_AppCompat_Light_SearchResult_Title 0x0
+int style TextAppearance_AppCompat_Light_Widget_PopupMenu_Large 0x0
+int style TextAppearance_AppCompat_Light_Widget_PopupMenu_Small 0x0
+int style TextAppearance_AppCompat_Medium 0x0
+int style TextAppearance_AppCompat_Medium_Inverse 0x0
+int style TextAppearance_AppCompat_Menu 0x0
+int style TextAppearance_AppCompat_SearchResult_Subtitle 0x0
+int style TextAppearance_AppCompat_SearchResult_Title 0x0
+int style TextAppearance_AppCompat_Small 0x0
+int style TextAppearance_AppCompat_Small_Inverse 0x0
+int style TextAppearance_AppCompat_Subhead 0x0
+int style TextAppearance_AppCompat_Subhead_Inverse 0x0
+int style TextAppearance_AppCompat_Title 0x0
+int style TextAppearance_AppCompat_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Tooltip 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Menu 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Subtitle 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Title 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Subtitle 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Title 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_Button 0x0
+int style TextAppearance_AppCompat_Widget_Button_Borderless_Colored 0x0
+int style TextAppearance_AppCompat_Widget_Button_Colored 0x0
+int style TextAppearance_AppCompat_Widget_Button_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_DropDownItem 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Header 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Large 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Small 0x0
+int style TextAppearance_AppCompat_Widget_Switch 0x0
+int style TextAppearance_AppCompat_Widget_TextView_SpinnerItem 0x0
+int style TextAppearance_Compat_Notification 0x0
+int style TextAppearance_Compat_Notification_Info 0x0
+int style TextAppearance_Compat_Notification_Line2 0x0
+int style TextAppearance_Compat_Notification_Time 0x0
+int style TextAppearance_Compat_Notification_Title 0x0
+int style TextAppearance_Widget_AppCompat_ExpandedMenu_Item 0x0
+int style TextAppearance_Widget_AppCompat_Toolbar_Subtitle 0x0
+int style TextAppearance_Widget_AppCompat_Toolbar_Title 0x0
+int style Theme 0x0
+int style ThemeOverlay_AppCompat 0x0
+int style ThemeOverlay_AppCompat_ActionBar 0x0
+int style ThemeOverlay_AppCompat_Dark 0x0
+int style ThemeOverlay_AppCompat_Dark_ActionBar 0x0
+int style ThemeOverlay_AppCompat_DayNight 0x0
+int style ThemeOverlay_AppCompat_DayNight_ActionBar 0x0
+int style ThemeOverlay_AppCompat_Dialog 0x0
+int style ThemeOverlay_AppCompat_Dialog_Alert 0x0
+int style ThemeOverlay_AppCompat_Light 0x0
+int style Theme_AppCompat 0x0
+int style Theme_AppCompat_CompactMenu 0x0
+int style Theme_AppCompat_DayNight 0x0
+int style Theme_AppCompat_DayNight_DarkActionBar 0x0
+int style Theme_AppCompat_DayNight_Dialog 0x0
+int style Theme_AppCompat_DayNight_DialogWhenLarge 0x0
+int style Theme_AppCompat_DayNight_Dialog_Alert 0x0
+int style Theme_AppCompat_DayNight_Dialog_MinWidth 0x0
+int style Theme_AppCompat_DayNight_NoActionBar 0x0
+int style Theme_AppCompat_Dialog 0x0
+int style Theme_AppCompat_DialogWhenLarge 0x0
+int style Theme_AppCompat_Dialog_Alert 0x0
+int style Theme_AppCompat_Dialog_MinWidth 0x0
+int style Theme_AppCompat_Empty 0x0
+int style Theme_AppCompat_Light 0x0
+int style Theme_AppCompat_Light_DarkActionBar 0x0
+int style Theme_AppCompat_Light_Dialog 0x0
+int style Theme_AppCompat_Light_DialogWhenLarge 0x0
+int style Theme_AppCompat_Light_Dialog_Alert 0x0
+int style Theme_AppCompat_Light_Dialog_MinWidth 0x0
+int style Theme_AppCompat_Light_NoActionBar 0x0
+int style Theme_AppCompat_NoActionBar 0x0
+int style Theme_AutofillInlineSuggestion 0x0
+int style Theme_Catalyst 0x0
+int style Theme_Catalyst_LogBox 0x0
+int style Theme_Catalyst_RedBox 0x0
+int style Theme_FullScreenDialog 0x0
+int style Theme_FullScreenDialogAnimatedFade 0x0
+int style Theme_FullScreenDialogAnimatedSlide 0x0
+int style Theme_ReactNative_AppCompat_Light 0x0
+int style Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen 0x0
+int style Widget_AppCompat_ActionBar 0x0
+int style Widget_AppCompat_ActionBar_Solid 0x0
+int style Widget_AppCompat_ActionBar_TabBar 0x0
+int style Widget_AppCompat_ActionBar_TabText 0x0
+int style Widget_AppCompat_ActionBar_TabView 0x0
+int style Widget_AppCompat_ActionButton 0x0
+int style Widget_AppCompat_ActionButton_CloseMode 0x0
+int style Widget_AppCompat_ActionButton_Overflow 0x0
+int style Widget_AppCompat_ActionMode 0x0
+int style Widget_AppCompat_ActivityChooserView 0x0
+int style Widget_AppCompat_AutoCompleteTextView 0x0
+int style Widget_AppCompat_Button 0x0
+int style Widget_AppCompat_ButtonBar 0x0
+int style Widget_AppCompat_ButtonBar_AlertDialog 0x0
+int style Widget_AppCompat_Button_Borderless 0x0
+int style Widget_AppCompat_Button_Borderless_Colored 0x0
+int style Widget_AppCompat_Button_ButtonBar_AlertDialog 0x0
+int style Widget_AppCompat_Button_Colored 0x0
+int style Widget_AppCompat_Button_Small 0x0
+int style Widget_AppCompat_CompoundButton_CheckBox 0x0
+int style Widget_AppCompat_CompoundButton_RadioButton 0x0
+int style Widget_AppCompat_CompoundButton_Switch 0x0
+int style Widget_AppCompat_DrawerArrowToggle 0x0
+int style Widget_AppCompat_DropDownItem_Spinner 0x0
+int style Widget_AppCompat_EditText 0x0
+int style Widget_AppCompat_ImageButton 0x0
+int style Widget_AppCompat_Light_ActionBar 0x0
+int style Widget_AppCompat_Light_ActionBar_Solid 0x0
+int style Widget_AppCompat_Light_ActionBar_Solid_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabBar 0x0
+int style Widget_AppCompat_Light_ActionBar_TabBar_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabText 0x0
+int style Widget_AppCompat_Light_ActionBar_TabText_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabView 0x0
+int style Widget_AppCompat_Light_ActionBar_TabView_Inverse 0x0
+int style Widget_AppCompat_Light_ActionButton 0x0
+int style Widget_AppCompat_Light_ActionButton_CloseMode 0x0
+int style Widget_AppCompat_Light_ActionButton_Overflow 0x0
+int style Widget_AppCompat_Light_ActionMode_Inverse 0x0
+int style Widget_AppCompat_Light_ActivityChooserView 0x0
+int style Widget_AppCompat_Light_AutoCompleteTextView 0x0
+int style Widget_AppCompat_Light_DropDownItem_Spinner 0x0
+int style Widget_AppCompat_Light_ListPopupWindow 0x0
+int style Widget_AppCompat_Light_ListView_DropDown 0x0
+int style Widget_AppCompat_Light_PopupMenu 0x0
+int style Widget_AppCompat_Light_PopupMenu_Overflow 0x0
+int style Widget_AppCompat_Light_SearchView 0x0
+int style Widget_AppCompat_Light_Spinner_DropDown_ActionBar 0x0
+int style Widget_AppCompat_ListMenuView 0x0
+int style Widget_AppCompat_ListPopupWindow 0x0
+int style Widget_AppCompat_ListView 0x0
+int style Widget_AppCompat_ListView_DropDown 0x0
+int style Widget_AppCompat_ListView_Menu 0x0
+int style Widget_AppCompat_PopupMenu 0x0
+int style Widget_AppCompat_PopupMenu_Overflow 0x0
+int style Widget_AppCompat_PopupWindow 0x0
+int style Widget_AppCompat_ProgressBar 0x0
+int style Widget_AppCompat_ProgressBar_Horizontal 0x0
+int style Widget_AppCompat_RatingBar 0x0
+int style Widget_AppCompat_RatingBar_Indicator 0x0
+int style Widget_AppCompat_RatingBar_Small 0x0
+int style Widget_AppCompat_SearchView 0x0
+int style Widget_AppCompat_SearchView_ActionBar 0x0
+int style Widget_AppCompat_SeekBar 0x0
+int style Widget_AppCompat_SeekBar_Discrete 0x0
+int style Widget_AppCompat_Spinner 0x0
+int style Widget_AppCompat_Spinner_DropDown 0x0
+int style Widget_AppCompat_Spinner_DropDown_ActionBar 0x0
+int style Widget_AppCompat_Spinner_Underlined 0x0
+int style Widget_AppCompat_TextView 0x0
+int style Widget_AppCompat_TextView_SpinnerItem 0x0
+int style Widget_AppCompat_Toolbar 0x0
+int style Widget_AppCompat_Toolbar_Button_Navigation 0x0
+int style Widget_Autofill 0x0
+int style Widget_Autofill_InlineSuggestionChip 0x0
+int style Widget_Autofill_InlineSuggestionEndIconStyle 0x0
+int style Widget_Autofill_InlineSuggestionStartIconStyle 0x0
+int style Widget_Autofill_InlineSuggestionSubtitle 0x0
+int style Widget_Autofill_InlineSuggestionTitle 0x0
+int style Widget_Compat_NotificationActionContainer 0x0
+int style Widget_Compat_NotificationActionText 0x0
+int style amu_Bubble_TextAppearance_Dark 0x0
+int style amu_Bubble_TextAppearance_Light 0x0
+int style amu_ClusterIcon_TextAppearance 0x0
+int style redboxButton 0x0
+int[] styleable ActionBar { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable ActionBar_background 0
+int styleable ActionBar_backgroundSplit 1
+int styleable ActionBar_backgroundStacked 2
+int styleable ActionBar_contentInsetEnd 3
+int styleable ActionBar_contentInsetEndWithActions 4
+int styleable ActionBar_contentInsetLeft 5
+int styleable ActionBar_contentInsetRight 6
+int styleable ActionBar_contentInsetStart 7
+int styleable ActionBar_contentInsetStartWithNavigation 8
+int styleable ActionBar_customNavigationLayout 9
+int styleable ActionBar_displayOptions 10
+int styleable ActionBar_divider 11
+int styleable ActionBar_elevation 12
+int styleable ActionBar_height 13
+int styleable ActionBar_hideOnContentScroll 14
+int styleable ActionBar_homeAsUpIndicator 15
+int styleable ActionBar_homeLayout 16
+int styleable ActionBar_icon 17
+int styleable ActionBar_indeterminateProgressStyle 18
+int styleable ActionBar_itemPadding 19
+int styleable ActionBar_logo 20
+int styleable ActionBar_navigationMode 21
+int styleable ActionBar_popupTheme 22
+int styleable ActionBar_progressBarPadding 23
+int styleable ActionBar_progressBarStyle 24
+int styleable ActionBar_subtitle 25
+int styleable ActionBar_subtitleTextStyle 26
+int styleable ActionBar_title 27
+int styleable ActionBar_titleTextStyle 28
+int[] styleable ActionBarLayout { 0x10100b3 }
+int styleable ActionBarLayout_android_layout_gravity 0
+int[] styleable ActionMenuItemView { 0x101013f }
+int styleable ActionMenuItemView_android_minWidth 0
+int[] styleable ActionMenuView {  }
+int[] styleable ActionMode { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable ActionMode_background 0
+int styleable ActionMode_backgroundSplit 1
+int styleable ActionMode_closeItemLayout 2
+int styleable ActionMode_height 3
+int styleable ActionMode_subtitleTextStyle 4
+int styleable ActionMode_titleTextStyle 5
+int[] styleable ActivityChooserView { 0x0, 0x0 }
+int styleable ActivityChooserView_expandActivityOverflowButtonDrawable 0
+int styleable ActivityChooserView_initialActivityCount 1
+int[] styleable AlertDialog { 0x10100f2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AlertDialog_android_layout 0
+int styleable AlertDialog_buttonIconDimen 1
+int styleable AlertDialog_buttonPanelSideLayout 2
+int styleable AlertDialog_listItemLayout 3
+int styleable AlertDialog_listLayout 4
+int styleable AlertDialog_multiChoiceItemLayout 5
+int styleable AlertDialog_showTitle 6
+int styleable AlertDialog_singleChoiceItemLayout 7
+int[] styleable AnimatedStateListDrawableCompat { 0x1010196, 0x101011c, 0x101030c, 0x101030d, 0x1010195, 0x1010194 }
+int styleable AnimatedStateListDrawableCompat_android_constantSize 0
+int styleable AnimatedStateListDrawableCompat_android_dither 1
+int styleable AnimatedStateListDrawableCompat_android_enterFadeDuration 2
+int styleable AnimatedStateListDrawableCompat_android_exitFadeDuration 3
+int styleable AnimatedStateListDrawableCompat_android_variablePadding 4
+int styleable AnimatedStateListDrawableCompat_android_visible 5
+int[] styleable AnimatedStateListDrawableItem { 0x1010199, 0x10100d0 }
+int styleable AnimatedStateListDrawableItem_android_drawable 0
+int styleable AnimatedStateListDrawableItem_android_id 1
+int[] styleable AnimatedStateListDrawableTransition { 0x1010199, 0x101044a, 0x101044b, 0x1010449 }
+int styleable AnimatedStateListDrawableTransition_android_drawable 0
+int styleable AnimatedStateListDrawableTransition_android_fromId 1
+int styleable AnimatedStateListDrawableTransition_android_reversible 2
+int styleable AnimatedStateListDrawableTransition_android_toId 3
+int[] styleable AppCompatEmojiHelper {  }
+int[] styleable AppCompatImageView { 0x1010119, 0x0, 0x0, 0x0 }
+int styleable AppCompatImageView_android_src 0
+int styleable AppCompatImageView_srcCompat 1
+int styleable AppCompatImageView_tint 2
+int styleable AppCompatImageView_tintMode 3
+int[] styleable AppCompatSeekBar { 0x1010142, 0x0, 0x0, 0x0 }
+int styleable AppCompatSeekBar_android_thumb 0
+int styleable AppCompatSeekBar_tickMark 1
+int styleable AppCompatSeekBar_tickMarkTint 2
+int styleable AppCompatSeekBar_tickMarkTintMode 3
+int[] styleable AppCompatTextHelper { 0x101016e, 0x1010393, 0x101016f, 0x1010170, 0x1010392, 0x101016d, 0x1010034 }
+int styleable AppCompatTextHelper_android_drawableBottom 0
+int styleable AppCompatTextHelper_android_drawableEnd 1
+int styleable AppCompatTextHelper_android_drawableLeft 2
+int styleable AppCompatTextHelper_android_drawableRight 3
+int styleable AppCompatTextHelper_android_drawableStart 4
+int styleable AppCompatTextHelper_android_drawableTop 5
+int styleable AppCompatTextHelper_android_textAppearance 6
+int[] styleable AppCompatTextView { 0x1010034, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AppCompatTextView_android_textAppearance 0
+int styleable AppCompatTextView_autoSizeMaxTextSize 1
+int styleable AppCompatTextView_autoSizeMinTextSize 2
+int styleable AppCompatTextView_autoSizePresetSizes 3
+int styleable AppCompatTextView_autoSizeStepGranularity 4
+int styleable AppCompatTextView_autoSizeTextType 5
+int styleable AppCompatTextView_drawableBottomCompat 6
+int styleable AppCompatTextView_drawableEndCompat 7
+int styleable AppCompatTextView_drawableLeftCompat 8
+int styleable AppCompatTextView_drawableRightCompat 9
+int styleable AppCompatTextView_drawableStartCompat 10
+int styleable AppCompatTextView_drawableTint 11
+int styleable AppCompatTextView_drawableTintMode 12
+int styleable AppCompatTextView_drawableTopCompat 13
+int styleable AppCompatTextView_emojiCompatEnabled 14
+int styleable AppCompatTextView_firstBaselineToTopHeight 15
+int styleable AppCompatTextView_fontFamily 16
+int styleable AppCompatTextView_fontVariationSettings 17
+int styleable AppCompatTextView_lastBaselineToBottomHeight 18
+int styleable AppCompatTextView_lineHeight 19
+int styleable AppCompatTextView_textAllCaps 20
+int styleable AppCompatTextView_textLocale 21
+int[] styleable AppCompatTheme { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10100ae, 0x1010057, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AppCompatTheme_actionBarDivider 0
+int styleable AppCompatTheme_actionBarItemBackground 1
+int styleable AppCompatTheme_actionBarPopupTheme 2
+int styleable AppCompatTheme_actionBarSize 3
+int styleable AppCompatTheme_actionBarSplitStyle 4
+int styleable AppCompatTheme_actionBarStyle 5
+int styleable AppCompatTheme_actionBarTabBarStyle 6
+int styleable AppCompatTheme_actionBarTabStyle 7
+int styleable AppCompatTheme_actionBarTabTextStyle 8
+int styleable AppCompatTheme_actionBarTheme 9
+int styleable AppCompatTheme_actionBarWidgetTheme 10
+int styleable AppCompatTheme_actionButtonStyle 11
+int styleable AppCompatTheme_actionDropDownStyle 12
+int styleable AppCompatTheme_actionMenuTextAppearance 13
+int styleable AppCompatTheme_actionMenuTextColor 14
+int styleable AppCompatTheme_actionModeBackground 15
+int styleable AppCompatTheme_actionModeCloseButtonStyle 16
+int styleable AppCompatTheme_actionModeCloseContentDescription 17
+int styleable AppCompatTheme_actionModeCloseDrawable 18
+int styleable AppCompatTheme_actionModeCopyDrawable 19
+int styleable AppCompatTheme_actionModeCutDrawable 20
+int styleable AppCompatTheme_actionModeFindDrawable 21
+int styleable AppCompatTheme_actionModePasteDrawable 22
+int styleable AppCompatTheme_actionModePopupWindowStyle 23
+int styleable AppCompatTheme_actionModeSelectAllDrawable 24
+int styleable AppCompatTheme_actionModeShareDrawable 25
+int styleable AppCompatTheme_actionModeSplitBackground 26
+int styleable AppCompatTheme_actionModeStyle 27
+int styleable AppCompatTheme_actionModeTheme 28
+int styleable AppCompatTheme_actionModeWebSearchDrawable 29
+int styleable AppCompatTheme_actionOverflowButtonStyle 30
+int styleable AppCompatTheme_actionOverflowMenuStyle 31
+int styleable AppCompatTheme_activityChooserViewStyle 32
+int styleable AppCompatTheme_alertDialogButtonGroupStyle 33
+int styleable AppCompatTheme_alertDialogCenterButtons 34
+int styleable AppCompatTheme_alertDialogStyle 35
+int styleable AppCompatTheme_alertDialogTheme 36
+int styleable AppCompatTheme_android_windowAnimationStyle 37
+int styleable AppCompatTheme_android_windowIsFloating 38
+int styleable AppCompatTheme_autoCompleteTextViewStyle 39
+int styleable AppCompatTheme_borderlessButtonStyle 40
+int styleable AppCompatTheme_buttonBarButtonStyle 41
+int styleable AppCompatTheme_buttonBarNegativeButtonStyle 42
+int styleable AppCompatTheme_buttonBarNeutralButtonStyle 43
+int styleable AppCompatTheme_buttonBarPositiveButtonStyle 44
+int styleable AppCompatTheme_buttonBarStyle 45
+int styleable AppCompatTheme_buttonStyle 46
+int styleable AppCompatTheme_buttonStyleSmall 47
+int styleable AppCompatTheme_checkboxStyle 48
+int styleable AppCompatTheme_checkedTextViewStyle 49
+int styleable AppCompatTheme_colorAccent 50
+int styleable AppCompatTheme_colorBackgroundFloating 51
+int styleable AppCompatTheme_colorButtonNormal 52
+int styleable AppCompatTheme_colorControlActivated 53
+int styleable AppCompatTheme_colorControlHighlight 54
+int styleable AppCompatTheme_colorControlNormal 55
+int styleable AppCompatTheme_colorError 56
+int styleable AppCompatTheme_colorPrimary 57
+int styleable AppCompatTheme_colorPrimaryDark 58
+int styleable AppCompatTheme_colorSwitchThumbNormal 59
+int styleable AppCompatTheme_controlBackground 60
+int styleable AppCompatTheme_dialogCornerRadius 61
+int styleable AppCompatTheme_dialogPreferredPadding 62
+int styleable AppCompatTheme_dialogTheme 63
+int styleable AppCompatTheme_dividerHorizontal 64
+int styleable AppCompatTheme_dividerVertical 65
+int styleable AppCompatTheme_dropDownListViewStyle 66
+int styleable AppCompatTheme_dropdownListPreferredItemHeight 67
+int styleable AppCompatTheme_editTextBackground 68
+int styleable AppCompatTheme_editTextColor 69
+int styleable AppCompatTheme_editTextStyle 70
+int styleable AppCompatTheme_homeAsUpIndicator 71
+int styleable AppCompatTheme_imageButtonStyle 72
+int styleable AppCompatTheme_listChoiceBackgroundIndicator 73
+int styleable AppCompatTheme_listChoiceIndicatorMultipleAnimated 74
+int styleable AppCompatTheme_listChoiceIndicatorSingleAnimated 75
+int styleable AppCompatTheme_listDividerAlertDialog 76
+int styleable AppCompatTheme_listMenuViewStyle 77
+int styleable AppCompatTheme_listPopupWindowStyle 78
+int styleable AppCompatTheme_listPreferredItemHeight 79
+int styleable AppCompatTheme_listPreferredItemHeightLarge 80
+int styleable AppCompatTheme_listPreferredItemHeightSmall 81
+int styleable AppCompatTheme_listPreferredItemPaddingEnd 82
+int styleable AppCompatTheme_listPreferredItemPaddingLeft 83
+int styleable AppCompatTheme_listPreferredItemPaddingRight 84
+int styleable AppCompatTheme_listPreferredItemPaddingStart 85
+int styleable AppCompatTheme_panelBackground 86
+int styleable AppCompatTheme_panelMenuListTheme 87
+int styleable AppCompatTheme_panelMenuListWidth 88
+int styleable AppCompatTheme_popupMenuStyle 89
+int styleable AppCompatTheme_popupWindowStyle 90
+int styleable AppCompatTheme_radioButtonStyle 91
+int styleable AppCompatTheme_ratingBarStyle 92
+int styleable AppCompatTheme_ratingBarStyleIndicator 93
+int styleable AppCompatTheme_ratingBarStyleSmall 94
+int styleable AppCompatTheme_searchViewStyle 95
+int styleable AppCompatTheme_seekBarStyle 96
+int styleable AppCompatTheme_selectableItemBackground 97
+int styleable AppCompatTheme_selectableItemBackgroundBorderless 98
+int styleable AppCompatTheme_spinnerDropDownItemStyle 99
+int styleable AppCompatTheme_spinnerStyle 100
+int styleable AppCompatTheme_switchStyle 101
+int styleable AppCompatTheme_textAppearanceLargePopupMenu 102
+int styleable AppCompatTheme_textAppearanceListItem 103
+int styleable AppCompatTheme_textAppearanceListItemSecondary 104
+int styleable AppCompatTheme_textAppearanceListItemSmall 105
+int styleable AppCompatTheme_textAppearancePopupMenuHeader 106
+int styleable AppCompatTheme_textAppearanceSearchResultSubtitle 107
+int styleable AppCompatTheme_textAppearanceSearchResultTitle 108
+int styleable AppCompatTheme_textAppearanceSmallPopupMenu 109
+int styleable AppCompatTheme_textColorAlertDialogListItem 110
+int styleable AppCompatTheme_textColorSearchUrl 111
+int styleable AppCompatTheme_toolbarNavigationButtonStyle 112
+int styleable AppCompatTheme_toolbarStyle 113
+int styleable AppCompatTheme_tooltipForegroundColor 114
+int styleable AppCompatTheme_tooltipFrameBackground 115
+int styleable AppCompatTheme_viewInflaterClass 116
+int styleable AppCompatTheme_windowActionBar 117
+int styleable AppCompatTheme_windowActionBarOverlay 118
+int styleable AppCompatTheme_windowActionModeOverlay 119
+int styleable AppCompatTheme_windowFixedHeightMajor 120
+int styleable AppCompatTheme_windowFixedHeightMinor 121
+int styleable AppCompatTheme_windowFixedWidthMajor 122
+int styleable AppCompatTheme_windowFixedWidthMinor 123
+int styleable AppCompatTheme_windowMinWidthMajor 124
+int styleable AppCompatTheme_windowMinWidthMinor 125
+int styleable AppCompatTheme_windowNoTitle 126
+int[] styleable Autofill_InlineSuggestion { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionChip 0
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionEndIconStyle 1
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionStartIconStyle 2
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionSubtitle 3
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionTitle 4
+int styleable Autofill_InlineSuggestion_isAutofillInlineSuggestionTheme 5
+int[] styleable ButtonBarLayout { 0x0 }
+int styleable ButtonBarLayout_allowStacking 0
+int[] styleable Capability { 0x0, 0x0 }
+int styleable Capability_queryPatterns 0
+int styleable Capability_shortcutMatchRequired 1
+int[] styleable CheckedTextView { 0x1010108, 0x0, 0x0, 0x0 }
+int styleable CheckedTextView_android_checkMark 0
+int styleable CheckedTextView_checkMarkCompat 1
+int styleable CheckedTextView_checkMarkTint 2
+int styleable CheckedTextView_checkMarkTintMode 3
+int[] styleable ColorStateListItem { 0x0, 0x101031f, 0x10101a5, 0x1010647, 0x0 }
+int styleable ColorStateListItem_alpha 0
+int styleable ColorStateListItem_android_alpha 1
+int styleable ColorStateListItem_android_color 2
+int styleable ColorStateListItem_android_lStar 3
+int styleable ColorStateListItem_lStar 4
+int[] styleable CompoundButton { 0x1010107, 0x0, 0x0, 0x0 }
+int styleable CompoundButton_android_button 0
+int styleable CompoundButton_buttonCompat 1
+int styleable CompoundButton_buttonTint 2
+int styleable CompoundButton_buttonTintMode 3
+int[] styleable DrawerArrowToggle { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable DrawerArrowToggle_arrowHeadLength 0
+int styleable DrawerArrowToggle_arrowShaftLength 1
+int styleable DrawerArrowToggle_barLength 2
+int styleable DrawerArrowToggle_color 3
+int styleable DrawerArrowToggle_drawableSize 4
+int styleable DrawerArrowToggle_gapBetweenBars 5
+int styleable DrawerArrowToggle_spinBars 6
+int styleable DrawerArrowToggle_thickness 7
+int[] styleable FontFamily { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable FontFamily_fontProviderAuthority 0
+int styleable FontFamily_fontProviderCerts 1
+int styleable FontFamily_fontProviderFetchStrategy 2
+int styleable FontFamily_fontProviderFetchTimeout 3
+int styleable FontFamily_fontProviderPackage 4
+int styleable FontFamily_fontProviderQuery 5
+int styleable FontFamily_fontProviderSystemFontFamily 6
+int[] styleable FontFamilyFont { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable FontFamilyFont_android_font 0
+int styleable FontFamilyFont_android_fontStyle 1
+int styleable FontFamilyFont_android_fontVariationSettings 2
+int styleable FontFamilyFont_android_fontWeight 3
+int styleable FontFamilyFont_android_ttcIndex 4
+int styleable FontFamilyFont_font 5
+int styleable FontFamilyFont_fontStyle 6
+int styleable FontFamilyFont_fontVariationSettings 7
+int styleable FontFamilyFont_fontWeight 8
+int styleable FontFamilyFont_ttcIndex 9
+int[] styleable Fragment { 0x10100d0, 0x1010003, 0x10100d1 }
+int styleable Fragment_android_id 0
+int styleable Fragment_android_name 1
+int styleable Fragment_android_tag 2
+int[] styleable FragmentContainerView { 0x1010003, 0x10100d1 }
+int styleable FragmentContainerView_android_name 0
+int styleable FragmentContainerView_android_tag 1
+int[] styleable GenericDraweeHierarchy { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable GenericDraweeHierarchy_actualImageScaleType 0
+int styleable GenericDraweeHierarchy_backgroundImage 1
+int styleable GenericDraweeHierarchy_fadeDuration 2
+int styleable GenericDraweeHierarchy_failureImage 3
+int styleable GenericDraweeHierarchy_failureImageScaleType 4
+int styleable GenericDraweeHierarchy_overlayImage 5
+int styleable GenericDraweeHierarchy_placeholderImage 6
+int styleable GenericDraweeHierarchy_placeholderImageScaleType 7
+int styleable GenericDraweeHierarchy_pressedStateOverlayImage 8
+int styleable GenericDraweeHierarchy_progressBarAutoRotateInterval 9
+int styleable GenericDraweeHierarchy_progressBarImage 10
+int styleable GenericDraweeHierarchy_progressBarImageScaleType 11
+int styleable GenericDraweeHierarchy_retryImage 12
+int styleable GenericDraweeHierarchy_retryImageScaleType 13
+int styleable GenericDraweeHierarchy_roundAsCircle 14
+int styleable GenericDraweeHierarchy_roundBottomEnd 15
+int styleable GenericDraweeHierarchy_roundBottomLeft 16
+int styleable GenericDraweeHierarchy_roundBottomRight 17
+int styleable GenericDraweeHierarchy_roundBottomStart 18
+int styleable GenericDraweeHierarchy_roundTopEnd 19
+int styleable GenericDraweeHierarchy_roundTopLeft 20
+int styleable GenericDraweeHierarchy_roundTopRight 21
+int styleable GenericDraweeHierarchy_roundTopStart 22
+int styleable GenericDraweeHierarchy_roundWithOverlayColor 23
+int styleable GenericDraweeHierarchy_roundedCornerRadius 24
+int styleable GenericDraweeHierarchy_roundingBorderColor 25
+int styleable GenericDraweeHierarchy_roundingBorderPadding 26
+int styleable GenericDraweeHierarchy_roundingBorderWidth 27
+int styleable GenericDraweeHierarchy_viewAspectRatio 28
+int[] styleable GradientColor { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 }
+int styleable GradientColor_android_centerColor 0
+int styleable GradientColor_android_centerX 1
+int styleable GradientColor_android_centerY 2
+int styleable GradientColor_android_endColor 3
+int styleable GradientColor_android_endX 4
+int styleable GradientColor_android_endY 5
+int styleable GradientColor_android_gradientRadius 6
+int styleable GradientColor_android_startColor 7
+int styleable GradientColor_android_startX 8
+int styleable GradientColor_android_startY 9
+int styleable GradientColor_android_tileMode 10
+int styleable GradientColor_android_type 11
+int[] styleable GradientColorItem { 0x10101a5, 0x1010514 }
+int styleable GradientColorItem_android_color 0
+int styleable GradientColorItem_android_offset 1
+int[] styleable LinearLayoutCompat { 0x1010126, 0x1010127, 0x10100af, 0x10100c4, 0x1010128, 0x0, 0x0, 0x0, 0x0 }
+int styleable LinearLayoutCompat_android_baselineAligned 0
+int styleable LinearLayoutCompat_android_baselineAlignedChildIndex 1
+int styleable LinearLayoutCompat_android_gravity 2
+int styleable LinearLayoutCompat_android_orientation 3
+int styleable LinearLayoutCompat_android_weightSum 4
+int styleable LinearLayoutCompat_divider 5
+int styleable LinearLayoutCompat_dividerPadding 6
+int styleable LinearLayoutCompat_measureWithLargestChild 7
+int styleable LinearLayoutCompat_showDividers 8
+int[] styleable LinearLayoutCompat_Layout { 0x10100b3, 0x10100f5, 0x1010181, 0x10100f4 }
+int styleable LinearLayoutCompat_Layout_android_layout_gravity 0
+int styleable LinearLayoutCompat_Layout_android_layout_height 1
+int styleable LinearLayoutCompat_Layout_android_layout_weight 2
+int styleable LinearLayoutCompat_Layout_android_layout_width 3
+int[] styleable ListPopupWindow { 0x10102ac, 0x10102ad }
+int styleable ListPopupWindow_android_dropDownHorizontalOffset 0
+int styleable ListPopupWindow_android_dropDownVerticalOffset 1
+int[] styleable LoadingImageView { 0x0, 0x0, 0x0 }
+int styleable LoadingImageView_circleCrop 0
+int styleable LoadingImageView_imageAspectRatio 1
+int styleable LoadingImageView_imageAspectRatioAdjust 2
+int[] styleable MapAttrs { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable MapAttrs_ambientEnabled 0
+int styleable MapAttrs_backgroundColor 1
+int styleable MapAttrs_cameraBearing 2
+int styleable MapAttrs_cameraMaxZoomPreference 3
+int styleable MapAttrs_cameraMinZoomPreference 4
+int styleable MapAttrs_cameraTargetLat 5
+int styleable MapAttrs_cameraTargetLng 6
+int styleable MapAttrs_cameraTilt 7
+int styleable MapAttrs_cameraZoom 8
+int styleable MapAttrs_latLngBoundsNorthEastLatitude 9
+int styleable MapAttrs_latLngBoundsNorthEastLongitude 10
+int styleable MapAttrs_latLngBoundsSouthWestLatitude 11
+int styleable MapAttrs_latLngBoundsSouthWestLongitude 12
+int styleable MapAttrs_liteMode 13
+int styleable MapAttrs_mapId 14
+int styleable MapAttrs_mapType 15
+int styleable MapAttrs_uiCompass 16
+int styleable MapAttrs_uiMapToolbar 17
+int styleable MapAttrs_uiRotateGestures 18
+int styleable MapAttrs_uiScrollGestures 19
+int styleable MapAttrs_uiScrollGesturesDuringRotateOrZoom 20
+int styleable MapAttrs_uiTiltGestures 21
+int styleable MapAttrs_uiZoomControls 22
+int styleable MapAttrs_uiZoomGestures 23
+int styleable MapAttrs_useViewLifecycle 24
+int styleable MapAttrs_zOrderOnTop 25
+int[] styleable MenuGroup { 0x10101e0, 0x101000e, 0x10100d0, 0x10101de, 0x10101df, 0x1010194 }
+int styleable MenuGroup_android_checkableBehavior 0
+int styleable MenuGroup_android_enabled 1
+int styleable MenuGroup_android_id 2
+int styleable MenuGroup_android_menuCategory 3
+int styleable MenuGroup_android_orderInCategory 4
+int styleable MenuGroup_android_visible 5
+int[] styleable MenuItem { 0x0, 0x0, 0x0, 0x0, 0x10101e3, 0x10101e5, 0x1010106, 0x101000e, 0x1010002, 0x10100d0, 0x10101de, 0x10101e4, 0x101026f, 0x10101df, 0x10101e1, 0x10101e2, 0x1010194, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable MenuItem_actionLayout 0
+int styleable MenuItem_actionProviderClass 1
+int styleable MenuItem_actionViewClass 2
+int styleable MenuItem_alphabeticModifiers 3
+int styleable MenuItem_android_alphabeticShortcut 4
+int styleable MenuItem_android_checkable 5
+int styleable MenuItem_android_checked 6
+int styleable MenuItem_android_enabled 7
+int styleable MenuItem_android_icon 8
+int styleable MenuItem_android_id 9
+int styleable MenuItem_android_menuCategory 10
+int styleable MenuItem_android_numericShortcut 11
+int styleable MenuItem_android_onClick 12
+int styleable MenuItem_android_orderInCategory 13
+int styleable MenuItem_android_title 14
+int styleable MenuItem_android_titleCondensed 15
+int styleable MenuItem_android_visible 16
+int styleable MenuItem_contentDescription 17
+int styleable MenuItem_iconTint 18
+int styleable MenuItem_iconTintMode 19
+int styleable MenuItem_numericModifiers 20
+int styleable MenuItem_showAsAction 21
+int styleable MenuItem_tooltipText 22
+int[] styleable MenuView { 0x101012f, 0x101012d, 0x1010130, 0x1010131, 0x101012c, 0x101012e, 0x10100ae, 0x0, 0x0 }
+int styleable MenuView_android_headerBackground 0
+int styleable MenuView_android_horizontalDivider 1
+int styleable MenuView_android_itemBackground 2
+int styleable MenuView_android_itemIconDisabledAlpha 3
+int styleable MenuView_android_itemTextAppearance 4
+int styleable MenuView_android_verticalDivider 5
+int styleable MenuView_android_windowAnimationStyle 6
+int styleable MenuView_preserveIconSpacing 7
+int styleable MenuView_subMenuArrow 8
+int[] styleable PopupWindow { 0x10102c9, 0x1010176, 0x0 }
+int styleable PopupWindow_android_popupAnimationStyle 0
+int styleable PopupWindow_android_popupBackground 1
+int styleable PopupWindow_overlapAnchor 2
+int[] styleable PopupWindowBackgroundState { 0x0 }
+int styleable PopupWindowBackgroundState_state_above_anchor 0
+int[] styleable RecycleListView { 0x0, 0x0 }
+int styleable RecycleListView_paddingBottomNoButtons 0
+int styleable RecycleListView_paddingTopNoTitle 1
+int[] styleable SearchView { 0x10100da, 0x1010264, 0x1010220, 0x101011f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SearchView_android_focusable 0
+int styleable SearchView_android_imeOptions 1
+int styleable SearchView_android_inputType 2
+int styleable SearchView_android_maxWidth 3
+int styleable SearchView_closeIcon 4
+int styleable SearchView_commitIcon 5
+int styleable SearchView_defaultQueryHint 6
+int styleable SearchView_goIcon 7
+int styleable SearchView_iconifiedByDefault 8
+int styleable SearchView_layout 9
+int styleable SearchView_queryBackground 10
+int styleable SearchView_queryHint 11
+int styleable SearchView_searchHintIcon 12
+int styleable SearchView_searchIcon 13
+int styleable SearchView_submitBackground 14
+int styleable SearchView_suggestionRowLayout 15
+int styleable SearchView_voiceIcon 16
+int[] styleable SignInButton { 0x0, 0x0, 0x0 }
+int styleable SignInButton_buttonSize 0
+int styleable SignInButton_colorScheme 1
+int styleable SignInButton_scopeUris 2
+int[] styleable SimpleDraweeView { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SimpleDraweeView_actualImageResource 0
+int styleable SimpleDraweeView_actualImageScaleType 1
+int styleable SimpleDraweeView_actualImageUri 2
+int styleable SimpleDraweeView_backgroundImage 3
+int styleable SimpleDraweeView_fadeDuration 4
+int styleable SimpleDraweeView_failureImage 5
+int styleable SimpleDraweeView_failureImageScaleType 6
+int styleable SimpleDraweeView_overlayImage 7
+int styleable SimpleDraweeView_placeholderImage 8
+int styleable SimpleDraweeView_placeholderImageScaleType 9
+int styleable SimpleDraweeView_pressedStateOverlayImage 10
+int styleable SimpleDraweeView_progressBarAutoRotateInterval 11
+int styleable SimpleDraweeView_progressBarImage 12
+int styleable SimpleDraweeView_progressBarImageScaleType 13
+int styleable SimpleDraweeView_retryImage 14
+int styleable SimpleDraweeView_retryImageScaleType 15
+int styleable SimpleDraweeView_roundAsCircle 16
+int styleable SimpleDraweeView_roundBottomEnd 17
+int styleable SimpleDraweeView_roundBottomLeft 18
+int styleable SimpleDraweeView_roundBottomRight 19
+int styleable SimpleDraweeView_roundBottomStart 20
+int styleable SimpleDraweeView_roundTopEnd 21
+int styleable SimpleDraweeView_roundTopLeft 22
+int styleable SimpleDraweeView_roundTopRight 23
+int styleable SimpleDraweeView_roundTopStart 24
+int styleable SimpleDraweeView_roundWithOverlayColor 25
+int styleable SimpleDraweeView_roundedCornerRadius 26
+int styleable SimpleDraweeView_roundingBorderColor 27
+int styleable SimpleDraweeView_roundingBorderPadding 28
+int styleable SimpleDraweeView_roundingBorderWidth 29
+int styleable SimpleDraweeView_viewAspectRatio 30
+int[] styleable Spinner { 0x1010262, 0x10100b2, 0x1010176, 0x101017b, 0x0 }
+int styleable Spinner_android_dropDownWidth 0
+int styleable Spinner_android_entries 1
+int styleable Spinner_android_popupBackground 2
+int styleable Spinner_android_prompt 3
+int styleable Spinner_popupTheme 4
+int[] styleable StateListDrawable { 0x1010196, 0x101011c, 0x101030c, 0x101030d, 0x1010195, 0x1010194 }
+int styleable StateListDrawable_android_constantSize 0
+int styleable StateListDrawable_android_dither 1
+int styleable StateListDrawable_android_enterFadeDuration 2
+int styleable StateListDrawable_android_exitFadeDuration 3
+int styleable StateListDrawable_android_variablePadding 4
+int styleable StateListDrawable_android_visible 5
+int[] styleable StateListDrawableItem { 0x1010199 }
+int styleable StateListDrawableItem_android_drawable 0
+int[] styleable SwitchCompat { 0x1010125, 0x1010124, 0x1010142, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SwitchCompat_android_textOff 0
+int styleable SwitchCompat_android_textOn 1
+int styleable SwitchCompat_android_thumb 2
+int styleable SwitchCompat_showText 3
+int styleable SwitchCompat_splitTrack 4
+int styleable SwitchCompat_switchMinWidth 5
+int styleable SwitchCompat_switchPadding 6
+int styleable SwitchCompat_switchTextAppearance 7
+int styleable SwitchCompat_thumbTextPadding 8
+int styleable SwitchCompat_thumbTint 9
+int styleable SwitchCompat_thumbTintMode 10
+int styleable SwitchCompat_track 11
+int styleable SwitchCompat_trackTint 12
+int styleable SwitchCompat_trackTintMode 13
+int[] styleable TextAppearance { 0x10103ac, 0x1010161, 0x1010162, 0x1010163, 0x1010164, 0x1010098, 0x101009a, 0x101009b, 0x1010585, 0x1010095, 0x1010097, 0x1010096, 0x0, 0x0, 0x0, 0x0 }
+int styleable TextAppearance_android_fontFamily 0
+int styleable TextAppearance_android_shadowColor 1
+int styleable TextAppearance_android_shadowDx 2
+int styleable TextAppearance_android_shadowDy 3
+int styleable TextAppearance_android_shadowRadius 4
+int styleable TextAppearance_android_textColor 5
+int styleable TextAppearance_android_textColorHint 6
+int styleable TextAppearance_android_textColorLink 7
+int styleable TextAppearance_android_textFontWeight 8
+int styleable TextAppearance_android_textSize 9
+int styleable TextAppearance_android_textStyle 10
+int styleable TextAppearance_android_typeface 11
+int styleable TextAppearance_fontFamily 12
+int styleable TextAppearance_fontVariationSettings 13
+int styleable TextAppearance_textAllCaps 14
+int styleable TextAppearance_textLocale 15
+int[] styleable Toolbar { 0x10100af, 0x1010140, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable Toolbar_android_gravity 0
+int styleable Toolbar_android_minHeight 1
+int styleable Toolbar_buttonGravity 2
+int styleable Toolbar_collapseContentDescription 3
+int styleable Toolbar_collapseIcon 4
+int styleable Toolbar_contentInsetEnd 5
+int styleable Toolbar_contentInsetEndWithActions 6
+int styleable Toolbar_contentInsetLeft 7
+int styleable Toolbar_contentInsetRight 8
+int styleable Toolbar_contentInsetStart 9
+int styleable Toolbar_contentInsetStartWithNavigation 10
+int styleable Toolbar_logo 11
+int styleable Toolbar_logoDescription 12
+int styleable Toolbar_maxButtonHeight 13
+int styleable Toolbar_menu 14
+int styleable Toolbar_navigationContentDescription 15
+int styleable Toolbar_navigationIcon 16
+int styleable Toolbar_popupTheme 17
+int styleable Toolbar_subtitle 18
+int styleable Toolbar_subtitleTextAppearance 19
+int styleable Toolbar_subtitleTextColor 20
+int styleable Toolbar_title 21
+int styleable Toolbar_titleMargin 22
+int styleable Toolbar_titleMarginBottom 23
+int styleable Toolbar_titleMarginEnd 24
+int styleable Toolbar_titleMarginStart 25
+int styleable Toolbar_titleMarginTop 26
+int styleable Toolbar_titleMargins 27
+int styleable Toolbar_titleTextAppearance 28
+int styleable Toolbar_titleTextColor 29
+int[] styleable View { 0x10100da, 0x1010000, 0x0, 0x0, 0x0 }
+int styleable View_android_focusable 0
+int styleable View_android_theme 1
+int styleable View_paddingEnd 2
+int styleable View_paddingStart 3
+int styleable View_theme 4
+int[] styleable ViewBackgroundHelper { 0x10100d4, 0x0, 0x0 }
+int styleable ViewBackgroundHelper_android_background 0
+int styleable ViewBackgroundHelper_backgroundTint 1
+int styleable ViewBackgroundHelper_backgroundTintMode 2
+int[] styleable ViewStubCompat { 0x10100d0, 0x10100f3, 0x10100f2 }
+int styleable ViewStubCompat_android_id 0
+int styleable ViewStubCompat_android_inflatedId 1
+int styleable ViewStubCompat_android_layout 2
+int xml rn_dev_preferences 0x0
diff --git a/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/jars/classes.jar b/node_modules/react-native-maps/android/build/.transforms/983c76bbf4ac67ed2c26213576f977c2/transformed/out/jars/classes.jar
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/.transforms/eb205da15e8d902b350db29d6d9875f4/results.bin b/node_modules/react-native-maps/android/build/.transforms/eb205da15e8d902b350db29d6d9875f4/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/eb205da15e8d902b350db29d6d9875f4/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/react-native-maps/android/build/.transforms/eb205da15e8d902b350db29d6d9875f4/transformed/classes/classes.dex b/node_modules/react-native-maps/android/build/.transforms/eb205da15e8d902b350db29d6d9875f4/transformed/classes/classes.dex
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/.transforms/ed9aa4c7744c507f3dcccae8c00d0e45/results.bin b/node_modules/react-native-maps/android/build/.transforms/ed9aa4c7744c507f3dcccae8c00d0e45/results.bin
new file mode 100644
index 0000000..0d259dd
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/.transforms/ed9aa4c7744c507f3dcccae8c00d0e45/results.bin
@@ -0,0 +1 @@
+o/classes
diff --git a/node_modules/react-native-maps/android/build/.transforms/ed9aa4c7744c507f3dcccae8c00d0e45/transformed/classes/classes.dex b/node_modules/react-native-maps/android/build/.transforms/ed9aa4c7744c507f3dcccae8c00d0e45/transformed/classes/classes.dex
new file mode 100644
index 0000000..aa21010
Binary files /dev/null and b/node_modules/react-native-maps/android/build/.transforms/ed9aa4c7744c507f3dcccae8c00d0e45/transformed/classes/classes.dex differ
diff --git a/node_modules/react-native-maps/android/build/generated/source/buildConfig/debug/com/airbnb/android/react/maps/BuildConfig.java b/node_modules/react-native-maps/android/build/generated/source/buildConfig/debug/com/airbnb/android/react/maps/BuildConfig.java
new file mode 100644
index 0000000..53e11cf
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/generated/source/buildConfig/debug/com/airbnb/android/react/maps/BuildConfig.java
@@ -0,0 +1,10 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.airbnb.android.react.maps;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = Boolean.parseBoolean("true");
+  public static final String LIBRARY_PACKAGE_NAME = "com.airbnb.android.react.maps";
+  public static final String BUILD_TYPE = "debug";
+}
diff --git a/node_modules/react-native-maps/android/build/generated/source/buildConfig/release/com/airbnb/android/react/maps/BuildConfig.java b/node_modules/react-native-maps/android/build/generated/source/buildConfig/release/com/airbnb/android/react/maps/BuildConfig.java
new file mode 100644
index 0000000..eebf2e1
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/generated/source/buildConfig/release/com/airbnb/android/react/maps/BuildConfig.java
@@ -0,0 +1,10 @@
+/**
+ * Automatically generated file. DO NOT MODIFY
+ */
+package com.airbnb.android.react.maps;
+
+public final class BuildConfig {
+  public static final boolean DEBUG = false;
+  public static final String LIBRARY_PACKAGE_NAME = "com.airbnb.android.react.maps";
+  public static final String BUILD_TYPE = "release";
+}
diff --git a/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml b/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..116aee6
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.airbnb.android.react.maps" >
+
+    <uses-sdk
+        android:minSdkVersion="21"
+        android:targetSdkVersion="33" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/output-metadata.json b/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/output-metadata.json
new file mode 100644
index 0000000..b048ca1
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.airbnb.android.react.maps",
+  "variantName": "debug",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/release/aapt/AndroidManifest.xml b/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/release/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..116aee6
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/release/aapt/AndroidManifest.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.airbnb.android.react.maps" >
+
+    <uses-sdk
+        android:minSdkVersion="21"
+        android:targetSdkVersion="33" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/release/aapt/output-metadata.json b/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/release/aapt/output-metadata.json
new file mode 100644
index 0000000..ed6fb9f
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/aapt_friendly_merged_manifests/release/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.airbnb.android.react.maps",
+  "variantName": "release",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/aar_main_jar/release/classes.jar b/node_modules/react-native-maps/android/build/intermediates/aar_main_jar/release/classes.jar
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/aar_metadata/debug/aar-metadata.properties b/node_modules/react-native-maps/android/build/intermediates/aar_metadata/debug/aar-metadata.properties
new file mode 100644
index 0000000..8c9c699
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/aar_metadata/debug/aar-metadata.properties
@@ -0,0 +1,4 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minAndroidGradlePluginVersion=1.0.0
diff --git a/node_modules/react-native-maps/android/build/intermediates/aar_metadata/release/aar-metadata.properties b/node_modules/react-native-maps/android/build/intermediates/aar_metadata/release/aar-metadata.properties
new file mode 100644
index 0000000..8c9c699
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/aar_metadata/release/aar-metadata.properties
@@ -0,0 +1,4 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minAndroidGradlePluginVersion=1.0.0
diff --git a/node_modules/react-native-maps/android/build/intermediates/annotation_processor_list/debug/annotationProcessors.json b/node_modules/react-native-maps/android/build/intermediates/annotation_processor_list/debug/annotationProcessors.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/annotation_processor_list/debug/annotationProcessors.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/annotation_processor_list/release/annotationProcessors.json b/node_modules/react-native-maps/android/build/intermediates/annotation_processor_list/release/annotationProcessors.json
new file mode 100644
index 0000000..9e26dfe
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/annotation_processor_list/release/annotationProcessors.json
@@ -0,0 +1 @@
+{}
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/annotations_typedef_file/release/typedefs.txt b/node_modules/react-native-maps/android/build/intermediates/annotations_typedef_file/release/typedefs.txt
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/compile_library_classes_jar/debug/classes.jar b/node_modules/react-native-maps/android/build/intermediates/compile_library_classes_jar/debug/classes.jar
new file mode 100644
index 0000000..9f9517b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/compile_library_classes_jar/debug/classes.jar differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/compile_library_classes_jar/release/classes.jar b/node_modules/react-native-maps/android/build/intermediates/compile_library_classes_jar/release/classes.jar
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/compile_r_class_jar/debug/R.jar b/node_modules/react-native-maps/android/build/intermediates/compile_r_class_jar/debug/R.jar
new file mode 100644
index 0000000..48a2063
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/compile_r_class_jar/debug/R.jar differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/compile_r_class_jar/release/R.jar b/node_modules/react-native-maps/android/build/intermediates/compile_r_class_jar/release/R.jar
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/compile_symbol_list/debug/R.txt b/node_modules/react-native-maps/android/build/intermediates/compile_symbol_list/debug/R.txt
new file mode 100644
index 0000000..9752a2d
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/compile_symbol_list/debug/R.txt
@@ -0,0 +1,2136 @@
+int anim abc_fade_in 0x0
+int anim abc_fade_out 0x0
+int anim abc_grow_fade_in_from_bottom 0x0
+int anim abc_popup_enter 0x0
+int anim abc_popup_exit 0x0
+int anim abc_shrink_fade_out_from_bottom 0x0
+int anim abc_slide_in_bottom 0x0
+int anim abc_slide_in_top 0x0
+int anim abc_slide_out_bottom 0x0
+int anim abc_slide_out_top 0x0
+int anim abc_tooltip_enter 0x0
+int anim abc_tooltip_exit 0x0
+int anim btn_checkbox_to_checked_box_inner_merged_animation 0x0
+int anim btn_checkbox_to_checked_box_outer_merged_animation 0x0
+int anim btn_checkbox_to_checked_icon_null_animation 0x0
+int anim btn_checkbox_to_unchecked_box_inner_merged_animation 0x0
+int anim btn_checkbox_to_unchecked_check_path_merged_animation 0x0
+int anim btn_checkbox_to_unchecked_icon_null_animation 0x0
+int anim btn_radio_to_off_mtrl_dot_group_animation 0x0
+int anim btn_radio_to_off_mtrl_ring_outer_animation 0x0
+int anim btn_radio_to_off_mtrl_ring_outer_path_animation 0x0
+int anim btn_radio_to_on_mtrl_dot_group_animation 0x0
+int anim btn_radio_to_on_mtrl_ring_outer_animation 0x0
+int anim btn_radio_to_on_mtrl_ring_outer_path_animation 0x0
+int anim catalyst_fade_in 0x0
+int anim catalyst_fade_out 0x0
+int anim catalyst_push_up_in 0x0
+int anim catalyst_push_up_out 0x0
+int anim catalyst_slide_down 0x0
+int anim catalyst_slide_up 0x0
+int anim fragment_fast_out_extra_slow_in 0x0
+int animator fragment_close_enter 0x0
+int animator fragment_close_exit 0x0
+int animator fragment_fade_enter 0x0
+int animator fragment_fade_exit 0x0
+int animator fragment_open_enter 0x0
+int animator fragment_open_exit 0x0
+int attr actionBarDivider 0x0
+int attr actionBarItemBackground 0x0
+int attr actionBarPopupTheme 0x0
+int attr actionBarSize 0x0
+int attr actionBarSplitStyle 0x0
+int attr actionBarStyle 0x0
+int attr actionBarTabBarStyle 0x0
+int attr actionBarTabStyle 0x0
+int attr actionBarTabTextStyle 0x0
+int attr actionBarTheme 0x0
+int attr actionBarWidgetTheme 0x0
+int attr actionButtonStyle 0x0
+int attr actionDropDownStyle 0x0
+int attr actionLayout 0x0
+int attr actionMenuTextAppearance 0x0
+int attr actionMenuTextColor 0x0
+int attr actionModeBackground 0x0
+int attr actionModeCloseButtonStyle 0x0
+int attr actionModeCloseContentDescription 0x0
+int attr actionModeCloseDrawable 0x0
+int attr actionModeCopyDrawable 0x0
+int attr actionModeCutDrawable 0x0
+int attr actionModeFindDrawable 0x0
+int attr actionModePasteDrawable 0x0
+int attr actionModePopupWindowStyle 0x0
+int attr actionModeSelectAllDrawable 0x0
+int attr actionModeShareDrawable 0x0
+int attr actionModeSplitBackground 0x0
+int attr actionModeStyle 0x0
+int attr actionModeTheme 0x0
+int attr actionModeWebSearchDrawable 0x0
+int attr actionOverflowButtonStyle 0x0
+int attr actionOverflowMenuStyle 0x0
+int attr actionProviderClass 0x0
+int attr actionViewClass 0x0
+int attr activityChooserViewStyle 0x0
+int attr actualImageResource 0x0
+int attr actualImageScaleType 0x0
+int attr actualImageUri 0x0
+int attr alertDialogButtonGroupStyle 0x0
+int attr alertDialogCenterButtons 0x0
+int attr alertDialogStyle 0x0
+int attr alertDialogTheme 0x0
+int attr allowStacking 0x0
+int attr alpha 0x0
+int attr alphabeticModifiers 0x0
+int attr ambientEnabled 0x0
+int attr arrowHeadLength 0x0
+int attr arrowShaftLength 0x0
+int attr autoCompleteTextViewStyle 0x0
+int attr autoSizeMaxTextSize 0x0
+int attr autoSizeMinTextSize 0x0
+int attr autoSizePresetSizes 0x0
+int attr autoSizeStepGranularity 0x0
+int attr autoSizeTextType 0x0
+int attr autofillInlineSuggestionChip 0x0
+int attr autofillInlineSuggestionEndIconStyle 0x0
+int attr autofillInlineSuggestionStartIconStyle 0x0
+int attr autofillInlineSuggestionSubtitle 0x0
+int attr autofillInlineSuggestionTitle 0x0
+int attr background 0x0
+int attr backgroundColor 0x0
+int attr backgroundImage 0x0
+int attr backgroundSplit 0x0
+int attr backgroundStacked 0x0
+int attr backgroundTint 0x0
+int attr backgroundTintMode 0x0
+int attr barLength 0x0
+int attr borderlessButtonStyle 0x0
+int attr buttonBarButtonStyle 0x0
+int attr buttonBarNegativeButtonStyle 0x0
+int attr buttonBarNeutralButtonStyle 0x0
+int attr buttonBarPositiveButtonStyle 0x0
+int attr buttonBarStyle 0x0
+int attr buttonCompat 0x0
+int attr buttonGravity 0x0
+int attr buttonIconDimen 0x0
+int attr buttonPanelSideLayout 0x0
+int attr buttonSize 0x0
+int attr buttonStyle 0x0
+int attr buttonStyleSmall 0x0
+int attr buttonTint 0x0
+int attr buttonTintMode 0x0
+int attr cameraBearing 0x0
+int attr cameraMaxZoomPreference 0x0
+int attr cameraMinZoomPreference 0x0
+int attr cameraTargetLat 0x0
+int attr cameraTargetLng 0x0
+int attr cameraTilt 0x0
+int attr cameraZoom 0x0
+int attr checkMarkCompat 0x0
+int attr checkMarkTint 0x0
+int attr checkMarkTintMode 0x0
+int attr checkboxStyle 0x0
+int attr checkedTextViewStyle 0x0
+int attr circleCrop 0x0
+int attr closeIcon 0x0
+int attr closeItemLayout 0x0
+int attr collapseContentDescription 0x0
+int attr collapseIcon 0x0
+int attr color 0x0
+int attr colorAccent 0x0
+int attr colorBackgroundFloating 0x0
+int attr colorButtonNormal 0x0
+int attr colorControlActivated 0x0
+int attr colorControlHighlight 0x0
+int attr colorControlNormal 0x0
+int attr colorError 0x0
+int attr colorPrimary 0x0
+int attr colorPrimaryDark 0x0
+int attr colorScheme 0x0
+int attr colorSwitchThumbNormal 0x0
+int attr commitIcon 0x0
+int attr contentDescription 0x0
+int attr contentInsetEnd 0x0
+int attr contentInsetEndWithActions 0x0
+int attr contentInsetLeft 0x0
+int attr contentInsetRight 0x0
+int attr contentInsetStart 0x0
+int attr contentInsetStartWithNavigation 0x0
+int attr controlBackground 0x0
+int attr customNavigationLayout 0x0
+int attr defaultQueryHint 0x0
+int attr dialogCornerRadius 0x0
+int attr dialogPreferredPadding 0x0
+int attr dialogTheme 0x0
+int attr displayOptions 0x0
+int attr divider 0x0
+int attr dividerHorizontal 0x0
+int attr dividerPadding 0x0
+int attr dividerVertical 0x0
+int attr drawableBottomCompat 0x0
+int attr drawableEndCompat 0x0
+int attr drawableLeftCompat 0x0
+int attr drawableRightCompat 0x0
+int attr drawableSize 0x0
+int attr drawableStartCompat 0x0
+int attr drawableTint 0x0
+int attr drawableTintMode 0x0
+int attr drawableTopCompat 0x0
+int attr drawerArrowStyle 0x0
+int attr dropDownListViewStyle 0x0
+int attr dropdownListPreferredItemHeight 0x0
+int attr editTextBackground 0x0
+int attr editTextColor 0x0
+int attr editTextStyle 0x0
+int attr elevation 0x0
+int attr emojiCompatEnabled 0x0
+int attr expandActivityOverflowButtonDrawable 0x0
+int attr fadeDuration 0x0
+int attr failureImage 0x0
+int attr failureImageScaleType 0x0
+int attr firstBaselineToTopHeight 0x0
+int attr font 0x0
+int attr fontFamily 0x0
+int attr fontProviderAuthority 0x0
+int attr fontProviderCerts 0x0
+int attr fontProviderFetchStrategy 0x0
+int attr fontProviderFetchTimeout 0x0
+int attr fontProviderPackage 0x0
+int attr fontProviderQuery 0x0
+int attr fontProviderSystemFontFamily 0x0
+int attr fontStyle 0x0
+int attr fontVariationSettings 0x0
+int attr fontWeight 0x0
+int attr gapBetweenBars 0x0
+int attr goIcon 0x0
+int attr height 0x0
+int attr hideOnContentScroll 0x0
+int attr homeAsUpIndicator 0x0
+int attr homeLayout 0x0
+int attr icon 0x0
+int attr iconTint 0x0
+int attr iconTintMode 0x0
+int attr iconifiedByDefault 0x0
+int attr imageAspectRatio 0x0
+int attr imageAspectRatioAdjust 0x0
+int attr imageButtonStyle 0x0
+int attr indeterminateProgressStyle 0x0
+int attr initialActivityCount 0x0
+int attr isAutofillInlineSuggestionTheme 0x0
+int attr isLightTheme 0x0
+int attr itemPadding 0x0
+int attr lStar 0x0
+int attr lastBaselineToBottomHeight 0x0
+int attr latLngBoundsNorthEastLatitude 0x0
+int attr latLngBoundsNorthEastLongitude 0x0
+int attr latLngBoundsSouthWestLatitude 0x0
+int attr latLngBoundsSouthWestLongitude 0x0
+int attr layout 0x0
+int attr lineHeight 0x0
+int attr listChoiceBackgroundIndicator 0x0
+int attr listChoiceIndicatorMultipleAnimated 0x0
+int attr listChoiceIndicatorSingleAnimated 0x0
+int attr listDividerAlertDialog 0x0
+int attr listItemLayout 0x0
+int attr listLayout 0x0
+int attr listMenuViewStyle 0x0
+int attr listPopupWindowStyle 0x0
+int attr listPreferredItemHeight 0x0
+int attr listPreferredItemHeightLarge 0x0
+int attr listPreferredItemHeightSmall 0x0
+int attr listPreferredItemPaddingEnd 0x0
+int attr listPreferredItemPaddingLeft 0x0
+int attr listPreferredItemPaddingRight 0x0
+int attr listPreferredItemPaddingStart 0x0
+int attr liteMode 0x0
+int attr logo 0x0
+int attr logoDescription 0x0
+int attr mapId 0x0
+int attr mapType 0x0
+int attr maxButtonHeight 0x0
+int attr measureWithLargestChild 0x0
+int attr menu 0x0
+int attr multiChoiceItemLayout 0x0
+int attr navigationContentDescription 0x0
+int attr navigationIcon 0x0
+int attr navigationMode 0x0
+int attr nestedScrollViewStyle 0x0
+int attr numericModifiers 0x0
+int attr overlapAnchor 0x0
+int attr overlayImage 0x0
+int attr paddingBottomNoButtons 0x0
+int attr paddingEnd 0x0
+int attr paddingStart 0x0
+int attr paddingTopNoTitle 0x0
+int attr panelBackground 0x0
+int attr panelMenuListTheme 0x0
+int attr panelMenuListWidth 0x0
+int attr placeholderImage 0x0
+int attr placeholderImageScaleType 0x0
+int attr popupMenuStyle 0x0
+int attr popupTheme 0x0
+int attr popupWindowStyle 0x0
+int attr preserveIconSpacing 0x0
+int attr pressedStateOverlayImage 0x0
+int attr progressBarAutoRotateInterval 0x0
+int attr progressBarImage 0x0
+int attr progressBarImageScaleType 0x0
+int attr progressBarPadding 0x0
+int attr progressBarStyle 0x0
+int attr queryBackground 0x0
+int attr queryHint 0x0
+int attr queryPatterns 0x0
+int attr radioButtonStyle 0x0
+int attr ratingBarStyle 0x0
+int attr ratingBarStyleIndicator 0x0
+int attr ratingBarStyleSmall 0x0
+int attr retryImage 0x0
+int attr retryImageScaleType 0x0
+int attr roundAsCircle 0x0
+int attr roundBottomEnd 0x0
+int attr roundBottomLeft 0x0
+int attr roundBottomRight 0x0
+int attr roundBottomStart 0x0
+int attr roundTopEnd 0x0
+int attr roundTopLeft 0x0
+int attr roundTopRight 0x0
+int attr roundTopStart 0x0
+int attr roundWithOverlayColor 0x0
+int attr roundedCornerRadius 0x0
+int attr roundingBorderColor 0x0
+int attr roundingBorderPadding 0x0
+int attr roundingBorderWidth 0x0
+int attr scopeUris 0x0
+int attr searchHintIcon 0x0
+int attr searchIcon 0x0
+int attr searchViewStyle 0x0
+int attr seekBarStyle 0x0
+int attr selectableItemBackground 0x0
+int attr selectableItemBackgroundBorderless 0x0
+int attr shortcutMatchRequired 0x0
+int attr showAsAction 0x0
+int attr showDividers 0x0
+int attr showText 0x0
+int attr showTitle 0x0
+int attr singleChoiceItemLayout 0x0
+int attr spinBars 0x0
+int attr spinnerDropDownItemStyle 0x0
+int attr spinnerStyle 0x0
+int attr splitTrack 0x0
+int attr srcCompat 0x0
+int attr state_above_anchor 0x0
+int attr subMenuArrow 0x0
+int attr submitBackground 0x0
+int attr subtitle 0x0
+int attr subtitleTextAppearance 0x0
+int attr subtitleTextColor 0x0
+int attr subtitleTextStyle 0x0
+int attr suggestionRowLayout 0x0
+int attr switchMinWidth 0x0
+int attr switchPadding 0x0
+int attr switchStyle 0x0
+int attr switchTextAppearance 0x0
+int attr textAllCaps 0x0
+int attr textAppearanceLargePopupMenu 0x0
+int attr textAppearanceListItem 0x0
+int attr textAppearanceListItemSecondary 0x0
+int attr textAppearanceListItemSmall 0x0
+int attr textAppearancePopupMenuHeader 0x0
+int attr textAppearanceSearchResultSubtitle 0x0
+int attr textAppearanceSearchResultTitle 0x0
+int attr textAppearanceSmallPopupMenu 0x0
+int attr textColorAlertDialogListItem 0x0
+int attr textColorSearchUrl 0x0
+int attr textLocale 0x0
+int attr theme 0x0
+int attr thickness 0x0
+int attr thumbTextPadding 0x0
+int attr thumbTint 0x0
+int attr thumbTintMode 0x0
+int attr tickMark 0x0
+int attr tickMarkTint 0x0
+int attr tickMarkTintMode 0x0
+int attr tint 0x0
+int attr tintMode 0x0
+int attr title 0x0
+int attr titleMargin 0x0
+int attr titleMarginBottom 0x0
+int attr titleMarginEnd 0x0
+int attr titleMarginStart 0x0
+int attr titleMarginTop 0x0
+int attr titleMargins 0x0
+int attr titleTextAppearance 0x0
+int attr titleTextColor 0x0
+int attr titleTextStyle 0x0
+int attr toolbarNavigationButtonStyle 0x0
+int attr toolbarStyle 0x0
+int attr tooltipForegroundColor 0x0
+int attr tooltipFrameBackground 0x0
+int attr tooltipText 0x0
+int attr track 0x0
+int attr trackTint 0x0
+int attr trackTintMode 0x0
+int attr ttcIndex 0x0
+int attr uiCompass 0x0
+int attr uiMapToolbar 0x0
+int attr uiRotateGestures 0x0
+int attr uiScrollGestures 0x0
+int attr uiScrollGesturesDuringRotateOrZoom 0x0
+int attr uiTiltGestures 0x0
+int attr uiZoomControls 0x0
+int attr uiZoomGestures 0x0
+int attr useViewLifecycle 0x0
+int attr viewAspectRatio 0x0
+int attr viewInflaterClass 0x0
+int attr voiceIcon 0x0
+int attr windowActionBar 0x0
+int attr windowActionBarOverlay 0x0
+int attr windowActionModeOverlay 0x0
+int attr windowFixedHeightMajor 0x0
+int attr windowFixedHeightMinor 0x0
+int attr windowFixedWidthMajor 0x0
+int attr windowFixedWidthMinor 0x0
+int attr windowMinWidthMajor 0x0
+int attr windowMinWidthMinor 0x0
+int attr windowNoTitle 0x0
+int attr zOrderOnTop 0x0
+int bool abc_action_bar_embed_tabs 0x0
+int bool abc_config_actionMenuItemAllCaps 0x0
+int bool enable_system_alarm_service_default 0x0
+int bool enable_system_foreground_service_default 0x0
+int bool enable_system_job_service_default 0x0
+int bool workmanager_test_configuration 0x0
+int color abc_background_cache_hint_selector_material_dark 0x0
+int color abc_background_cache_hint_selector_material_light 0x0
+int color abc_btn_colored_borderless_text_material 0x0
+int color abc_btn_colored_text_material 0x0
+int color abc_color_highlight_material 0x0
+int color abc_decor_view_status_guard 0x0
+int color abc_decor_view_status_guard_light 0x0
+int color abc_hint_foreground_material_dark 0x0
+int color abc_hint_foreground_material_light 0x0
+int color abc_primary_text_disable_only_material_dark 0x0
+int color abc_primary_text_disable_only_material_light 0x0
+int color abc_primary_text_material_dark 0x0
+int color abc_primary_text_material_light 0x0
+int color abc_search_url_text 0x0
+int color abc_search_url_text_normal 0x0
+int color abc_search_url_text_pressed 0x0
+int color abc_search_url_text_selected 0x0
+int color abc_secondary_text_material_dark 0x0
+int color abc_secondary_text_material_light 0x0
+int color abc_tint_btn_checkable 0x0
+int color abc_tint_default 0x0
+int color abc_tint_edittext 0x0
+int color abc_tint_seek_thumb 0x0
+int color abc_tint_spinner 0x0
+int color abc_tint_switch_track 0x0
+int color accent_material_dark 0x0
+int color accent_material_light 0x0
+int color androidx_core_ripple_material_light 0x0
+int color androidx_core_secondary_text_default_material_light 0x0
+int color background_floating_material_dark 0x0
+int color background_floating_material_light 0x0
+int color background_material_dark 0x0
+int color background_material_light 0x0
+int color bright_foreground_disabled_material_dark 0x0
+int color bright_foreground_disabled_material_light 0x0
+int color bright_foreground_inverse_material_dark 0x0
+int color bright_foreground_inverse_material_light 0x0
+int color bright_foreground_material_dark 0x0
+int color bright_foreground_material_light 0x0
+int color button_material_dark 0x0
+int color button_material_light 0x0
+int color catalyst_logbox_background 0x0
+int color catalyst_redbox_background 0x0
+int color common_google_signin_btn_text_dark 0x0
+int color common_google_signin_btn_text_dark_default 0x0
+int color common_google_signin_btn_text_dark_disabled 0x0
+int color common_google_signin_btn_text_dark_focused 0x0
+int color common_google_signin_btn_text_dark_pressed 0x0
+int color common_google_signin_btn_text_light 0x0
+int color common_google_signin_btn_text_light_default 0x0
+int color common_google_signin_btn_text_light_disabled 0x0
+int color common_google_signin_btn_text_light_focused 0x0
+int color common_google_signin_btn_text_light_pressed 0x0
+int color common_google_signin_btn_tint 0x0
+int color dim_foreground_disabled_material_dark 0x0
+int color dim_foreground_disabled_material_light 0x0
+int color dim_foreground_material_dark 0x0
+int color dim_foreground_material_light 0x0
+int color error_color_material_dark 0x0
+int color error_color_material_light 0x0
+int color foreground_material_dark 0x0
+int color foreground_material_light 0x0
+int color highlighted_text_material_dark 0x0
+int color highlighted_text_material_light 0x0
+int color material_blue_grey_800 0x0
+int color material_blue_grey_900 0x0
+int color material_blue_grey_950 0x0
+int color material_deep_teal_200 0x0
+int color material_deep_teal_500 0x0
+int color material_grey_100 0x0
+int color material_grey_300 0x0
+int color material_grey_50 0x0
+int color material_grey_600 0x0
+int color material_grey_800 0x0
+int color material_grey_850 0x0
+int color material_grey_900 0x0
+int color notification_action_color_filter 0x0
+int color notification_icon_bg_color 0x0
+int color primary_dark_material_dark 0x0
+int color primary_dark_material_light 0x0
+int color primary_material_dark 0x0
+int color primary_material_light 0x0
+int color primary_text_default_material_dark 0x0
+int color primary_text_default_material_light 0x0
+int color primary_text_disabled_material_dark 0x0
+int color primary_text_disabled_material_light 0x0
+int color ripple_material_dark 0x0
+int color ripple_material_light 0x0
+int color secondary_text_default_material_dark 0x0
+int color secondary_text_default_material_light 0x0
+int color secondary_text_disabled_material_dark 0x0
+int color secondary_text_disabled_material_light 0x0
+int color switch_thumb_disabled_material_dark 0x0
+int color switch_thumb_disabled_material_light 0x0
+int color switch_thumb_material_dark 0x0
+int color switch_thumb_material_light 0x0
+int color switch_thumb_normal_material_dark 0x0
+int color switch_thumb_normal_material_light 0x0
+int color tooltip_background_dark 0x0
+int color tooltip_background_light 0x0
+int dimen abc_action_bar_content_inset_material 0x0
+int dimen abc_action_bar_content_inset_with_nav 0x0
+int dimen abc_action_bar_default_height_material 0x0
+int dimen abc_action_bar_default_padding_end_material 0x0
+int dimen abc_action_bar_default_padding_start_material 0x0
+int dimen abc_action_bar_elevation_material 0x0
+int dimen abc_action_bar_icon_vertical_padding_material 0x0
+int dimen abc_action_bar_overflow_padding_end_material 0x0
+int dimen abc_action_bar_overflow_padding_start_material 0x0
+int dimen abc_action_bar_stacked_max_height 0x0
+int dimen abc_action_bar_stacked_tab_max_width 0x0
+int dimen abc_action_bar_subtitle_bottom_margin_material 0x0
+int dimen abc_action_bar_subtitle_top_margin_material 0x0
+int dimen abc_action_button_min_height_material 0x0
+int dimen abc_action_button_min_width_material 0x0
+int dimen abc_action_button_min_width_overflow_material 0x0
+int dimen abc_alert_dialog_button_bar_height 0x0
+int dimen abc_alert_dialog_button_dimen 0x0
+int dimen abc_button_inset_horizontal_material 0x0
+int dimen abc_button_inset_vertical_material 0x0
+int dimen abc_button_padding_horizontal_material 0x0
+int dimen abc_button_padding_vertical_material 0x0
+int dimen abc_cascading_menus_min_smallest_width 0x0
+int dimen abc_config_prefDialogWidth 0x0
+int dimen abc_control_corner_material 0x0
+int dimen abc_control_inset_material 0x0
+int dimen abc_control_padding_material 0x0
+int dimen abc_dialog_corner_radius_material 0x0
+int dimen abc_dialog_fixed_height_major 0x0
+int dimen abc_dialog_fixed_height_minor 0x0
+int dimen abc_dialog_fixed_width_major 0x0
+int dimen abc_dialog_fixed_width_minor 0x0
+int dimen abc_dialog_list_padding_bottom_no_buttons 0x0
+int dimen abc_dialog_list_padding_top_no_title 0x0
+int dimen abc_dialog_min_width_major 0x0
+int dimen abc_dialog_min_width_minor 0x0
+int dimen abc_dialog_padding_material 0x0
+int dimen abc_dialog_padding_top_material 0x0
+int dimen abc_dialog_title_divider_material 0x0
+int dimen abc_disabled_alpha_material_dark 0x0
+int dimen abc_disabled_alpha_material_light 0x0
+int dimen abc_dropdownitem_icon_width 0x0
+int dimen abc_dropdownitem_text_padding_left 0x0
+int dimen abc_dropdownitem_text_padding_right 0x0
+int dimen abc_edit_text_inset_bottom_material 0x0
+int dimen abc_edit_text_inset_horizontal_material 0x0
+int dimen abc_edit_text_inset_top_material 0x0
+int dimen abc_floating_window_z 0x0
+int dimen abc_list_item_height_large_material 0x0
+int dimen abc_list_item_height_material 0x0
+int dimen abc_list_item_height_small_material 0x0
+int dimen abc_list_item_padding_horizontal_material 0x0
+int dimen abc_panel_menu_list_width 0x0
+int dimen abc_progress_bar_height_material 0x0
+int dimen abc_search_view_preferred_height 0x0
+int dimen abc_search_view_preferred_width 0x0
+int dimen abc_seekbar_track_background_height_material 0x0
+int dimen abc_seekbar_track_progress_height_material 0x0
+int dimen abc_select_dialog_padding_start_material 0x0
+int dimen abc_star_big 0x0
+int dimen abc_star_medium 0x0
+int dimen abc_star_small 0x0
+int dimen abc_switch_padding 0x0
+int dimen abc_text_size_body_1_material 0x0
+int dimen abc_text_size_body_2_material 0x0
+int dimen abc_text_size_button_material 0x0
+int dimen abc_text_size_caption_material 0x0
+int dimen abc_text_size_display_1_material 0x0
+int dimen abc_text_size_display_2_material 0x0
+int dimen abc_text_size_display_3_material 0x0
+int dimen abc_text_size_display_4_material 0x0
+int dimen abc_text_size_headline_material 0x0
+int dimen abc_text_size_large_material 0x0
+int dimen abc_text_size_medium_material 0x0
+int dimen abc_text_size_menu_header_material 0x0
+int dimen abc_text_size_menu_material 0x0
+int dimen abc_text_size_small_material 0x0
+int dimen abc_text_size_subhead_material 0x0
+int dimen abc_text_size_subtitle_material_toolbar 0x0
+int dimen abc_text_size_title_material 0x0
+int dimen abc_text_size_title_material_toolbar 0x0
+int dimen autofill_inline_suggestion_icon_size 0x0
+int dimen compat_button_inset_horizontal_material 0x0
+int dimen compat_button_inset_vertical_material 0x0
+int dimen compat_button_padding_horizontal_material 0x0
+int dimen compat_button_padding_vertical_material 0x0
+int dimen compat_control_corner_material 0x0
+int dimen compat_notification_large_icon_max_height 0x0
+int dimen compat_notification_large_icon_max_width 0x0
+int dimen disabled_alpha_material_dark 0x0
+int dimen disabled_alpha_material_light 0x0
+int dimen highlight_alpha_material_colored 0x0
+int dimen highlight_alpha_material_dark 0x0
+int dimen highlight_alpha_material_light 0x0
+int dimen hint_alpha_material_dark 0x0
+int dimen hint_alpha_material_light 0x0
+int dimen hint_pressed_alpha_material_dark 0x0
+int dimen hint_pressed_alpha_material_light 0x0
+int dimen notification_action_icon_size 0x0
+int dimen notification_action_text_size 0x0
+int dimen notification_big_circle_margin 0x0
+int dimen notification_content_margin_start 0x0
+int dimen notification_large_icon_height 0x0
+int dimen notification_large_icon_width 0x0
+int dimen notification_main_column_padding_top 0x0
+int dimen notification_media_narrow_margin 0x0
+int dimen notification_right_icon_size 0x0
+int dimen notification_right_side_padding_top 0x0
+int dimen notification_small_icon_background_padding 0x0
+int dimen notification_small_icon_size_as_large 0x0
+int dimen notification_subtext_size 0x0
+int dimen notification_top_pad 0x0
+int dimen notification_top_pad_large_text 0x0
+int dimen tooltip_corner_radius 0x0
+int dimen tooltip_horizontal_padding 0x0
+int dimen tooltip_margin 0x0
+int dimen tooltip_precise_anchor_extra_offset 0x0
+int dimen tooltip_precise_anchor_threshold 0x0
+int dimen tooltip_vertical_padding 0x0
+int dimen tooltip_y_offset_non_touch 0x0
+int dimen tooltip_y_offset_touch 0x0
+int drawable abc_ab_share_pack_mtrl_alpha 0x0
+int drawable abc_action_bar_item_background_material 0x0
+int drawable abc_btn_borderless_material 0x0
+int drawable abc_btn_check_material 0x0
+int drawable abc_btn_check_material_anim 0x0
+int drawable abc_btn_check_to_on_mtrl_000 0x0
+int drawable abc_btn_check_to_on_mtrl_015 0x0
+int drawable abc_btn_colored_material 0x0
+int drawable abc_btn_default_mtrl_shape 0x0
+int drawable abc_btn_radio_material 0x0
+int drawable abc_btn_radio_material_anim 0x0
+int drawable abc_btn_radio_to_on_mtrl_000 0x0
+int drawable abc_btn_radio_to_on_mtrl_015 0x0
+int drawable abc_btn_switch_to_on_mtrl_00001 0x0
+int drawable abc_btn_switch_to_on_mtrl_00012 0x0
+int drawable abc_cab_background_internal_bg 0x0
+int drawable abc_cab_background_top_material 0x0
+int drawable abc_cab_background_top_mtrl_alpha 0x0
+int drawable abc_control_background_material 0x0
+int drawable abc_dialog_material_background 0x0
+int drawable abc_edit_text_material 0x0
+int drawable abc_ic_ab_back_material 0x0
+int drawable abc_ic_arrow_drop_right_black_24dp 0x0
+int drawable abc_ic_clear_material 0x0
+int drawable abc_ic_commit_search_api_mtrl_alpha 0x0
+int drawable abc_ic_go_search_api_material 0x0
+int drawable abc_ic_menu_copy_mtrl_am_alpha 0x0
+int drawable abc_ic_menu_cut_mtrl_alpha 0x0
+int drawable abc_ic_menu_overflow_material 0x0
+int drawable abc_ic_menu_paste_mtrl_am_alpha 0x0
+int drawable abc_ic_menu_selectall_mtrl_alpha 0x0
+int drawable abc_ic_menu_share_mtrl_alpha 0x0
+int drawable abc_ic_search_api_material 0x0
+int drawable abc_ic_voice_search_api_material 0x0
+int drawable abc_item_background_holo_dark 0x0
+int drawable abc_item_background_holo_light 0x0
+int drawable abc_list_divider_material 0x0
+int drawable abc_list_divider_mtrl_alpha 0x0
+int drawable abc_list_focused_holo 0x0
+int drawable abc_list_longpressed_holo 0x0
+int drawable abc_list_pressed_holo_dark 0x0
+int drawable abc_list_pressed_holo_light 0x0
+int drawable abc_list_selector_background_transition_holo_dark 0x0
+int drawable abc_list_selector_background_transition_holo_light 0x0
+int drawable abc_list_selector_disabled_holo_dark 0x0
+int drawable abc_list_selector_disabled_holo_light 0x0
+int drawable abc_list_selector_holo_dark 0x0
+int drawable abc_list_selector_holo_light 0x0
+int drawable abc_menu_hardkey_panel_mtrl_mult 0x0
+int drawable abc_popup_background_mtrl_mult 0x0
+int drawable abc_ratingbar_indicator_material 0x0
+int drawable abc_ratingbar_material 0x0
+int drawable abc_ratingbar_small_material 0x0
+int drawable abc_scrubber_control_off_mtrl_alpha 0x0
+int drawable abc_scrubber_control_to_pressed_mtrl_000 0x0
+int drawable abc_scrubber_control_to_pressed_mtrl_005 0x0
+int drawable abc_scrubber_primary_mtrl_alpha 0x0
+int drawable abc_scrubber_track_mtrl_alpha 0x0
+int drawable abc_seekbar_thumb_material 0x0
+int drawable abc_seekbar_tick_mark_material 0x0
+int drawable abc_seekbar_track_material 0x0
+int drawable abc_spinner_mtrl_am_alpha 0x0
+int drawable abc_spinner_textfield_background_material 0x0
+int drawable abc_star_black_48dp 0x0
+int drawable abc_star_half_black_48dp 0x0
+int drawable abc_switch_thumb_material 0x0
+int drawable abc_switch_track_mtrl_alpha 0x0
+int drawable abc_tab_indicator_material 0x0
+int drawable abc_tab_indicator_mtrl_alpha 0x0
+int drawable abc_text_cursor_material 0x0
+int drawable abc_text_select_handle_left_mtrl 0x0
+int drawable abc_text_select_handle_middle_mtrl 0x0
+int drawable abc_text_select_handle_right_mtrl 0x0
+int drawable abc_textfield_activated_mtrl_alpha 0x0
+int drawable abc_textfield_default_mtrl_alpha 0x0
+int drawable abc_textfield_search_activated_mtrl_alpha 0x0
+int drawable abc_textfield_search_default_mtrl_alpha 0x0
+int drawable abc_textfield_search_material 0x0
+int drawable abc_vector_test 0x0
+int drawable amu_bubble_mask 0x0
+int drawable amu_bubble_shadow 0x0
+int drawable autofill_inline_suggestion_chip_background 0x0
+int drawable btn_checkbox_checked_mtrl 0x0
+int drawable btn_checkbox_checked_to_unchecked_mtrl_animation 0x0
+int drawable btn_checkbox_unchecked_mtrl 0x0
+int drawable btn_checkbox_unchecked_to_checked_mtrl_animation 0x0
+int drawable btn_radio_off_mtrl 0x0
+int drawable btn_radio_off_to_on_mtrl_animation 0x0
+int drawable btn_radio_on_mtrl 0x0
+int drawable btn_radio_on_to_off_mtrl_animation 0x0
+int drawable common_full_open_on_phone 0x0
+int drawable common_google_signin_btn_icon_dark 0x0
+int drawable common_google_signin_btn_icon_dark_disabled 0x0
+int drawable common_google_signin_btn_icon_dark_focused 0x0
+int drawable common_google_signin_btn_icon_dark_normal 0x0
+int drawable common_google_signin_btn_icon_dark_normal_background 0x0
+int drawable common_google_signin_btn_icon_dark_pressed 0x0
+int drawable common_google_signin_btn_icon_disabled 0x0
+int drawable common_google_signin_btn_icon_light 0x0
+int drawable common_google_signin_btn_icon_light_disabled 0x0
+int drawable common_google_signin_btn_icon_light_focused 0x0
+int drawable common_google_signin_btn_icon_light_normal 0x0
+int drawable common_google_signin_btn_icon_light_normal_background 0x0
+int drawable common_google_signin_btn_icon_light_pressed 0x0
+int drawable common_google_signin_btn_text_dark 0x0
+int drawable common_google_signin_btn_text_dark_disabled 0x0
+int drawable common_google_signin_btn_text_dark_focused 0x0
+int drawable common_google_signin_btn_text_dark_normal 0x0
+int drawable common_google_signin_btn_text_dark_normal_background 0x0
+int drawable common_google_signin_btn_text_dark_pressed 0x0
+int drawable common_google_signin_btn_text_disabled 0x0
+int drawable common_google_signin_btn_text_light 0x0
+int drawable common_google_signin_btn_text_light_disabled 0x0
+int drawable common_google_signin_btn_text_light_focused 0x0
+int drawable common_google_signin_btn_text_light_normal 0x0
+int drawable common_google_signin_btn_text_light_normal_background 0x0
+int drawable common_google_signin_btn_text_light_pressed 0x0
+int drawable common_ic_googleplayservices 0x0
+int drawable googleg_disabled_color_18 0x0
+int drawable googleg_standard_color_18 0x0
+int drawable notification_action_background 0x0
+int drawable notification_bg 0x0
+int drawable notification_bg_low 0x0
+int drawable notification_bg_low_normal 0x0
+int drawable notification_bg_low_pressed 0x0
+int drawable notification_bg_normal 0x0
+int drawable notification_bg_normal_pressed 0x0
+int drawable notification_icon_background 0x0
+int drawable notification_template_icon_bg 0x0
+int drawable notification_template_icon_low_bg 0x0
+int drawable notification_tile_bg 0x0
+int drawable notify_panel_notification_icon_bg 0x0
+int drawable redbox_top_border_background 0x0
+int drawable test_level_drawable 0x0
+int drawable tooltip_frame_dark 0x0
+int drawable tooltip_frame_light 0x0
+int id accessibility_action_clickable_span 0x0
+int id accessibility_actions 0x0
+int id accessibility_collection 0x0
+int id accessibility_collection_item 0x0
+int id accessibility_custom_action_0 0x0
+int id accessibility_custom_action_1 0x0
+int id accessibility_custom_action_10 0x0
+int id accessibility_custom_action_11 0x0
+int id accessibility_custom_action_12 0x0
+int id accessibility_custom_action_13 0x0
+int id accessibility_custom_action_14 0x0
+int id accessibility_custom_action_15 0x0
+int id accessibility_custom_action_16 0x0
+int id accessibility_custom_action_17 0x0
+int id accessibility_custom_action_18 0x0
+int id accessibility_custom_action_19 0x0
+int id accessibility_custom_action_2 0x0
+int id accessibility_custom_action_20 0x0
+int id accessibility_custom_action_21 0x0
+int id accessibility_custom_action_22 0x0
+int id accessibility_custom_action_23 0x0
+int id accessibility_custom_action_24 0x0
+int id accessibility_custom_action_25 0x0
+int id accessibility_custom_action_26 0x0
+int id accessibility_custom_action_27 0x0
+int id accessibility_custom_action_28 0x0
+int id accessibility_custom_action_29 0x0
+int id accessibility_custom_action_3 0x0
+int id accessibility_custom_action_30 0x0
+int id accessibility_custom_action_31 0x0
+int id accessibility_custom_action_4 0x0
+int id accessibility_custom_action_5 0x0
+int id accessibility_custom_action_6 0x0
+int id accessibility_custom_action_7 0x0
+int id accessibility_custom_action_8 0x0
+int id accessibility_custom_action_9 0x0
+int id accessibility_hint 0x0
+int id accessibility_label 0x0
+int id accessibility_links 0x0
+int id accessibility_role 0x0
+int id accessibility_state 0x0
+int id accessibility_value 0x0
+int id action_bar 0x0
+int id action_bar_activity_content 0x0
+int id action_bar_container 0x0
+int id action_bar_root 0x0
+int id action_bar_spinner 0x0
+int id action_bar_subtitle 0x0
+int id action_bar_title 0x0
+int id action_container 0x0
+int id action_context_bar 0x0
+int id action_divider 0x0
+int id action_image 0x0
+int id action_menu_divider 0x0
+int id action_menu_presenter 0x0
+int id action_mode_bar 0x0
+int id action_mode_bar_stub 0x0
+int id action_mode_close_button 0x0
+int id action_text 0x0
+int id actions 0x0
+int id activity_chooser_view_content 0x0
+int id add 0x0
+int id adjust_height 0x0
+int id adjust_width 0x0
+int id alertTitle 0x0
+int id amu_text 0x0
+int id async 0x0
+int id auto 0x0
+int id autofill_inline_suggestion_end_icon 0x0
+int id autofill_inline_suggestion_start_icon 0x0
+int id autofill_inline_suggestion_subtitle 0x0
+int id autofill_inline_suggestion_title 0x0
+int id blocking 0x0
+int id buttonPanel 0x0
+int id catalyst_redbox_title 0x0
+int id center 0x0
+int id centerCrop 0x0
+int id centerInside 0x0
+int id checkbox 0x0
+int id checked 0x0
+int id chronometer 0x0
+int id content 0x0
+int id contentPanel 0x0
+int id custom 0x0
+int id customPanel 0x0
+int id dark 0x0
+int id decor_content_parent 0x0
+int id default_activity_button 0x0
+int id dialog_button 0x0
+int id edit_query 0x0
+int id expand_activities_button 0x0
+int id expanded_menu 0x0
+int id fitBottomStart 0x0
+int id fitCenter 0x0
+int id fitEnd 0x0
+int id fitStart 0x0
+int id fitXY 0x0
+int id focusCrop 0x0
+int id forever 0x0
+int id fps_text 0x0
+int id fragment_container_view_tag 0x0
+int id group_divider 0x0
+int id home 0x0
+int id hybrid 0x0
+int id icon 0x0
+int id icon_group 0x0
+int id icon_only 0x0
+int id image 0x0
+int id info 0x0
+int id italic 0x0
+int id item1 0x0
+int id item2 0x0
+int id item3 0x0
+int id item4 0x0
+int id labelled_by 0x0
+int id light 0x0
+int id line1 0x0
+int id line3 0x0
+int id listMode 0x0
+int id list_item 0x0
+int id message 0x0
+int id multiply 0x0
+int id none 0x0
+int id normal 0x0
+int id notification_background 0x0
+int id notification_main_column 0x0
+int id notification_main_column_container 0x0
+int id off 0x0
+int id on 0x0
+int id parentPanel 0x0
+int id pointer_enter 0x0
+int id pointer_enter_capture 0x0
+int id pointer_leave 0x0
+int id pointer_leave_capture 0x0
+int id pointer_move 0x0
+int id pointer_move_capture 0x0
+int id progress_circular 0x0
+int id progress_horizontal 0x0
+int id radio 0x0
+int id react_test_id 0x0
+int id right_icon 0x0
+int id right_side 0x0
+int id rn_frame_file 0x0
+int id rn_frame_method 0x0
+int id rn_redbox_dismiss_button 0x0
+int id rn_redbox_line_separator 0x0
+int id rn_redbox_loading_indicator 0x0
+int id rn_redbox_reload_button 0x0
+int id rn_redbox_report_button 0x0
+int id rn_redbox_report_label 0x0
+int id rn_redbox_stack 0x0
+int id satellite 0x0
+int id screen 0x0
+int id scrollIndicatorDown 0x0
+int id scrollIndicatorUp 0x0
+int id scrollView 0x0
+int id search_badge 0x0
+int id search_bar 0x0
+int id search_button 0x0
+int id search_close_btn 0x0
+int id search_edit_frame 0x0
+int id search_go_btn 0x0
+int id search_mag_icon 0x0
+int id search_plate 0x0
+int id search_src_text 0x0
+int id search_voice_btn 0x0
+int id select_dialog_listview 0x0
+int id shortcut 0x0
+int id spacer 0x0
+int id special_effects_controller_view_tag 0x0
+int id split_action_bar 0x0
+int id src_atop 0x0
+int id src_in 0x0
+int id src_over 0x0
+int id standard 0x0
+int id submenuarrow 0x0
+int id submit_area 0x0
+int id tabMode 0x0
+int id tag_accessibility_actions 0x0
+int id tag_accessibility_clickable_spans 0x0
+int id tag_accessibility_heading 0x0
+int id tag_accessibility_pane_title 0x0
+int id tag_on_apply_window_listener 0x0
+int id tag_on_receive_content_listener 0x0
+int id tag_on_receive_content_mime_types 0x0
+int id tag_screen_reader_focusable 0x0
+int id tag_state_description 0x0
+int id tag_transition_group 0x0
+int id tag_unhandled_key_event_manager 0x0
+int id tag_unhandled_key_listeners 0x0
+int id tag_window_insets_animation_callback 0x0
+int id terrain 0x0
+int id text 0x0
+int id text2 0x0
+int id textSpacerNoButtons 0x0
+int id textSpacerNoTitle 0x0
+int id time 0x0
+int id title 0x0
+int id titleDividerNoCustom 0x0
+int id title_template 0x0
+int id topPanel 0x0
+int id unchecked 0x0
+int id uniform 0x0
+int id up 0x0
+int id view_tag_instance_handle 0x0
+int id view_tag_native_id 0x0
+int id view_tree_lifecycle_owner 0x0
+int id view_tree_saved_state_registry_owner 0x0
+int id view_tree_view_model_store_owner 0x0
+int id visible_removing_fragment_view_tag 0x0
+int id webview 0x0
+int id wide 0x0
+int id window 0x0
+int id wrap_content 0x0
+int integer abc_config_activityDefaultDur 0x0
+int integer abc_config_activityShortDur 0x0
+int integer cancel_button_image_alpha 0x0
+int integer config_tooltipAnimTime 0x0
+int integer google_play_services_version 0x0
+int integer react_native_dev_server_port 0x0
+int integer react_native_inspector_proxy_port 0x0
+int integer status_bar_notification_info_maxnum 0x0
+int interpolator btn_checkbox_checked_mtrl_animation_interpolator_0 0x0
+int interpolator btn_checkbox_checked_mtrl_animation_interpolator_1 0x0
+int interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_0 0x0
+int interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_1 0x0
+int interpolator btn_radio_to_off_mtrl_animation_interpolator_0 0x0
+int interpolator btn_radio_to_on_mtrl_animation_interpolator_0 0x0
+int interpolator fast_out_slow_in 0x0
+int layout abc_action_bar_title_item 0x0
+int layout abc_action_bar_up_container 0x0
+int layout abc_action_menu_item_layout 0x0
+int layout abc_action_menu_layout 0x0
+int layout abc_action_mode_bar 0x0
+int layout abc_action_mode_close_item_material 0x0
+int layout abc_activity_chooser_view 0x0
+int layout abc_activity_chooser_view_list_item 0x0
+int layout abc_alert_dialog_button_bar_material 0x0
+int layout abc_alert_dialog_material 0x0
+int layout abc_alert_dialog_title_material 0x0
+int layout abc_cascading_menu_item_layout 0x0
+int layout abc_dialog_title_material 0x0
+int layout abc_expanded_menu_layout 0x0
+int layout abc_list_menu_item_checkbox 0x0
+int layout abc_list_menu_item_icon 0x0
+int layout abc_list_menu_item_layout 0x0
+int layout abc_list_menu_item_radio 0x0
+int layout abc_popup_menu_header_item_layout 0x0
+int layout abc_popup_menu_item_layout 0x0
+int layout abc_screen_content_include 0x0
+int layout abc_screen_simple 0x0
+int layout abc_screen_simple_overlay_action_mode 0x0
+int layout abc_screen_toolbar 0x0
+int layout abc_search_dropdown_item_icons_2line 0x0
+int layout abc_search_view 0x0
+int layout abc_select_dialog_material 0x0
+int layout abc_tooltip 0x0
+int layout amu_info_window 0x0
+int layout amu_text_bubble 0x0
+int layout amu_webview 0x0
+int layout autofill_inline_suggestion 0x0
+int layout custom_dialog 0x0
+int layout dev_loading_view 0x0
+int layout fps_view 0x0
+int layout notification_action 0x0
+int layout notification_action_tombstone 0x0
+int layout notification_template_custom_big 0x0
+int layout notification_template_icon_group 0x0
+int layout notification_template_part_chronometer 0x0
+int layout notification_template_part_time 0x0
+int layout redbox_item_frame 0x0
+int layout redbox_item_title 0x0
+int layout redbox_view 0x0
+int layout select_dialog_item_material 0x0
+int layout select_dialog_multichoice_material 0x0
+int layout select_dialog_singlechoice_material 0x0
+int layout support_simple_spinner_dropdown_item 0x0
+int menu example_menu 0x0
+int menu example_menu2 0x0
+int raw amu_ballon_gx_prefix 0x0
+int raw amu_basic_folder 0x0
+int raw amu_basic_placemark 0x0
+int raw amu_cdata 0x0
+int raw amu_default_balloon 0x0
+int raw amu_document_nest 0x0
+int raw amu_draw_order_ground_overlay 0x0
+int raw amu_extended_data 0x0
+int raw amu_ground_overlay 0x0
+int raw amu_ground_overlay_color 0x0
+int raw amu_inline_style 0x0
+int raw amu_multigeometry_placemarks 0x0
+int raw amu_multiple_placemarks 0x0
+int raw amu_nested_folders 0x0
+int raw amu_nested_multigeometry 0x0
+int raw amu_poly_style_boolean_alpha 0x0
+int raw amu_poly_style_boolean_numeric 0x0
+int raw amu_unknwown_folder 0x0
+int raw amu_unsupported 0x0
+int raw amu_visibility_ground_overlay 0x0
+int string abc_action_bar_home_description 0x0
+int string abc_action_bar_up_description 0x0
+int string abc_action_menu_overflow_description 0x0
+int string abc_action_mode_done 0x0
+int string abc_activity_chooser_view_see_all 0x0
+int string abc_activitychooserview_choose_application 0x0
+int string abc_capital_off 0x0
+int string abc_capital_on 0x0
+int string abc_menu_alt_shortcut_label 0x0
+int string abc_menu_ctrl_shortcut_label 0x0
+int string abc_menu_delete_shortcut_label 0x0
+int string abc_menu_enter_shortcut_label 0x0
+int string abc_menu_function_shortcut_label 0x0
+int string abc_menu_meta_shortcut_label 0x0
+int string abc_menu_shift_shortcut_label 0x0
+int string abc_menu_space_shortcut_label 0x0
+int string abc_menu_sym_shortcut_label 0x0
+int string abc_prepend_shortcut_label 0x0
+int string abc_search_hint 0x0
+int string abc_searchview_description_clear 0x0
+int string abc_searchview_description_query 0x0
+int string abc_searchview_description_search 0x0
+int string abc_searchview_description_submit 0x0
+int string abc_searchview_description_voice 0x0
+int string abc_shareactionprovider_share_with 0x0
+int string abc_shareactionprovider_share_with_application 0x0
+int string abc_toolbar_collapse_description 0x0
+int string alert_description 0x0
+int string androidx_startup 0x0
+int string catalyst_change_bundle_location 0x0
+int string catalyst_copy_button 0x0
+int string catalyst_debug 0x0
+int string catalyst_debug_chrome 0x0
+int string catalyst_debug_chrome_stop 0x0
+int string catalyst_debug_connecting 0x0
+int string catalyst_debug_error 0x0
+int string catalyst_debug_open 0x0
+int string catalyst_debug_stop 0x0
+int string catalyst_devtools_open 0x0
+int string catalyst_dismiss_button 0x0
+int string catalyst_heap_capture 0x0
+int string catalyst_hot_reloading 0x0
+int string catalyst_hot_reloading_auto_disable 0x0
+int string catalyst_hot_reloading_auto_enable 0x0
+int string catalyst_hot_reloading_stop 0x0
+int string catalyst_inspector 0x0
+int string catalyst_inspector_stop 0x0
+int string catalyst_loading_from_url 0x0
+int string catalyst_open_flipper_error 0x0
+int string catalyst_perf_monitor 0x0
+int string catalyst_perf_monitor_stop 0x0
+int string catalyst_reload 0x0
+int string catalyst_reload_button 0x0
+int string catalyst_reload_error 0x0
+int string catalyst_report_button 0x0
+int string catalyst_sample_profiler_disable 0x0
+int string catalyst_sample_profiler_enable 0x0
+int string catalyst_settings 0x0
+int string catalyst_settings_title 0x0
+int string combobox_description 0x0
+int string common_google_play_services_enable_button 0x0
+int string common_google_play_services_enable_text 0x0
+int string common_google_play_services_enable_title 0x0
+int string common_google_play_services_install_button 0x0
+int string common_google_play_services_install_text 0x0
+int string common_google_play_services_install_text_phone 0x0
+int string common_google_play_services_install_text_tablet 0x0
+int string common_google_play_services_install_title 0x0
+int string common_google_play_services_notification_channel_name 0x0
+int string common_google_play_services_notification_ticker 0x0
+int string common_google_play_services_unknown_issue 0x0
+int string common_google_play_services_unsupported_text 0x0
+int string common_google_play_services_unsupported_title 0x0
+int string common_google_play_services_update_button 0x0
+int string common_google_play_services_update_text 0x0
+int string common_google_play_services_update_title 0x0
+int string common_google_play_services_updating_text 0x0
+int string common_google_play_services_updating_title 0x0
+int string common_google_play_services_wear_update_text 0x0
+int string common_open_on_phone 0x0
+int string common_signin_button_text 0x0
+int string common_signin_button_text_long 0x0
+int string header_description 0x0
+int string image_description 0x0
+int string imagebutton_description 0x0
+int string link_description 0x0
+int string menu_description 0x0
+int string menubar_description 0x0
+int string menuitem_description 0x0
+int string progressbar_description 0x0
+int string radiogroup_description 0x0
+int string rn_tab_description 0x0
+int string scrollbar_description 0x0
+int string search_menu_title 0x0
+int string spinbutton_description 0x0
+int string state_busy_description 0x0
+int string state_collapsed_description 0x0
+int string state_expanded_description 0x0
+int string state_mixed_description 0x0
+int string state_off_description 0x0
+int string state_on_description 0x0
+int string state_unselected_description 0x0
+int string status_bar_notification_info_overflow 0x0
+int string summary_description 0x0
+int string tablist_description 0x0
+int string timer_description 0x0
+int string toolbar_description 0x0
+int style AlertDialog_AppCompat 0x0
+int style AlertDialog_AppCompat_Light 0x0
+int style Animation_AppCompat_Dialog 0x0
+int style Animation_AppCompat_DropDownUp 0x0
+int style Animation_AppCompat_Tooltip 0x0
+int style Animation_Catalyst_LogBox 0x0
+int style Animation_Catalyst_RedBox 0x0
+int style Base_AlertDialog_AppCompat 0x0
+int style Base_AlertDialog_AppCompat_Light 0x0
+int style Base_Animation_AppCompat_Dialog 0x0
+int style Base_Animation_AppCompat_DropDownUp 0x0
+int style Base_Animation_AppCompat_Tooltip 0x0
+int style Base_DialogWindowTitleBackground_AppCompat 0x0
+int style Base_DialogWindowTitle_AppCompat 0x0
+int style Base_TextAppearance_AppCompat 0x0
+int style Base_TextAppearance_AppCompat_Body1 0x0
+int style Base_TextAppearance_AppCompat_Body2 0x0
+int style Base_TextAppearance_AppCompat_Button 0x0
+int style Base_TextAppearance_AppCompat_Caption 0x0
+int style Base_TextAppearance_AppCompat_Display1 0x0
+int style Base_TextAppearance_AppCompat_Display2 0x0
+int style Base_TextAppearance_AppCompat_Display3 0x0
+int style Base_TextAppearance_AppCompat_Display4 0x0
+int style Base_TextAppearance_AppCompat_Headline 0x0
+int style Base_TextAppearance_AppCompat_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Large 0x0
+int style Base_TextAppearance_AppCompat_Large_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large 0x0
+int style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small 0x0
+int style Base_TextAppearance_AppCompat_Medium 0x0
+int style Base_TextAppearance_AppCompat_Medium_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Menu 0x0
+int style Base_TextAppearance_AppCompat_SearchResult 0x0
+int style Base_TextAppearance_AppCompat_SearchResult_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_SearchResult_Title 0x0
+int style Base_TextAppearance_AppCompat_Small 0x0
+int style Base_TextAppearance_AppCompat_Small_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Subhead 0x0
+int style Base_TextAppearance_AppCompat_Subhead_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Title 0x0
+int style Base_TextAppearance_AppCompat_Title_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Tooltip 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Menu 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Title 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionMode_Title 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Colored 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_DropDownItem 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Header 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Large 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Small 0x0
+int style Base_TextAppearance_AppCompat_Widget_Switch 0x0
+int style Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem 0x0
+int style Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item 0x0
+int style Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle 0x0
+int style Base_TextAppearance_Widget_AppCompat_Toolbar_Title 0x0
+int style Base_ThemeOverlay_AppCompat 0x0
+int style Base_ThemeOverlay_AppCompat_ActionBar 0x0
+int style Base_ThemeOverlay_AppCompat_Dark 0x0
+int style Base_ThemeOverlay_AppCompat_Dark_ActionBar 0x0
+int style Base_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_ThemeOverlay_AppCompat_Dialog_Alert 0x0
+int style Base_ThemeOverlay_AppCompat_Light 0x0
+int style Base_Theme_AppCompat 0x0
+int style Base_Theme_AppCompat_CompactMenu 0x0
+int style Base_Theme_AppCompat_Dialog 0x0
+int style Base_Theme_AppCompat_DialogWhenLarge 0x0
+int style Base_Theme_AppCompat_Dialog_Alert 0x0
+int style Base_Theme_AppCompat_Dialog_FixedSize 0x0
+int style Base_Theme_AppCompat_Dialog_MinWidth 0x0
+int style Base_Theme_AppCompat_Light 0x0
+int style Base_Theme_AppCompat_Light_DarkActionBar 0x0
+int style Base_Theme_AppCompat_Light_Dialog 0x0
+int style Base_Theme_AppCompat_Light_DialogWhenLarge 0x0
+int style Base_Theme_AppCompat_Light_Dialog_Alert 0x0
+int style Base_Theme_AppCompat_Light_Dialog_FixedSize 0x0
+int style Base_Theme_AppCompat_Light_Dialog_MinWidth 0x0
+int style Base_V21_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_V21_Theme_AppCompat 0x0
+int style Base_V21_Theme_AppCompat_Dialog 0x0
+int style Base_V21_Theme_AppCompat_Light 0x0
+int style Base_V21_Theme_AppCompat_Light_Dialog 0x0
+int style Base_V22_Theme_AppCompat 0x0
+int style Base_V22_Theme_AppCompat_Light 0x0
+int style Base_V23_Theme_AppCompat 0x0
+int style Base_V23_Theme_AppCompat_Light 0x0
+int style Base_V26_Theme_AppCompat 0x0
+int style Base_V26_Theme_AppCompat_Light 0x0
+int style Base_V26_Widget_AppCompat_Toolbar 0x0
+int style Base_V28_Theme_AppCompat 0x0
+int style Base_V28_Theme_AppCompat_Light 0x0
+int style Base_V7_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_V7_Theme_AppCompat 0x0
+int style Base_V7_Theme_AppCompat_Dialog 0x0
+int style Base_V7_Theme_AppCompat_Light 0x0
+int style Base_V7_Theme_AppCompat_Light_Dialog 0x0
+int style Base_V7_Widget_AppCompat_AutoCompleteTextView 0x0
+int style Base_V7_Widget_AppCompat_EditText 0x0
+int style Base_V7_Widget_AppCompat_Toolbar 0x0
+int style Base_Widget_AppCompat_ActionBar 0x0
+int style Base_Widget_AppCompat_ActionBar_Solid 0x0
+int style Base_Widget_AppCompat_ActionBar_TabBar 0x0
+int style Base_Widget_AppCompat_ActionBar_TabText 0x0
+int style Base_Widget_AppCompat_ActionBar_TabView 0x0
+int style Base_Widget_AppCompat_ActionButton 0x0
+int style Base_Widget_AppCompat_ActionButton_CloseMode 0x0
+int style Base_Widget_AppCompat_ActionButton_Overflow 0x0
+int style Base_Widget_AppCompat_ActionMode 0x0
+int style Base_Widget_AppCompat_ActivityChooserView 0x0
+int style Base_Widget_AppCompat_AutoCompleteTextView 0x0
+int style Base_Widget_AppCompat_Button 0x0
+int style Base_Widget_AppCompat_ButtonBar 0x0
+int style Base_Widget_AppCompat_ButtonBar_AlertDialog 0x0
+int style Base_Widget_AppCompat_Button_Borderless 0x0
+int style Base_Widget_AppCompat_Button_Borderless_Colored 0x0
+int style Base_Widget_AppCompat_Button_ButtonBar_AlertDialog 0x0
+int style Base_Widget_AppCompat_Button_Colored 0x0
+int style Base_Widget_AppCompat_Button_Small 0x0
+int style Base_Widget_AppCompat_CompoundButton_CheckBox 0x0
+int style Base_Widget_AppCompat_CompoundButton_RadioButton 0x0
+int style Base_Widget_AppCompat_CompoundButton_Switch 0x0
+int style Base_Widget_AppCompat_DrawerArrowToggle 0x0
+int style Base_Widget_AppCompat_DrawerArrowToggle_Common 0x0
+int style Base_Widget_AppCompat_DropDownItem_Spinner 0x0
+int style Base_Widget_AppCompat_EditText 0x0
+int style Base_Widget_AppCompat_ImageButton 0x0
+int style Base_Widget_AppCompat_Light_ActionBar 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_Solid 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabBar 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabText 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabView 0x0
+int style Base_Widget_AppCompat_Light_PopupMenu 0x0
+int style Base_Widget_AppCompat_Light_PopupMenu_Overflow 0x0
+int style Base_Widget_AppCompat_ListMenuView 0x0
+int style Base_Widget_AppCompat_ListPopupWindow 0x0
+int style Base_Widget_AppCompat_ListView 0x0
+int style Base_Widget_AppCompat_ListView_DropDown 0x0
+int style Base_Widget_AppCompat_ListView_Menu 0x0
+int style Base_Widget_AppCompat_PopupMenu 0x0
+int style Base_Widget_AppCompat_PopupMenu_Overflow 0x0
+int style Base_Widget_AppCompat_PopupWindow 0x0
+int style Base_Widget_AppCompat_ProgressBar 0x0
+int style Base_Widget_AppCompat_ProgressBar_Horizontal 0x0
+int style Base_Widget_AppCompat_RatingBar 0x0
+int style Base_Widget_AppCompat_RatingBar_Indicator 0x0
+int style Base_Widget_AppCompat_RatingBar_Small 0x0
+int style Base_Widget_AppCompat_SearchView 0x0
+int style Base_Widget_AppCompat_SearchView_ActionBar 0x0
+int style Base_Widget_AppCompat_SeekBar 0x0
+int style Base_Widget_AppCompat_SeekBar_Discrete 0x0
+int style Base_Widget_AppCompat_Spinner 0x0
+int style Base_Widget_AppCompat_Spinner_Underlined 0x0
+int style Base_Widget_AppCompat_TextView 0x0
+int style Base_Widget_AppCompat_TextView_SpinnerItem 0x0
+int style Base_Widget_AppCompat_Toolbar 0x0
+int style Base_Widget_AppCompat_Toolbar_Button_Navigation 0x0
+int style CalendarDatePickerDialog 0x0
+int style CalendarDatePickerStyle 0x0
+int style DialogAnimationFade 0x0
+int style DialogAnimationSlide 0x0
+int style Platform_AppCompat 0x0
+int style Platform_AppCompat_Light 0x0
+int style Platform_ThemeOverlay_AppCompat 0x0
+int style Platform_ThemeOverlay_AppCompat_Dark 0x0
+int style Platform_ThemeOverlay_AppCompat_Light 0x0
+int style Platform_V21_AppCompat 0x0
+int style Platform_V21_AppCompat_Light 0x0
+int style Platform_V25_AppCompat 0x0
+int style Platform_V25_AppCompat_Light 0x0
+int style Platform_Widget_AppCompat_Spinner 0x0
+int style RtlOverlay_DialogWindowTitle_AppCompat 0x0
+int style RtlOverlay_Widget_AppCompat_ActionBar_TitleItem 0x0
+int style RtlOverlay_Widget_AppCompat_DialogTitle_Icon 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Text 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Title 0x0
+int style RtlOverlay_Widget_AppCompat_SearchView_MagIcon 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Query 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Text 0x0
+int style RtlUnderlay_Widget_AppCompat_ActionButton 0x0
+int style RtlUnderlay_Widget_AppCompat_ActionButton_Overflow 0x0
+int style SpinnerDatePickerDialog 0x0
+int style SpinnerDatePickerStyle 0x0
+int style TextAppearance_AppCompat 0x0
+int style TextAppearance_AppCompat_Body1 0x0
+int style TextAppearance_AppCompat_Body2 0x0
+int style TextAppearance_AppCompat_Button 0x0
+int style TextAppearance_AppCompat_Caption 0x0
+int style TextAppearance_AppCompat_Display1 0x0
+int style TextAppearance_AppCompat_Display2 0x0
+int style TextAppearance_AppCompat_Display3 0x0
+int style TextAppearance_AppCompat_Display4 0x0
+int style TextAppearance_AppCompat_Headline 0x0
+int style TextAppearance_AppCompat_Inverse 0x0
+int style TextAppearance_AppCompat_Large 0x0
+int style TextAppearance_AppCompat_Large_Inverse 0x0
+int style TextAppearance_AppCompat_Light_SearchResult_Subtitle 0x0
+int style TextAppearance_AppCompat_Light_SearchResult_Title 0x0
+int style TextAppearance_AppCompat_Light_Widget_PopupMenu_Large 0x0
+int style TextAppearance_AppCompat_Light_Widget_PopupMenu_Small 0x0
+int style TextAppearance_AppCompat_Medium 0x0
+int style TextAppearance_AppCompat_Medium_Inverse 0x0
+int style TextAppearance_AppCompat_Menu 0x0
+int style TextAppearance_AppCompat_SearchResult_Subtitle 0x0
+int style TextAppearance_AppCompat_SearchResult_Title 0x0
+int style TextAppearance_AppCompat_Small 0x0
+int style TextAppearance_AppCompat_Small_Inverse 0x0
+int style TextAppearance_AppCompat_Subhead 0x0
+int style TextAppearance_AppCompat_Subhead_Inverse 0x0
+int style TextAppearance_AppCompat_Title 0x0
+int style TextAppearance_AppCompat_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Tooltip 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Menu 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Subtitle 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Title 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Subtitle 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Title 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_Button 0x0
+int style TextAppearance_AppCompat_Widget_Button_Borderless_Colored 0x0
+int style TextAppearance_AppCompat_Widget_Button_Colored 0x0
+int style TextAppearance_AppCompat_Widget_Button_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_DropDownItem 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Header 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Large 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Small 0x0
+int style TextAppearance_AppCompat_Widget_Switch 0x0
+int style TextAppearance_AppCompat_Widget_TextView_SpinnerItem 0x0
+int style TextAppearance_Compat_Notification 0x0
+int style TextAppearance_Compat_Notification_Info 0x0
+int style TextAppearance_Compat_Notification_Line2 0x0
+int style TextAppearance_Compat_Notification_Time 0x0
+int style TextAppearance_Compat_Notification_Title 0x0
+int style TextAppearance_Widget_AppCompat_ExpandedMenu_Item 0x0
+int style TextAppearance_Widget_AppCompat_Toolbar_Subtitle 0x0
+int style TextAppearance_Widget_AppCompat_Toolbar_Title 0x0
+int style Theme 0x0
+int style ThemeOverlay_AppCompat 0x0
+int style ThemeOverlay_AppCompat_ActionBar 0x0
+int style ThemeOverlay_AppCompat_Dark 0x0
+int style ThemeOverlay_AppCompat_Dark_ActionBar 0x0
+int style ThemeOverlay_AppCompat_DayNight 0x0
+int style ThemeOverlay_AppCompat_DayNight_ActionBar 0x0
+int style ThemeOverlay_AppCompat_Dialog 0x0
+int style ThemeOverlay_AppCompat_Dialog_Alert 0x0
+int style ThemeOverlay_AppCompat_Light 0x0
+int style Theme_AppCompat 0x0
+int style Theme_AppCompat_CompactMenu 0x0
+int style Theme_AppCompat_DayNight 0x0
+int style Theme_AppCompat_DayNight_DarkActionBar 0x0
+int style Theme_AppCompat_DayNight_Dialog 0x0
+int style Theme_AppCompat_DayNight_DialogWhenLarge 0x0
+int style Theme_AppCompat_DayNight_Dialog_Alert 0x0
+int style Theme_AppCompat_DayNight_Dialog_MinWidth 0x0
+int style Theme_AppCompat_DayNight_NoActionBar 0x0
+int style Theme_AppCompat_Dialog 0x0
+int style Theme_AppCompat_DialogWhenLarge 0x0
+int style Theme_AppCompat_Dialog_Alert 0x0
+int style Theme_AppCompat_Dialog_MinWidth 0x0
+int style Theme_AppCompat_Empty 0x0
+int style Theme_AppCompat_Light 0x0
+int style Theme_AppCompat_Light_DarkActionBar 0x0
+int style Theme_AppCompat_Light_Dialog 0x0
+int style Theme_AppCompat_Light_DialogWhenLarge 0x0
+int style Theme_AppCompat_Light_Dialog_Alert 0x0
+int style Theme_AppCompat_Light_Dialog_MinWidth 0x0
+int style Theme_AppCompat_Light_NoActionBar 0x0
+int style Theme_AppCompat_NoActionBar 0x0
+int style Theme_AutofillInlineSuggestion 0x0
+int style Theme_Catalyst 0x0
+int style Theme_Catalyst_LogBox 0x0
+int style Theme_Catalyst_RedBox 0x0
+int style Theme_FullScreenDialog 0x0
+int style Theme_FullScreenDialogAnimatedFade 0x0
+int style Theme_FullScreenDialogAnimatedSlide 0x0
+int style Theme_ReactNative_AppCompat_Light 0x0
+int style Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen 0x0
+int style Widget_AppCompat_ActionBar 0x0
+int style Widget_AppCompat_ActionBar_Solid 0x0
+int style Widget_AppCompat_ActionBar_TabBar 0x0
+int style Widget_AppCompat_ActionBar_TabText 0x0
+int style Widget_AppCompat_ActionBar_TabView 0x0
+int style Widget_AppCompat_ActionButton 0x0
+int style Widget_AppCompat_ActionButton_CloseMode 0x0
+int style Widget_AppCompat_ActionButton_Overflow 0x0
+int style Widget_AppCompat_ActionMode 0x0
+int style Widget_AppCompat_ActivityChooserView 0x0
+int style Widget_AppCompat_AutoCompleteTextView 0x0
+int style Widget_AppCompat_Button 0x0
+int style Widget_AppCompat_ButtonBar 0x0
+int style Widget_AppCompat_ButtonBar_AlertDialog 0x0
+int style Widget_AppCompat_Button_Borderless 0x0
+int style Widget_AppCompat_Button_Borderless_Colored 0x0
+int style Widget_AppCompat_Button_ButtonBar_AlertDialog 0x0
+int style Widget_AppCompat_Button_Colored 0x0
+int style Widget_AppCompat_Button_Small 0x0
+int style Widget_AppCompat_CompoundButton_CheckBox 0x0
+int style Widget_AppCompat_CompoundButton_RadioButton 0x0
+int style Widget_AppCompat_CompoundButton_Switch 0x0
+int style Widget_AppCompat_DrawerArrowToggle 0x0
+int style Widget_AppCompat_DropDownItem_Spinner 0x0
+int style Widget_AppCompat_EditText 0x0
+int style Widget_AppCompat_ImageButton 0x0
+int style Widget_AppCompat_Light_ActionBar 0x0
+int style Widget_AppCompat_Light_ActionBar_Solid 0x0
+int style Widget_AppCompat_Light_ActionBar_Solid_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabBar 0x0
+int style Widget_AppCompat_Light_ActionBar_TabBar_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabText 0x0
+int style Widget_AppCompat_Light_ActionBar_TabText_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabView 0x0
+int style Widget_AppCompat_Light_ActionBar_TabView_Inverse 0x0
+int style Widget_AppCompat_Light_ActionButton 0x0
+int style Widget_AppCompat_Light_ActionButton_CloseMode 0x0
+int style Widget_AppCompat_Light_ActionButton_Overflow 0x0
+int style Widget_AppCompat_Light_ActionMode_Inverse 0x0
+int style Widget_AppCompat_Light_ActivityChooserView 0x0
+int style Widget_AppCompat_Light_AutoCompleteTextView 0x0
+int style Widget_AppCompat_Light_DropDownItem_Spinner 0x0
+int style Widget_AppCompat_Light_ListPopupWindow 0x0
+int style Widget_AppCompat_Light_ListView_DropDown 0x0
+int style Widget_AppCompat_Light_PopupMenu 0x0
+int style Widget_AppCompat_Light_PopupMenu_Overflow 0x0
+int style Widget_AppCompat_Light_SearchView 0x0
+int style Widget_AppCompat_Light_Spinner_DropDown_ActionBar 0x0
+int style Widget_AppCompat_ListMenuView 0x0
+int style Widget_AppCompat_ListPopupWindow 0x0
+int style Widget_AppCompat_ListView 0x0
+int style Widget_AppCompat_ListView_DropDown 0x0
+int style Widget_AppCompat_ListView_Menu 0x0
+int style Widget_AppCompat_PopupMenu 0x0
+int style Widget_AppCompat_PopupMenu_Overflow 0x0
+int style Widget_AppCompat_PopupWindow 0x0
+int style Widget_AppCompat_ProgressBar 0x0
+int style Widget_AppCompat_ProgressBar_Horizontal 0x0
+int style Widget_AppCompat_RatingBar 0x0
+int style Widget_AppCompat_RatingBar_Indicator 0x0
+int style Widget_AppCompat_RatingBar_Small 0x0
+int style Widget_AppCompat_SearchView 0x0
+int style Widget_AppCompat_SearchView_ActionBar 0x0
+int style Widget_AppCompat_SeekBar 0x0
+int style Widget_AppCompat_SeekBar_Discrete 0x0
+int style Widget_AppCompat_Spinner 0x0
+int style Widget_AppCompat_Spinner_DropDown 0x0
+int style Widget_AppCompat_Spinner_DropDown_ActionBar 0x0
+int style Widget_AppCompat_Spinner_Underlined 0x0
+int style Widget_AppCompat_TextView 0x0
+int style Widget_AppCompat_TextView_SpinnerItem 0x0
+int style Widget_AppCompat_Toolbar 0x0
+int style Widget_AppCompat_Toolbar_Button_Navigation 0x0
+int style Widget_Autofill 0x0
+int style Widget_Autofill_InlineSuggestionChip 0x0
+int style Widget_Autofill_InlineSuggestionEndIconStyle 0x0
+int style Widget_Autofill_InlineSuggestionStartIconStyle 0x0
+int style Widget_Autofill_InlineSuggestionSubtitle 0x0
+int style Widget_Autofill_InlineSuggestionTitle 0x0
+int style Widget_Compat_NotificationActionContainer 0x0
+int style Widget_Compat_NotificationActionText 0x0
+int style amu_Bubble_TextAppearance_Dark 0x0
+int style amu_Bubble_TextAppearance_Light 0x0
+int style amu_ClusterIcon_TextAppearance 0x0
+int style redboxButton 0x0
+int[] styleable ActionBar { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable ActionBar_background 0
+int styleable ActionBar_backgroundSplit 1
+int styleable ActionBar_backgroundStacked 2
+int styleable ActionBar_contentInsetEnd 3
+int styleable ActionBar_contentInsetEndWithActions 4
+int styleable ActionBar_contentInsetLeft 5
+int styleable ActionBar_contentInsetRight 6
+int styleable ActionBar_contentInsetStart 7
+int styleable ActionBar_contentInsetStartWithNavigation 8
+int styleable ActionBar_customNavigationLayout 9
+int styleable ActionBar_displayOptions 10
+int styleable ActionBar_divider 11
+int styleable ActionBar_elevation 12
+int styleable ActionBar_height 13
+int styleable ActionBar_hideOnContentScroll 14
+int styleable ActionBar_homeAsUpIndicator 15
+int styleable ActionBar_homeLayout 16
+int styleable ActionBar_icon 17
+int styleable ActionBar_indeterminateProgressStyle 18
+int styleable ActionBar_itemPadding 19
+int styleable ActionBar_logo 20
+int styleable ActionBar_navigationMode 21
+int styleable ActionBar_popupTheme 22
+int styleable ActionBar_progressBarPadding 23
+int styleable ActionBar_progressBarStyle 24
+int styleable ActionBar_subtitle 25
+int styleable ActionBar_subtitleTextStyle 26
+int styleable ActionBar_title 27
+int styleable ActionBar_titleTextStyle 28
+int[] styleable ActionBarLayout { 0x10100b3 }
+int styleable ActionBarLayout_android_layout_gravity 0
+int[] styleable ActionMenuItemView { 0x101013f }
+int styleable ActionMenuItemView_android_minWidth 0
+int[] styleable ActionMenuView {  }
+int[] styleable ActionMode { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable ActionMode_background 0
+int styleable ActionMode_backgroundSplit 1
+int styleable ActionMode_closeItemLayout 2
+int styleable ActionMode_height 3
+int styleable ActionMode_subtitleTextStyle 4
+int styleable ActionMode_titleTextStyle 5
+int[] styleable ActivityChooserView { 0x0, 0x0 }
+int styleable ActivityChooserView_expandActivityOverflowButtonDrawable 0
+int styleable ActivityChooserView_initialActivityCount 1
+int[] styleable AlertDialog { 0x10100f2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AlertDialog_android_layout 0
+int styleable AlertDialog_buttonIconDimen 1
+int styleable AlertDialog_buttonPanelSideLayout 2
+int styleable AlertDialog_listItemLayout 3
+int styleable AlertDialog_listLayout 4
+int styleable AlertDialog_multiChoiceItemLayout 5
+int styleable AlertDialog_showTitle 6
+int styleable AlertDialog_singleChoiceItemLayout 7
+int[] styleable AnimatedStateListDrawableCompat { 0x1010196, 0x101011c, 0x101030c, 0x101030d, 0x1010195, 0x1010194 }
+int styleable AnimatedStateListDrawableCompat_android_constantSize 0
+int styleable AnimatedStateListDrawableCompat_android_dither 1
+int styleable AnimatedStateListDrawableCompat_android_enterFadeDuration 2
+int styleable AnimatedStateListDrawableCompat_android_exitFadeDuration 3
+int styleable AnimatedStateListDrawableCompat_android_variablePadding 4
+int styleable AnimatedStateListDrawableCompat_android_visible 5
+int[] styleable AnimatedStateListDrawableItem { 0x1010199, 0x10100d0 }
+int styleable AnimatedStateListDrawableItem_android_drawable 0
+int styleable AnimatedStateListDrawableItem_android_id 1
+int[] styleable AnimatedStateListDrawableTransition { 0x1010199, 0x101044a, 0x101044b, 0x1010449 }
+int styleable AnimatedStateListDrawableTransition_android_drawable 0
+int styleable AnimatedStateListDrawableTransition_android_fromId 1
+int styleable AnimatedStateListDrawableTransition_android_reversible 2
+int styleable AnimatedStateListDrawableTransition_android_toId 3
+int[] styleable AppCompatEmojiHelper {  }
+int[] styleable AppCompatImageView { 0x1010119, 0x0, 0x0, 0x0 }
+int styleable AppCompatImageView_android_src 0
+int styleable AppCompatImageView_srcCompat 1
+int styleable AppCompatImageView_tint 2
+int styleable AppCompatImageView_tintMode 3
+int[] styleable AppCompatSeekBar { 0x1010142, 0x0, 0x0, 0x0 }
+int styleable AppCompatSeekBar_android_thumb 0
+int styleable AppCompatSeekBar_tickMark 1
+int styleable AppCompatSeekBar_tickMarkTint 2
+int styleable AppCompatSeekBar_tickMarkTintMode 3
+int[] styleable AppCompatTextHelper { 0x101016e, 0x1010393, 0x101016f, 0x1010170, 0x1010392, 0x101016d, 0x1010034 }
+int styleable AppCompatTextHelper_android_drawableBottom 0
+int styleable AppCompatTextHelper_android_drawableEnd 1
+int styleable AppCompatTextHelper_android_drawableLeft 2
+int styleable AppCompatTextHelper_android_drawableRight 3
+int styleable AppCompatTextHelper_android_drawableStart 4
+int styleable AppCompatTextHelper_android_drawableTop 5
+int styleable AppCompatTextHelper_android_textAppearance 6
+int[] styleable AppCompatTextView { 0x1010034, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AppCompatTextView_android_textAppearance 0
+int styleable AppCompatTextView_autoSizeMaxTextSize 1
+int styleable AppCompatTextView_autoSizeMinTextSize 2
+int styleable AppCompatTextView_autoSizePresetSizes 3
+int styleable AppCompatTextView_autoSizeStepGranularity 4
+int styleable AppCompatTextView_autoSizeTextType 5
+int styleable AppCompatTextView_drawableBottomCompat 6
+int styleable AppCompatTextView_drawableEndCompat 7
+int styleable AppCompatTextView_drawableLeftCompat 8
+int styleable AppCompatTextView_drawableRightCompat 9
+int styleable AppCompatTextView_drawableStartCompat 10
+int styleable AppCompatTextView_drawableTint 11
+int styleable AppCompatTextView_drawableTintMode 12
+int styleable AppCompatTextView_drawableTopCompat 13
+int styleable AppCompatTextView_emojiCompatEnabled 14
+int styleable AppCompatTextView_firstBaselineToTopHeight 15
+int styleable AppCompatTextView_fontFamily 16
+int styleable AppCompatTextView_fontVariationSettings 17
+int styleable AppCompatTextView_lastBaselineToBottomHeight 18
+int styleable AppCompatTextView_lineHeight 19
+int styleable AppCompatTextView_textAllCaps 20
+int styleable AppCompatTextView_textLocale 21
+int[] styleable AppCompatTheme { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10100ae, 0x1010057, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AppCompatTheme_actionBarDivider 0
+int styleable AppCompatTheme_actionBarItemBackground 1
+int styleable AppCompatTheme_actionBarPopupTheme 2
+int styleable AppCompatTheme_actionBarSize 3
+int styleable AppCompatTheme_actionBarSplitStyle 4
+int styleable AppCompatTheme_actionBarStyle 5
+int styleable AppCompatTheme_actionBarTabBarStyle 6
+int styleable AppCompatTheme_actionBarTabStyle 7
+int styleable AppCompatTheme_actionBarTabTextStyle 8
+int styleable AppCompatTheme_actionBarTheme 9
+int styleable AppCompatTheme_actionBarWidgetTheme 10
+int styleable AppCompatTheme_actionButtonStyle 11
+int styleable AppCompatTheme_actionDropDownStyle 12
+int styleable AppCompatTheme_actionMenuTextAppearance 13
+int styleable AppCompatTheme_actionMenuTextColor 14
+int styleable AppCompatTheme_actionModeBackground 15
+int styleable AppCompatTheme_actionModeCloseButtonStyle 16
+int styleable AppCompatTheme_actionModeCloseContentDescription 17
+int styleable AppCompatTheme_actionModeCloseDrawable 18
+int styleable AppCompatTheme_actionModeCopyDrawable 19
+int styleable AppCompatTheme_actionModeCutDrawable 20
+int styleable AppCompatTheme_actionModeFindDrawable 21
+int styleable AppCompatTheme_actionModePasteDrawable 22
+int styleable AppCompatTheme_actionModePopupWindowStyle 23
+int styleable AppCompatTheme_actionModeSelectAllDrawable 24
+int styleable AppCompatTheme_actionModeShareDrawable 25
+int styleable AppCompatTheme_actionModeSplitBackground 26
+int styleable AppCompatTheme_actionModeStyle 27
+int styleable AppCompatTheme_actionModeTheme 28
+int styleable AppCompatTheme_actionModeWebSearchDrawable 29
+int styleable AppCompatTheme_actionOverflowButtonStyle 30
+int styleable AppCompatTheme_actionOverflowMenuStyle 31
+int styleable AppCompatTheme_activityChooserViewStyle 32
+int styleable AppCompatTheme_alertDialogButtonGroupStyle 33
+int styleable AppCompatTheme_alertDialogCenterButtons 34
+int styleable AppCompatTheme_alertDialogStyle 35
+int styleable AppCompatTheme_alertDialogTheme 36
+int styleable AppCompatTheme_android_windowAnimationStyle 37
+int styleable AppCompatTheme_android_windowIsFloating 38
+int styleable AppCompatTheme_autoCompleteTextViewStyle 39
+int styleable AppCompatTheme_borderlessButtonStyle 40
+int styleable AppCompatTheme_buttonBarButtonStyle 41
+int styleable AppCompatTheme_buttonBarNegativeButtonStyle 42
+int styleable AppCompatTheme_buttonBarNeutralButtonStyle 43
+int styleable AppCompatTheme_buttonBarPositiveButtonStyle 44
+int styleable AppCompatTheme_buttonBarStyle 45
+int styleable AppCompatTheme_buttonStyle 46
+int styleable AppCompatTheme_buttonStyleSmall 47
+int styleable AppCompatTheme_checkboxStyle 48
+int styleable AppCompatTheme_checkedTextViewStyle 49
+int styleable AppCompatTheme_colorAccent 50
+int styleable AppCompatTheme_colorBackgroundFloating 51
+int styleable AppCompatTheme_colorButtonNormal 52
+int styleable AppCompatTheme_colorControlActivated 53
+int styleable AppCompatTheme_colorControlHighlight 54
+int styleable AppCompatTheme_colorControlNormal 55
+int styleable AppCompatTheme_colorError 56
+int styleable AppCompatTheme_colorPrimary 57
+int styleable AppCompatTheme_colorPrimaryDark 58
+int styleable AppCompatTheme_colorSwitchThumbNormal 59
+int styleable AppCompatTheme_controlBackground 60
+int styleable AppCompatTheme_dialogCornerRadius 61
+int styleable AppCompatTheme_dialogPreferredPadding 62
+int styleable AppCompatTheme_dialogTheme 63
+int styleable AppCompatTheme_dividerHorizontal 64
+int styleable AppCompatTheme_dividerVertical 65
+int styleable AppCompatTheme_dropDownListViewStyle 66
+int styleable AppCompatTheme_dropdownListPreferredItemHeight 67
+int styleable AppCompatTheme_editTextBackground 68
+int styleable AppCompatTheme_editTextColor 69
+int styleable AppCompatTheme_editTextStyle 70
+int styleable AppCompatTheme_homeAsUpIndicator 71
+int styleable AppCompatTheme_imageButtonStyle 72
+int styleable AppCompatTheme_listChoiceBackgroundIndicator 73
+int styleable AppCompatTheme_listChoiceIndicatorMultipleAnimated 74
+int styleable AppCompatTheme_listChoiceIndicatorSingleAnimated 75
+int styleable AppCompatTheme_listDividerAlertDialog 76
+int styleable AppCompatTheme_listMenuViewStyle 77
+int styleable AppCompatTheme_listPopupWindowStyle 78
+int styleable AppCompatTheme_listPreferredItemHeight 79
+int styleable AppCompatTheme_listPreferredItemHeightLarge 80
+int styleable AppCompatTheme_listPreferredItemHeightSmall 81
+int styleable AppCompatTheme_listPreferredItemPaddingEnd 82
+int styleable AppCompatTheme_listPreferredItemPaddingLeft 83
+int styleable AppCompatTheme_listPreferredItemPaddingRight 84
+int styleable AppCompatTheme_listPreferredItemPaddingStart 85
+int styleable AppCompatTheme_panelBackground 86
+int styleable AppCompatTheme_panelMenuListTheme 87
+int styleable AppCompatTheme_panelMenuListWidth 88
+int styleable AppCompatTheme_popupMenuStyle 89
+int styleable AppCompatTheme_popupWindowStyle 90
+int styleable AppCompatTheme_radioButtonStyle 91
+int styleable AppCompatTheme_ratingBarStyle 92
+int styleable AppCompatTheme_ratingBarStyleIndicator 93
+int styleable AppCompatTheme_ratingBarStyleSmall 94
+int styleable AppCompatTheme_searchViewStyle 95
+int styleable AppCompatTheme_seekBarStyle 96
+int styleable AppCompatTheme_selectableItemBackground 97
+int styleable AppCompatTheme_selectableItemBackgroundBorderless 98
+int styleable AppCompatTheme_spinnerDropDownItemStyle 99
+int styleable AppCompatTheme_spinnerStyle 100
+int styleable AppCompatTheme_switchStyle 101
+int styleable AppCompatTheme_textAppearanceLargePopupMenu 102
+int styleable AppCompatTheme_textAppearanceListItem 103
+int styleable AppCompatTheme_textAppearanceListItemSecondary 104
+int styleable AppCompatTheme_textAppearanceListItemSmall 105
+int styleable AppCompatTheme_textAppearancePopupMenuHeader 106
+int styleable AppCompatTheme_textAppearanceSearchResultSubtitle 107
+int styleable AppCompatTheme_textAppearanceSearchResultTitle 108
+int styleable AppCompatTheme_textAppearanceSmallPopupMenu 109
+int styleable AppCompatTheme_textColorAlertDialogListItem 110
+int styleable AppCompatTheme_textColorSearchUrl 111
+int styleable AppCompatTheme_toolbarNavigationButtonStyle 112
+int styleable AppCompatTheme_toolbarStyle 113
+int styleable AppCompatTheme_tooltipForegroundColor 114
+int styleable AppCompatTheme_tooltipFrameBackground 115
+int styleable AppCompatTheme_viewInflaterClass 116
+int styleable AppCompatTheme_windowActionBar 117
+int styleable AppCompatTheme_windowActionBarOverlay 118
+int styleable AppCompatTheme_windowActionModeOverlay 119
+int styleable AppCompatTheme_windowFixedHeightMajor 120
+int styleable AppCompatTheme_windowFixedHeightMinor 121
+int styleable AppCompatTheme_windowFixedWidthMajor 122
+int styleable AppCompatTheme_windowFixedWidthMinor 123
+int styleable AppCompatTheme_windowMinWidthMajor 124
+int styleable AppCompatTheme_windowMinWidthMinor 125
+int styleable AppCompatTheme_windowNoTitle 126
+int[] styleable Autofill_InlineSuggestion { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionChip 0
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionEndIconStyle 1
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionStartIconStyle 2
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionSubtitle 3
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionTitle 4
+int styleable Autofill_InlineSuggestion_isAutofillInlineSuggestionTheme 5
+int[] styleable ButtonBarLayout { 0x0 }
+int styleable ButtonBarLayout_allowStacking 0
+int[] styleable Capability { 0x0, 0x0 }
+int styleable Capability_queryPatterns 0
+int styleable Capability_shortcutMatchRequired 1
+int[] styleable CheckedTextView { 0x1010108, 0x0, 0x0, 0x0 }
+int styleable CheckedTextView_android_checkMark 0
+int styleable CheckedTextView_checkMarkCompat 1
+int styleable CheckedTextView_checkMarkTint 2
+int styleable CheckedTextView_checkMarkTintMode 3
+int[] styleable ColorStateListItem { 0x0, 0x101031f, 0x10101a5, 0x1010647, 0x0 }
+int styleable ColorStateListItem_alpha 0
+int styleable ColorStateListItem_android_alpha 1
+int styleable ColorStateListItem_android_color 2
+int styleable ColorStateListItem_android_lStar 3
+int styleable ColorStateListItem_lStar 4
+int[] styleable CompoundButton { 0x1010107, 0x0, 0x0, 0x0 }
+int styleable CompoundButton_android_button 0
+int styleable CompoundButton_buttonCompat 1
+int styleable CompoundButton_buttonTint 2
+int styleable CompoundButton_buttonTintMode 3
+int[] styleable DrawerArrowToggle { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable DrawerArrowToggle_arrowHeadLength 0
+int styleable DrawerArrowToggle_arrowShaftLength 1
+int styleable DrawerArrowToggle_barLength 2
+int styleable DrawerArrowToggle_color 3
+int styleable DrawerArrowToggle_drawableSize 4
+int styleable DrawerArrowToggle_gapBetweenBars 5
+int styleable DrawerArrowToggle_spinBars 6
+int styleable DrawerArrowToggle_thickness 7
+int[] styleable FontFamily { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable FontFamily_fontProviderAuthority 0
+int styleable FontFamily_fontProviderCerts 1
+int styleable FontFamily_fontProviderFetchStrategy 2
+int styleable FontFamily_fontProviderFetchTimeout 3
+int styleable FontFamily_fontProviderPackage 4
+int styleable FontFamily_fontProviderQuery 5
+int styleable FontFamily_fontProviderSystemFontFamily 6
+int[] styleable FontFamilyFont { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable FontFamilyFont_android_font 0
+int styleable FontFamilyFont_android_fontStyle 1
+int styleable FontFamilyFont_android_fontVariationSettings 2
+int styleable FontFamilyFont_android_fontWeight 3
+int styleable FontFamilyFont_android_ttcIndex 4
+int styleable FontFamilyFont_font 5
+int styleable FontFamilyFont_fontStyle 6
+int styleable FontFamilyFont_fontVariationSettings 7
+int styleable FontFamilyFont_fontWeight 8
+int styleable FontFamilyFont_ttcIndex 9
+int[] styleable Fragment { 0x10100d0, 0x1010003, 0x10100d1 }
+int styleable Fragment_android_id 0
+int styleable Fragment_android_name 1
+int styleable Fragment_android_tag 2
+int[] styleable FragmentContainerView { 0x1010003, 0x10100d1 }
+int styleable FragmentContainerView_android_name 0
+int styleable FragmentContainerView_android_tag 1
+int[] styleable GenericDraweeHierarchy { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable GenericDraweeHierarchy_actualImageScaleType 0
+int styleable GenericDraweeHierarchy_backgroundImage 1
+int styleable GenericDraweeHierarchy_fadeDuration 2
+int styleable GenericDraweeHierarchy_failureImage 3
+int styleable GenericDraweeHierarchy_failureImageScaleType 4
+int styleable GenericDraweeHierarchy_overlayImage 5
+int styleable GenericDraweeHierarchy_placeholderImage 6
+int styleable GenericDraweeHierarchy_placeholderImageScaleType 7
+int styleable GenericDraweeHierarchy_pressedStateOverlayImage 8
+int styleable GenericDraweeHierarchy_progressBarAutoRotateInterval 9
+int styleable GenericDraweeHierarchy_progressBarImage 10
+int styleable GenericDraweeHierarchy_progressBarImageScaleType 11
+int styleable GenericDraweeHierarchy_retryImage 12
+int styleable GenericDraweeHierarchy_retryImageScaleType 13
+int styleable GenericDraweeHierarchy_roundAsCircle 14
+int styleable GenericDraweeHierarchy_roundBottomEnd 15
+int styleable GenericDraweeHierarchy_roundBottomLeft 16
+int styleable GenericDraweeHierarchy_roundBottomRight 17
+int styleable GenericDraweeHierarchy_roundBottomStart 18
+int styleable GenericDraweeHierarchy_roundTopEnd 19
+int styleable GenericDraweeHierarchy_roundTopLeft 20
+int styleable GenericDraweeHierarchy_roundTopRight 21
+int styleable GenericDraweeHierarchy_roundTopStart 22
+int styleable GenericDraweeHierarchy_roundWithOverlayColor 23
+int styleable GenericDraweeHierarchy_roundedCornerRadius 24
+int styleable GenericDraweeHierarchy_roundingBorderColor 25
+int styleable GenericDraweeHierarchy_roundingBorderPadding 26
+int styleable GenericDraweeHierarchy_roundingBorderWidth 27
+int styleable GenericDraweeHierarchy_viewAspectRatio 28
+int[] styleable GradientColor { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 }
+int styleable GradientColor_android_centerColor 0
+int styleable GradientColor_android_centerX 1
+int styleable GradientColor_android_centerY 2
+int styleable GradientColor_android_endColor 3
+int styleable GradientColor_android_endX 4
+int styleable GradientColor_android_endY 5
+int styleable GradientColor_android_gradientRadius 6
+int styleable GradientColor_android_startColor 7
+int styleable GradientColor_android_startX 8
+int styleable GradientColor_android_startY 9
+int styleable GradientColor_android_tileMode 10
+int styleable GradientColor_android_type 11
+int[] styleable GradientColorItem { 0x10101a5, 0x1010514 }
+int styleable GradientColorItem_android_color 0
+int styleable GradientColorItem_android_offset 1
+int[] styleable LinearLayoutCompat { 0x1010126, 0x1010127, 0x10100af, 0x10100c4, 0x1010128, 0x0, 0x0, 0x0, 0x0 }
+int styleable LinearLayoutCompat_android_baselineAligned 0
+int styleable LinearLayoutCompat_android_baselineAlignedChildIndex 1
+int styleable LinearLayoutCompat_android_gravity 2
+int styleable LinearLayoutCompat_android_orientation 3
+int styleable LinearLayoutCompat_android_weightSum 4
+int styleable LinearLayoutCompat_divider 5
+int styleable LinearLayoutCompat_dividerPadding 6
+int styleable LinearLayoutCompat_measureWithLargestChild 7
+int styleable LinearLayoutCompat_showDividers 8
+int[] styleable LinearLayoutCompat_Layout { 0x10100b3, 0x10100f5, 0x1010181, 0x10100f4 }
+int styleable LinearLayoutCompat_Layout_android_layout_gravity 0
+int styleable LinearLayoutCompat_Layout_android_layout_height 1
+int styleable LinearLayoutCompat_Layout_android_layout_weight 2
+int styleable LinearLayoutCompat_Layout_android_layout_width 3
+int[] styleable ListPopupWindow { 0x10102ac, 0x10102ad }
+int styleable ListPopupWindow_android_dropDownHorizontalOffset 0
+int styleable ListPopupWindow_android_dropDownVerticalOffset 1
+int[] styleable LoadingImageView { 0x0, 0x0, 0x0 }
+int styleable LoadingImageView_circleCrop 0
+int styleable LoadingImageView_imageAspectRatio 1
+int styleable LoadingImageView_imageAspectRatioAdjust 2
+int[] styleable MapAttrs { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable MapAttrs_ambientEnabled 0
+int styleable MapAttrs_backgroundColor 1
+int styleable MapAttrs_cameraBearing 2
+int styleable MapAttrs_cameraMaxZoomPreference 3
+int styleable MapAttrs_cameraMinZoomPreference 4
+int styleable MapAttrs_cameraTargetLat 5
+int styleable MapAttrs_cameraTargetLng 6
+int styleable MapAttrs_cameraTilt 7
+int styleable MapAttrs_cameraZoom 8
+int styleable MapAttrs_latLngBoundsNorthEastLatitude 9
+int styleable MapAttrs_latLngBoundsNorthEastLongitude 10
+int styleable MapAttrs_latLngBoundsSouthWestLatitude 11
+int styleable MapAttrs_latLngBoundsSouthWestLongitude 12
+int styleable MapAttrs_liteMode 13
+int styleable MapAttrs_mapId 14
+int styleable MapAttrs_mapType 15
+int styleable MapAttrs_uiCompass 16
+int styleable MapAttrs_uiMapToolbar 17
+int styleable MapAttrs_uiRotateGestures 18
+int styleable MapAttrs_uiScrollGestures 19
+int styleable MapAttrs_uiScrollGesturesDuringRotateOrZoom 20
+int styleable MapAttrs_uiTiltGestures 21
+int styleable MapAttrs_uiZoomControls 22
+int styleable MapAttrs_uiZoomGestures 23
+int styleable MapAttrs_useViewLifecycle 24
+int styleable MapAttrs_zOrderOnTop 25
+int[] styleable MenuGroup { 0x10101e0, 0x101000e, 0x10100d0, 0x10101de, 0x10101df, 0x1010194 }
+int styleable MenuGroup_android_checkableBehavior 0
+int styleable MenuGroup_android_enabled 1
+int styleable MenuGroup_android_id 2
+int styleable MenuGroup_android_menuCategory 3
+int styleable MenuGroup_android_orderInCategory 4
+int styleable MenuGroup_android_visible 5
+int[] styleable MenuItem { 0x0, 0x0, 0x0, 0x0, 0x10101e3, 0x10101e5, 0x1010106, 0x101000e, 0x1010002, 0x10100d0, 0x10101de, 0x10101e4, 0x101026f, 0x10101df, 0x10101e1, 0x10101e2, 0x1010194, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable MenuItem_actionLayout 0
+int styleable MenuItem_actionProviderClass 1
+int styleable MenuItem_actionViewClass 2
+int styleable MenuItem_alphabeticModifiers 3
+int styleable MenuItem_android_alphabeticShortcut 4
+int styleable MenuItem_android_checkable 5
+int styleable MenuItem_android_checked 6
+int styleable MenuItem_android_enabled 7
+int styleable MenuItem_android_icon 8
+int styleable MenuItem_android_id 9
+int styleable MenuItem_android_menuCategory 10
+int styleable MenuItem_android_numericShortcut 11
+int styleable MenuItem_android_onClick 12
+int styleable MenuItem_android_orderInCategory 13
+int styleable MenuItem_android_title 14
+int styleable MenuItem_android_titleCondensed 15
+int styleable MenuItem_android_visible 16
+int styleable MenuItem_contentDescription 17
+int styleable MenuItem_iconTint 18
+int styleable MenuItem_iconTintMode 19
+int styleable MenuItem_numericModifiers 20
+int styleable MenuItem_showAsAction 21
+int styleable MenuItem_tooltipText 22
+int[] styleable MenuView { 0x101012f, 0x101012d, 0x1010130, 0x1010131, 0x101012c, 0x101012e, 0x10100ae, 0x0, 0x0 }
+int styleable MenuView_android_headerBackground 0
+int styleable MenuView_android_horizontalDivider 1
+int styleable MenuView_android_itemBackground 2
+int styleable MenuView_android_itemIconDisabledAlpha 3
+int styleable MenuView_android_itemTextAppearance 4
+int styleable MenuView_android_verticalDivider 5
+int styleable MenuView_android_windowAnimationStyle 6
+int styleable MenuView_preserveIconSpacing 7
+int styleable MenuView_subMenuArrow 8
+int[] styleable PopupWindow { 0x10102c9, 0x1010176, 0x0 }
+int styleable PopupWindow_android_popupAnimationStyle 0
+int styleable PopupWindow_android_popupBackground 1
+int styleable PopupWindow_overlapAnchor 2
+int[] styleable PopupWindowBackgroundState { 0x0 }
+int styleable PopupWindowBackgroundState_state_above_anchor 0
+int[] styleable RecycleListView { 0x0, 0x0 }
+int styleable RecycleListView_paddingBottomNoButtons 0
+int styleable RecycleListView_paddingTopNoTitle 1
+int[] styleable SearchView { 0x10100da, 0x1010264, 0x1010220, 0x101011f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SearchView_android_focusable 0
+int styleable SearchView_android_imeOptions 1
+int styleable SearchView_android_inputType 2
+int styleable SearchView_android_maxWidth 3
+int styleable SearchView_closeIcon 4
+int styleable SearchView_commitIcon 5
+int styleable SearchView_defaultQueryHint 6
+int styleable SearchView_goIcon 7
+int styleable SearchView_iconifiedByDefault 8
+int styleable SearchView_layout 9
+int styleable SearchView_queryBackground 10
+int styleable SearchView_queryHint 11
+int styleable SearchView_searchHintIcon 12
+int styleable SearchView_searchIcon 13
+int styleable SearchView_submitBackground 14
+int styleable SearchView_suggestionRowLayout 15
+int styleable SearchView_voiceIcon 16
+int[] styleable SignInButton { 0x0, 0x0, 0x0 }
+int styleable SignInButton_buttonSize 0
+int styleable SignInButton_colorScheme 1
+int styleable SignInButton_scopeUris 2
+int[] styleable SimpleDraweeView { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SimpleDraweeView_actualImageResource 0
+int styleable SimpleDraweeView_actualImageScaleType 1
+int styleable SimpleDraweeView_actualImageUri 2
+int styleable SimpleDraweeView_backgroundImage 3
+int styleable SimpleDraweeView_fadeDuration 4
+int styleable SimpleDraweeView_failureImage 5
+int styleable SimpleDraweeView_failureImageScaleType 6
+int styleable SimpleDraweeView_overlayImage 7
+int styleable SimpleDraweeView_placeholderImage 8
+int styleable SimpleDraweeView_placeholderImageScaleType 9
+int styleable SimpleDraweeView_pressedStateOverlayImage 10
+int styleable SimpleDraweeView_progressBarAutoRotateInterval 11
+int styleable SimpleDraweeView_progressBarImage 12
+int styleable SimpleDraweeView_progressBarImageScaleType 13
+int styleable SimpleDraweeView_retryImage 14
+int styleable SimpleDraweeView_retryImageScaleType 15
+int styleable SimpleDraweeView_roundAsCircle 16
+int styleable SimpleDraweeView_roundBottomEnd 17
+int styleable SimpleDraweeView_roundBottomLeft 18
+int styleable SimpleDraweeView_roundBottomRight 19
+int styleable SimpleDraweeView_roundBottomStart 20
+int styleable SimpleDraweeView_roundTopEnd 21
+int styleable SimpleDraweeView_roundTopLeft 22
+int styleable SimpleDraweeView_roundTopRight 23
+int styleable SimpleDraweeView_roundTopStart 24
+int styleable SimpleDraweeView_roundWithOverlayColor 25
+int styleable SimpleDraweeView_roundedCornerRadius 26
+int styleable SimpleDraweeView_roundingBorderColor 27
+int styleable SimpleDraweeView_roundingBorderPadding 28
+int styleable SimpleDraweeView_roundingBorderWidth 29
+int styleable SimpleDraweeView_viewAspectRatio 30
+int[] styleable Spinner { 0x1010262, 0x10100b2, 0x1010176, 0x101017b, 0x0 }
+int styleable Spinner_android_dropDownWidth 0
+int styleable Spinner_android_entries 1
+int styleable Spinner_android_popupBackground 2
+int styleable Spinner_android_prompt 3
+int styleable Spinner_popupTheme 4
+int[] styleable StateListDrawable { 0x1010196, 0x101011c, 0x101030c, 0x101030d, 0x1010195, 0x1010194 }
+int styleable StateListDrawable_android_constantSize 0
+int styleable StateListDrawable_android_dither 1
+int styleable StateListDrawable_android_enterFadeDuration 2
+int styleable StateListDrawable_android_exitFadeDuration 3
+int styleable StateListDrawable_android_variablePadding 4
+int styleable StateListDrawable_android_visible 5
+int[] styleable StateListDrawableItem { 0x1010199 }
+int styleable StateListDrawableItem_android_drawable 0
+int[] styleable SwitchCompat { 0x1010125, 0x1010124, 0x1010142, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SwitchCompat_android_textOff 0
+int styleable SwitchCompat_android_textOn 1
+int styleable SwitchCompat_android_thumb 2
+int styleable SwitchCompat_showText 3
+int styleable SwitchCompat_splitTrack 4
+int styleable SwitchCompat_switchMinWidth 5
+int styleable SwitchCompat_switchPadding 6
+int styleable SwitchCompat_switchTextAppearance 7
+int styleable SwitchCompat_thumbTextPadding 8
+int styleable SwitchCompat_thumbTint 9
+int styleable SwitchCompat_thumbTintMode 10
+int styleable SwitchCompat_track 11
+int styleable SwitchCompat_trackTint 12
+int styleable SwitchCompat_trackTintMode 13
+int[] styleable TextAppearance { 0x10103ac, 0x1010161, 0x1010162, 0x1010163, 0x1010164, 0x1010098, 0x101009a, 0x101009b, 0x1010585, 0x1010095, 0x1010097, 0x1010096, 0x0, 0x0, 0x0, 0x0 }
+int styleable TextAppearance_android_fontFamily 0
+int styleable TextAppearance_android_shadowColor 1
+int styleable TextAppearance_android_shadowDx 2
+int styleable TextAppearance_android_shadowDy 3
+int styleable TextAppearance_android_shadowRadius 4
+int styleable TextAppearance_android_textColor 5
+int styleable TextAppearance_android_textColorHint 6
+int styleable TextAppearance_android_textColorLink 7
+int styleable TextAppearance_android_textFontWeight 8
+int styleable TextAppearance_android_textSize 9
+int styleable TextAppearance_android_textStyle 10
+int styleable TextAppearance_android_typeface 11
+int styleable TextAppearance_fontFamily 12
+int styleable TextAppearance_fontVariationSettings 13
+int styleable TextAppearance_textAllCaps 14
+int styleable TextAppearance_textLocale 15
+int[] styleable Toolbar { 0x10100af, 0x1010140, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable Toolbar_android_gravity 0
+int styleable Toolbar_android_minHeight 1
+int styleable Toolbar_buttonGravity 2
+int styleable Toolbar_collapseContentDescription 3
+int styleable Toolbar_collapseIcon 4
+int styleable Toolbar_contentInsetEnd 5
+int styleable Toolbar_contentInsetEndWithActions 6
+int styleable Toolbar_contentInsetLeft 7
+int styleable Toolbar_contentInsetRight 8
+int styleable Toolbar_contentInsetStart 9
+int styleable Toolbar_contentInsetStartWithNavigation 10
+int styleable Toolbar_logo 11
+int styleable Toolbar_logoDescription 12
+int styleable Toolbar_maxButtonHeight 13
+int styleable Toolbar_menu 14
+int styleable Toolbar_navigationContentDescription 15
+int styleable Toolbar_navigationIcon 16
+int styleable Toolbar_popupTheme 17
+int styleable Toolbar_subtitle 18
+int styleable Toolbar_subtitleTextAppearance 19
+int styleable Toolbar_subtitleTextColor 20
+int styleable Toolbar_title 21
+int styleable Toolbar_titleMargin 22
+int styleable Toolbar_titleMarginBottom 23
+int styleable Toolbar_titleMarginEnd 24
+int styleable Toolbar_titleMarginStart 25
+int styleable Toolbar_titleMarginTop 26
+int styleable Toolbar_titleMargins 27
+int styleable Toolbar_titleTextAppearance 28
+int styleable Toolbar_titleTextColor 29
+int[] styleable View { 0x10100da, 0x1010000, 0x0, 0x0, 0x0 }
+int styleable View_android_focusable 0
+int styleable View_android_theme 1
+int styleable View_paddingEnd 2
+int styleable View_paddingStart 3
+int styleable View_theme 4
+int[] styleable ViewBackgroundHelper { 0x10100d4, 0x0, 0x0 }
+int styleable ViewBackgroundHelper_android_background 0
+int styleable ViewBackgroundHelper_backgroundTint 1
+int styleable ViewBackgroundHelper_backgroundTintMode 2
+int[] styleable ViewStubCompat { 0x10100d0, 0x10100f3, 0x10100f2 }
+int styleable ViewStubCompat_android_id 0
+int styleable ViewStubCompat_android_inflatedId 1
+int styleable ViewStubCompat_android_layout 2
+int xml rn_dev_preferences 0x0
diff --git a/node_modules/react-native-maps/android/build/intermediates/compile_symbol_list/release/R.txt b/node_modules/react-native-maps/android/build/intermediates/compile_symbol_list/release/R.txt
new file mode 100644
index 0000000..9752a2d
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/compile_symbol_list/release/R.txt
@@ -0,0 +1,2136 @@
+int anim abc_fade_in 0x0
+int anim abc_fade_out 0x0
+int anim abc_grow_fade_in_from_bottom 0x0
+int anim abc_popup_enter 0x0
+int anim abc_popup_exit 0x0
+int anim abc_shrink_fade_out_from_bottom 0x0
+int anim abc_slide_in_bottom 0x0
+int anim abc_slide_in_top 0x0
+int anim abc_slide_out_bottom 0x0
+int anim abc_slide_out_top 0x0
+int anim abc_tooltip_enter 0x0
+int anim abc_tooltip_exit 0x0
+int anim btn_checkbox_to_checked_box_inner_merged_animation 0x0
+int anim btn_checkbox_to_checked_box_outer_merged_animation 0x0
+int anim btn_checkbox_to_checked_icon_null_animation 0x0
+int anim btn_checkbox_to_unchecked_box_inner_merged_animation 0x0
+int anim btn_checkbox_to_unchecked_check_path_merged_animation 0x0
+int anim btn_checkbox_to_unchecked_icon_null_animation 0x0
+int anim btn_radio_to_off_mtrl_dot_group_animation 0x0
+int anim btn_radio_to_off_mtrl_ring_outer_animation 0x0
+int anim btn_radio_to_off_mtrl_ring_outer_path_animation 0x0
+int anim btn_radio_to_on_mtrl_dot_group_animation 0x0
+int anim btn_radio_to_on_mtrl_ring_outer_animation 0x0
+int anim btn_radio_to_on_mtrl_ring_outer_path_animation 0x0
+int anim catalyst_fade_in 0x0
+int anim catalyst_fade_out 0x0
+int anim catalyst_push_up_in 0x0
+int anim catalyst_push_up_out 0x0
+int anim catalyst_slide_down 0x0
+int anim catalyst_slide_up 0x0
+int anim fragment_fast_out_extra_slow_in 0x0
+int animator fragment_close_enter 0x0
+int animator fragment_close_exit 0x0
+int animator fragment_fade_enter 0x0
+int animator fragment_fade_exit 0x0
+int animator fragment_open_enter 0x0
+int animator fragment_open_exit 0x0
+int attr actionBarDivider 0x0
+int attr actionBarItemBackground 0x0
+int attr actionBarPopupTheme 0x0
+int attr actionBarSize 0x0
+int attr actionBarSplitStyle 0x0
+int attr actionBarStyle 0x0
+int attr actionBarTabBarStyle 0x0
+int attr actionBarTabStyle 0x0
+int attr actionBarTabTextStyle 0x0
+int attr actionBarTheme 0x0
+int attr actionBarWidgetTheme 0x0
+int attr actionButtonStyle 0x0
+int attr actionDropDownStyle 0x0
+int attr actionLayout 0x0
+int attr actionMenuTextAppearance 0x0
+int attr actionMenuTextColor 0x0
+int attr actionModeBackground 0x0
+int attr actionModeCloseButtonStyle 0x0
+int attr actionModeCloseContentDescription 0x0
+int attr actionModeCloseDrawable 0x0
+int attr actionModeCopyDrawable 0x0
+int attr actionModeCutDrawable 0x0
+int attr actionModeFindDrawable 0x0
+int attr actionModePasteDrawable 0x0
+int attr actionModePopupWindowStyle 0x0
+int attr actionModeSelectAllDrawable 0x0
+int attr actionModeShareDrawable 0x0
+int attr actionModeSplitBackground 0x0
+int attr actionModeStyle 0x0
+int attr actionModeTheme 0x0
+int attr actionModeWebSearchDrawable 0x0
+int attr actionOverflowButtonStyle 0x0
+int attr actionOverflowMenuStyle 0x0
+int attr actionProviderClass 0x0
+int attr actionViewClass 0x0
+int attr activityChooserViewStyle 0x0
+int attr actualImageResource 0x0
+int attr actualImageScaleType 0x0
+int attr actualImageUri 0x0
+int attr alertDialogButtonGroupStyle 0x0
+int attr alertDialogCenterButtons 0x0
+int attr alertDialogStyle 0x0
+int attr alertDialogTheme 0x0
+int attr allowStacking 0x0
+int attr alpha 0x0
+int attr alphabeticModifiers 0x0
+int attr ambientEnabled 0x0
+int attr arrowHeadLength 0x0
+int attr arrowShaftLength 0x0
+int attr autoCompleteTextViewStyle 0x0
+int attr autoSizeMaxTextSize 0x0
+int attr autoSizeMinTextSize 0x0
+int attr autoSizePresetSizes 0x0
+int attr autoSizeStepGranularity 0x0
+int attr autoSizeTextType 0x0
+int attr autofillInlineSuggestionChip 0x0
+int attr autofillInlineSuggestionEndIconStyle 0x0
+int attr autofillInlineSuggestionStartIconStyle 0x0
+int attr autofillInlineSuggestionSubtitle 0x0
+int attr autofillInlineSuggestionTitle 0x0
+int attr background 0x0
+int attr backgroundColor 0x0
+int attr backgroundImage 0x0
+int attr backgroundSplit 0x0
+int attr backgroundStacked 0x0
+int attr backgroundTint 0x0
+int attr backgroundTintMode 0x0
+int attr barLength 0x0
+int attr borderlessButtonStyle 0x0
+int attr buttonBarButtonStyle 0x0
+int attr buttonBarNegativeButtonStyle 0x0
+int attr buttonBarNeutralButtonStyle 0x0
+int attr buttonBarPositiveButtonStyle 0x0
+int attr buttonBarStyle 0x0
+int attr buttonCompat 0x0
+int attr buttonGravity 0x0
+int attr buttonIconDimen 0x0
+int attr buttonPanelSideLayout 0x0
+int attr buttonSize 0x0
+int attr buttonStyle 0x0
+int attr buttonStyleSmall 0x0
+int attr buttonTint 0x0
+int attr buttonTintMode 0x0
+int attr cameraBearing 0x0
+int attr cameraMaxZoomPreference 0x0
+int attr cameraMinZoomPreference 0x0
+int attr cameraTargetLat 0x0
+int attr cameraTargetLng 0x0
+int attr cameraTilt 0x0
+int attr cameraZoom 0x0
+int attr checkMarkCompat 0x0
+int attr checkMarkTint 0x0
+int attr checkMarkTintMode 0x0
+int attr checkboxStyle 0x0
+int attr checkedTextViewStyle 0x0
+int attr circleCrop 0x0
+int attr closeIcon 0x0
+int attr closeItemLayout 0x0
+int attr collapseContentDescription 0x0
+int attr collapseIcon 0x0
+int attr color 0x0
+int attr colorAccent 0x0
+int attr colorBackgroundFloating 0x0
+int attr colorButtonNormal 0x0
+int attr colorControlActivated 0x0
+int attr colorControlHighlight 0x0
+int attr colorControlNormal 0x0
+int attr colorError 0x0
+int attr colorPrimary 0x0
+int attr colorPrimaryDark 0x0
+int attr colorScheme 0x0
+int attr colorSwitchThumbNormal 0x0
+int attr commitIcon 0x0
+int attr contentDescription 0x0
+int attr contentInsetEnd 0x0
+int attr contentInsetEndWithActions 0x0
+int attr contentInsetLeft 0x0
+int attr contentInsetRight 0x0
+int attr contentInsetStart 0x0
+int attr contentInsetStartWithNavigation 0x0
+int attr controlBackground 0x0
+int attr customNavigationLayout 0x0
+int attr defaultQueryHint 0x0
+int attr dialogCornerRadius 0x0
+int attr dialogPreferredPadding 0x0
+int attr dialogTheme 0x0
+int attr displayOptions 0x0
+int attr divider 0x0
+int attr dividerHorizontal 0x0
+int attr dividerPadding 0x0
+int attr dividerVertical 0x0
+int attr drawableBottomCompat 0x0
+int attr drawableEndCompat 0x0
+int attr drawableLeftCompat 0x0
+int attr drawableRightCompat 0x0
+int attr drawableSize 0x0
+int attr drawableStartCompat 0x0
+int attr drawableTint 0x0
+int attr drawableTintMode 0x0
+int attr drawableTopCompat 0x0
+int attr drawerArrowStyle 0x0
+int attr dropDownListViewStyle 0x0
+int attr dropdownListPreferredItemHeight 0x0
+int attr editTextBackground 0x0
+int attr editTextColor 0x0
+int attr editTextStyle 0x0
+int attr elevation 0x0
+int attr emojiCompatEnabled 0x0
+int attr expandActivityOverflowButtonDrawable 0x0
+int attr fadeDuration 0x0
+int attr failureImage 0x0
+int attr failureImageScaleType 0x0
+int attr firstBaselineToTopHeight 0x0
+int attr font 0x0
+int attr fontFamily 0x0
+int attr fontProviderAuthority 0x0
+int attr fontProviderCerts 0x0
+int attr fontProviderFetchStrategy 0x0
+int attr fontProviderFetchTimeout 0x0
+int attr fontProviderPackage 0x0
+int attr fontProviderQuery 0x0
+int attr fontProviderSystemFontFamily 0x0
+int attr fontStyle 0x0
+int attr fontVariationSettings 0x0
+int attr fontWeight 0x0
+int attr gapBetweenBars 0x0
+int attr goIcon 0x0
+int attr height 0x0
+int attr hideOnContentScroll 0x0
+int attr homeAsUpIndicator 0x0
+int attr homeLayout 0x0
+int attr icon 0x0
+int attr iconTint 0x0
+int attr iconTintMode 0x0
+int attr iconifiedByDefault 0x0
+int attr imageAspectRatio 0x0
+int attr imageAspectRatioAdjust 0x0
+int attr imageButtonStyle 0x0
+int attr indeterminateProgressStyle 0x0
+int attr initialActivityCount 0x0
+int attr isAutofillInlineSuggestionTheme 0x0
+int attr isLightTheme 0x0
+int attr itemPadding 0x0
+int attr lStar 0x0
+int attr lastBaselineToBottomHeight 0x0
+int attr latLngBoundsNorthEastLatitude 0x0
+int attr latLngBoundsNorthEastLongitude 0x0
+int attr latLngBoundsSouthWestLatitude 0x0
+int attr latLngBoundsSouthWestLongitude 0x0
+int attr layout 0x0
+int attr lineHeight 0x0
+int attr listChoiceBackgroundIndicator 0x0
+int attr listChoiceIndicatorMultipleAnimated 0x0
+int attr listChoiceIndicatorSingleAnimated 0x0
+int attr listDividerAlertDialog 0x0
+int attr listItemLayout 0x0
+int attr listLayout 0x0
+int attr listMenuViewStyle 0x0
+int attr listPopupWindowStyle 0x0
+int attr listPreferredItemHeight 0x0
+int attr listPreferredItemHeightLarge 0x0
+int attr listPreferredItemHeightSmall 0x0
+int attr listPreferredItemPaddingEnd 0x0
+int attr listPreferredItemPaddingLeft 0x0
+int attr listPreferredItemPaddingRight 0x0
+int attr listPreferredItemPaddingStart 0x0
+int attr liteMode 0x0
+int attr logo 0x0
+int attr logoDescription 0x0
+int attr mapId 0x0
+int attr mapType 0x0
+int attr maxButtonHeight 0x0
+int attr measureWithLargestChild 0x0
+int attr menu 0x0
+int attr multiChoiceItemLayout 0x0
+int attr navigationContentDescription 0x0
+int attr navigationIcon 0x0
+int attr navigationMode 0x0
+int attr nestedScrollViewStyle 0x0
+int attr numericModifiers 0x0
+int attr overlapAnchor 0x0
+int attr overlayImage 0x0
+int attr paddingBottomNoButtons 0x0
+int attr paddingEnd 0x0
+int attr paddingStart 0x0
+int attr paddingTopNoTitle 0x0
+int attr panelBackground 0x0
+int attr panelMenuListTheme 0x0
+int attr panelMenuListWidth 0x0
+int attr placeholderImage 0x0
+int attr placeholderImageScaleType 0x0
+int attr popupMenuStyle 0x0
+int attr popupTheme 0x0
+int attr popupWindowStyle 0x0
+int attr preserveIconSpacing 0x0
+int attr pressedStateOverlayImage 0x0
+int attr progressBarAutoRotateInterval 0x0
+int attr progressBarImage 0x0
+int attr progressBarImageScaleType 0x0
+int attr progressBarPadding 0x0
+int attr progressBarStyle 0x0
+int attr queryBackground 0x0
+int attr queryHint 0x0
+int attr queryPatterns 0x0
+int attr radioButtonStyle 0x0
+int attr ratingBarStyle 0x0
+int attr ratingBarStyleIndicator 0x0
+int attr ratingBarStyleSmall 0x0
+int attr retryImage 0x0
+int attr retryImageScaleType 0x0
+int attr roundAsCircle 0x0
+int attr roundBottomEnd 0x0
+int attr roundBottomLeft 0x0
+int attr roundBottomRight 0x0
+int attr roundBottomStart 0x0
+int attr roundTopEnd 0x0
+int attr roundTopLeft 0x0
+int attr roundTopRight 0x0
+int attr roundTopStart 0x0
+int attr roundWithOverlayColor 0x0
+int attr roundedCornerRadius 0x0
+int attr roundingBorderColor 0x0
+int attr roundingBorderPadding 0x0
+int attr roundingBorderWidth 0x0
+int attr scopeUris 0x0
+int attr searchHintIcon 0x0
+int attr searchIcon 0x0
+int attr searchViewStyle 0x0
+int attr seekBarStyle 0x0
+int attr selectableItemBackground 0x0
+int attr selectableItemBackgroundBorderless 0x0
+int attr shortcutMatchRequired 0x0
+int attr showAsAction 0x0
+int attr showDividers 0x0
+int attr showText 0x0
+int attr showTitle 0x0
+int attr singleChoiceItemLayout 0x0
+int attr spinBars 0x0
+int attr spinnerDropDownItemStyle 0x0
+int attr spinnerStyle 0x0
+int attr splitTrack 0x0
+int attr srcCompat 0x0
+int attr state_above_anchor 0x0
+int attr subMenuArrow 0x0
+int attr submitBackground 0x0
+int attr subtitle 0x0
+int attr subtitleTextAppearance 0x0
+int attr subtitleTextColor 0x0
+int attr subtitleTextStyle 0x0
+int attr suggestionRowLayout 0x0
+int attr switchMinWidth 0x0
+int attr switchPadding 0x0
+int attr switchStyle 0x0
+int attr switchTextAppearance 0x0
+int attr textAllCaps 0x0
+int attr textAppearanceLargePopupMenu 0x0
+int attr textAppearanceListItem 0x0
+int attr textAppearanceListItemSecondary 0x0
+int attr textAppearanceListItemSmall 0x0
+int attr textAppearancePopupMenuHeader 0x0
+int attr textAppearanceSearchResultSubtitle 0x0
+int attr textAppearanceSearchResultTitle 0x0
+int attr textAppearanceSmallPopupMenu 0x0
+int attr textColorAlertDialogListItem 0x0
+int attr textColorSearchUrl 0x0
+int attr textLocale 0x0
+int attr theme 0x0
+int attr thickness 0x0
+int attr thumbTextPadding 0x0
+int attr thumbTint 0x0
+int attr thumbTintMode 0x0
+int attr tickMark 0x0
+int attr tickMarkTint 0x0
+int attr tickMarkTintMode 0x0
+int attr tint 0x0
+int attr tintMode 0x0
+int attr title 0x0
+int attr titleMargin 0x0
+int attr titleMarginBottom 0x0
+int attr titleMarginEnd 0x0
+int attr titleMarginStart 0x0
+int attr titleMarginTop 0x0
+int attr titleMargins 0x0
+int attr titleTextAppearance 0x0
+int attr titleTextColor 0x0
+int attr titleTextStyle 0x0
+int attr toolbarNavigationButtonStyle 0x0
+int attr toolbarStyle 0x0
+int attr tooltipForegroundColor 0x0
+int attr tooltipFrameBackground 0x0
+int attr tooltipText 0x0
+int attr track 0x0
+int attr trackTint 0x0
+int attr trackTintMode 0x0
+int attr ttcIndex 0x0
+int attr uiCompass 0x0
+int attr uiMapToolbar 0x0
+int attr uiRotateGestures 0x0
+int attr uiScrollGestures 0x0
+int attr uiScrollGesturesDuringRotateOrZoom 0x0
+int attr uiTiltGestures 0x0
+int attr uiZoomControls 0x0
+int attr uiZoomGestures 0x0
+int attr useViewLifecycle 0x0
+int attr viewAspectRatio 0x0
+int attr viewInflaterClass 0x0
+int attr voiceIcon 0x0
+int attr windowActionBar 0x0
+int attr windowActionBarOverlay 0x0
+int attr windowActionModeOverlay 0x0
+int attr windowFixedHeightMajor 0x0
+int attr windowFixedHeightMinor 0x0
+int attr windowFixedWidthMajor 0x0
+int attr windowFixedWidthMinor 0x0
+int attr windowMinWidthMajor 0x0
+int attr windowMinWidthMinor 0x0
+int attr windowNoTitle 0x0
+int attr zOrderOnTop 0x0
+int bool abc_action_bar_embed_tabs 0x0
+int bool abc_config_actionMenuItemAllCaps 0x0
+int bool enable_system_alarm_service_default 0x0
+int bool enable_system_foreground_service_default 0x0
+int bool enable_system_job_service_default 0x0
+int bool workmanager_test_configuration 0x0
+int color abc_background_cache_hint_selector_material_dark 0x0
+int color abc_background_cache_hint_selector_material_light 0x0
+int color abc_btn_colored_borderless_text_material 0x0
+int color abc_btn_colored_text_material 0x0
+int color abc_color_highlight_material 0x0
+int color abc_decor_view_status_guard 0x0
+int color abc_decor_view_status_guard_light 0x0
+int color abc_hint_foreground_material_dark 0x0
+int color abc_hint_foreground_material_light 0x0
+int color abc_primary_text_disable_only_material_dark 0x0
+int color abc_primary_text_disable_only_material_light 0x0
+int color abc_primary_text_material_dark 0x0
+int color abc_primary_text_material_light 0x0
+int color abc_search_url_text 0x0
+int color abc_search_url_text_normal 0x0
+int color abc_search_url_text_pressed 0x0
+int color abc_search_url_text_selected 0x0
+int color abc_secondary_text_material_dark 0x0
+int color abc_secondary_text_material_light 0x0
+int color abc_tint_btn_checkable 0x0
+int color abc_tint_default 0x0
+int color abc_tint_edittext 0x0
+int color abc_tint_seek_thumb 0x0
+int color abc_tint_spinner 0x0
+int color abc_tint_switch_track 0x0
+int color accent_material_dark 0x0
+int color accent_material_light 0x0
+int color androidx_core_ripple_material_light 0x0
+int color androidx_core_secondary_text_default_material_light 0x0
+int color background_floating_material_dark 0x0
+int color background_floating_material_light 0x0
+int color background_material_dark 0x0
+int color background_material_light 0x0
+int color bright_foreground_disabled_material_dark 0x0
+int color bright_foreground_disabled_material_light 0x0
+int color bright_foreground_inverse_material_dark 0x0
+int color bright_foreground_inverse_material_light 0x0
+int color bright_foreground_material_dark 0x0
+int color bright_foreground_material_light 0x0
+int color button_material_dark 0x0
+int color button_material_light 0x0
+int color catalyst_logbox_background 0x0
+int color catalyst_redbox_background 0x0
+int color common_google_signin_btn_text_dark 0x0
+int color common_google_signin_btn_text_dark_default 0x0
+int color common_google_signin_btn_text_dark_disabled 0x0
+int color common_google_signin_btn_text_dark_focused 0x0
+int color common_google_signin_btn_text_dark_pressed 0x0
+int color common_google_signin_btn_text_light 0x0
+int color common_google_signin_btn_text_light_default 0x0
+int color common_google_signin_btn_text_light_disabled 0x0
+int color common_google_signin_btn_text_light_focused 0x0
+int color common_google_signin_btn_text_light_pressed 0x0
+int color common_google_signin_btn_tint 0x0
+int color dim_foreground_disabled_material_dark 0x0
+int color dim_foreground_disabled_material_light 0x0
+int color dim_foreground_material_dark 0x0
+int color dim_foreground_material_light 0x0
+int color error_color_material_dark 0x0
+int color error_color_material_light 0x0
+int color foreground_material_dark 0x0
+int color foreground_material_light 0x0
+int color highlighted_text_material_dark 0x0
+int color highlighted_text_material_light 0x0
+int color material_blue_grey_800 0x0
+int color material_blue_grey_900 0x0
+int color material_blue_grey_950 0x0
+int color material_deep_teal_200 0x0
+int color material_deep_teal_500 0x0
+int color material_grey_100 0x0
+int color material_grey_300 0x0
+int color material_grey_50 0x0
+int color material_grey_600 0x0
+int color material_grey_800 0x0
+int color material_grey_850 0x0
+int color material_grey_900 0x0
+int color notification_action_color_filter 0x0
+int color notification_icon_bg_color 0x0
+int color primary_dark_material_dark 0x0
+int color primary_dark_material_light 0x0
+int color primary_material_dark 0x0
+int color primary_material_light 0x0
+int color primary_text_default_material_dark 0x0
+int color primary_text_default_material_light 0x0
+int color primary_text_disabled_material_dark 0x0
+int color primary_text_disabled_material_light 0x0
+int color ripple_material_dark 0x0
+int color ripple_material_light 0x0
+int color secondary_text_default_material_dark 0x0
+int color secondary_text_default_material_light 0x0
+int color secondary_text_disabled_material_dark 0x0
+int color secondary_text_disabled_material_light 0x0
+int color switch_thumb_disabled_material_dark 0x0
+int color switch_thumb_disabled_material_light 0x0
+int color switch_thumb_material_dark 0x0
+int color switch_thumb_material_light 0x0
+int color switch_thumb_normal_material_dark 0x0
+int color switch_thumb_normal_material_light 0x0
+int color tooltip_background_dark 0x0
+int color tooltip_background_light 0x0
+int dimen abc_action_bar_content_inset_material 0x0
+int dimen abc_action_bar_content_inset_with_nav 0x0
+int dimen abc_action_bar_default_height_material 0x0
+int dimen abc_action_bar_default_padding_end_material 0x0
+int dimen abc_action_bar_default_padding_start_material 0x0
+int dimen abc_action_bar_elevation_material 0x0
+int dimen abc_action_bar_icon_vertical_padding_material 0x0
+int dimen abc_action_bar_overflow_padding_end_material 0x0
+int dimen abc_action_bar_overflow_padding_start_material 0x0
+int dimen abc_action_bar_stacked_max_height 0x0
+int dimen abc_action_bar_stacked_tab_max_width 0x0
+int dimen abc_action_bar_subtitle_bottom_margin_material 0x0
+int dimen abc_action_bar_subtitle_top_margin_material 0x0
+int dimen abc_action_button_min_height_material 0x0
+int dimen abc_action_button_min_width_material 0x0
+int dimen abc_action_button_min_width_overflow_material 0x0
+int dimen abc_alert_dialog_button_bar_height 0x0
+int dimen abc_alert_dialog_button_dimen 0x0
+int dimen abc_button_inset_horizontal_material 0x0
+int dimen abc_button_inset_vertical_material 0x0
+int dimen abc_button_padding_horizontal_material 0x0
+int dimen abc_button_padding_vertical_material 0x0
+int dimen abc_cascading_menus_min_smallest_width 0x0
+int dimen abc_config_prefDialogWidth 0x0
+int dimen abc_control_corner_material 0x0
+int dimen abc_control_inset_material 0x0
+int dimen abc_control_padding_material 0x0
+int dimen abc_dialog_corner_radius_material 0x0
+int dimen abc_dialog_fixed_height_major 0x0
+int dimen abc_dialog_fixed_height_minor 0x0
+int dimen abc_dialog_fixed_width_major 0x0
+int dimen abc_dialog_fixed_width_minor 0x0
+int dimen abc_dialog_list_padding_bottom_no_buttons 0x0
+int dimen abc_dialog_list_padding_top_no_title 0x0
+int dimen abc_dialog_min_width_major 0x0
+int dimen abc_dialog_min_width_minor 0x0
+int dimen abc_dialog_padding_material 0x0
+int dimen abc_dialog_padding_top_material 0x0
+int dimen abc_dialog_title_divider_material 0x0
+int dimen abc_disabled_alpha_material_dark 0x0
+int dimen abc_disabled_alpha_material_light 0x0
+int dimen abc_dropdownitem_icon_width 0x0
+int dimen abc_dropdownitem_text_padding_left 0x0
+int dimen abc_dropdownitem_text_padding_right 0x0
+int dimen abc_edit_text_inset_bottom_material 0x0
+int dimen abc_edit_text_inset_horizontal_material 0x0
+int dimen abc_edit_text_inset_top_material 0x0
+int dimen abc_floating_window_z 0x0
+int dimen abc_list_item_height_large_material 0x0
+int dimen abc_list_item_height_material 0x0
+int dimen abc_list_item_height_small_material 0x0
+int dimen abc_list_item_padding_horizontal_material 0x0
+int dimen abc_panel_menu_list_width 0x0
+int dimen abc_progress_bar_height_material 0x0
+int dimen abc_search_view_preferred_height 0x0
+int dimen abc_search_view_preferred_width 0x0
+int dimen abc_seekbar_track_background_height_material 0x0
+int dimen abc_seekbar_track_progress_height_material 0x0
+int dimen abc_select_dialog_padding_start_material 0x0
+int dimen abc_star_big 0x0
+int dimen abc_star_medium 0x0
+int dimen abc_star_small 0x0
+int dimen abc_switch_padding 0x0
+int dimen abc_text_size_body_1_material 0x0
+int dimen abc_text_size_body_2_material 0x0
+int dimen abc_text_size_button_material 0x0
+int dimen abc_text_size_caption_material 0x0
+int dimen abc_text_size_display_1_material 0x0
+int dimen abc_text_size_display_2_material 0x0
+int dimen abc_text_size_display_3_material 0x0
+int dimen abc_text_size_display_4_material 0x0
+int dimen abc_text_size_headline_material 0x0
+int dimen abc_text_size_large_material 0x0
+int dimen abc_text_size_medium_material 0x0
+int dimen abc_text_size_menu_header_material 0x0
+int dimen abc_text_size_menu_material 0x0
+int dimen abc_text_size_small_material 0x0
+int dimen abc_text_size_subhead_material 0x0
+int dimen abc_text_size_subtitle_material_toolbar 0x0
+int dimen abc_text_size_title_material 0x0
+int dimen abc_text_size_title_material_toolbar 0x0
+int dimen autofill_inline_suggestion_icon_size 0x0
+int dimen compat_button_inset_horizontal_material 0x0
+int dimen compat_button_inset_vertical_material 0x0
+int dimen compat_button_padding_horizontal_material 0x0
+int dimen compat_button_padding_vertical_material 0x0
+int dimen compat_control_corner_material 0x0
+int dimen compat_notification_large_icon_max_height 0x0
+int dimen compat_notification_large_icon_max_width 0x0
+int dimen disabled_alpha_material_dark 0x0
+int dimen disabled_alpha_material_light 0x0
+int dimen highlight_alpha_material_colored 0x0
+int dimen highlight_alpha_material_dark 0x0
+int dimen highlight_alpha_material_light 0x0
+int dimen hint_alpha_material_dark 0x0
+int dimen hint_alpha_material_light 0x0
+int dimen hint_pressed_alpha_material_dark 0x0
+int dimen hint_pressed_alpha_material_light 0x0
+int dimen notification_action_icon_size 0x0
+int dimen notification_action_text_size 0x0
+int dimen notification_big_circle_margin 0x0
+int dimen notification_content_margin_start 0x0
+int dimen notification_large_icon_height 0x0
+int dimen notification_large_icon_width 0x0
+int dimen notification_main_column_padding_top 0x0
+int dimen notification_media_narrow_margin 0x0
+int dimen notification_right_icon_size 0x0
+int dimen notification_right_side_padding_top 0x0
+int dimen notification_small_icon_background_padding 0x0
+int dimen notification_small_icon_size_as_large 0x0
+int dimen notification_subtext_size 0x0
+int dimen notification_top_pad 0x0
+int dimen notification_top_pad_large_text 0x0
+int dimen tooltip_corner_radius 0x0
+int dimen tooltip_horizontal_padding 0x0
+int dimen tooltip_margin 0x0
+int dimen tooltip_precise_anchor_extra_offset 0x0
+int dimen tooltip_precise_anchor_threshold 0x0
+int dimen tooltip_vertical_padding 0x0
+int dimen tooltip_y_offset_non_touch 0x0
+int dimen tooltip_y_offset_touch 0x0
+int drawable abc_ab_share_pack_mtrl_alpha 0x0
+int drawable abc_action_bar_item_background_material 0x0
+int drawable abc_btn_borderless_material 0x0
+int drawable abc_btn_check_material 0x0
+int drawable abc_btn_check_material_anim 0x0
+int drawable abc_btn_check_to_on_mtrl_000 0x0
+int drawable abc_btn_check_to_on_mtrl_015 0x0
+int drawable abc_btn_colored_material 0x0
+int drawable abc_btn_default_mtrl_shape 0x0
+int drawable abc_btn_radio_material 0x0
+int drawable abc_btn_radio_material_anim 0x0
+int drawable abc_btn_radio_to_on_mtrl_000 0x0
+int drawable abc_btn_radio_to_on_mtrl_015 0x0
+int drawable abc_btn_switch_to_on_mtrl_00001 0x0
+int drawable abc_btn_switch_to_on_mtrl_00012 0x0
+int drawable abc_cab_background_internal_bg 0x0
+int drawable abc_cab_background_top_material 0x0
+int drawable abc_cab_background_top_mtrl_alpha 0x0
+int drawable abc_control_background_material 0x0
+int drawable abc_dialog_material_background 0x0
+int drawable abc_edit_text_material 0x0
+int drawable abc_ic_ab_back_material 0x0
+int drawable abc_ic_arrow_drop_right_black_24dp 0x0
+int drawable abc_ic_clear_material 0x0
+int drawable abc_ic_commit_search_api_mtrl_alpha 0x0
+int drawable abc_ic_go_search_api_material 0x0
+int drawable abc_ic_menu_copy_mtrl_am_alpha 0x0
+int drawable abc_ic_menu_cut_mtrl_alpha 0x0
+int drawable abc_ic_menu_overflow_material 0x0
+int drawable abc_ic_menu_paste_mtrl_am_alpha 0x0
+int drawable abc_ic_menu_selectall_mtrl_alpha 0x0
+int drawable abc_ic_menu_share_mtrl_alpha 0x0
+int drawable abc_ic_search_api_material 0x0
+int drawable abc_ic_voice_search_api_material 0x0
+int drawable abc_item_background_holo_dark 0x0
+int drawable abc_item_background_holo_light 0x0
+int drawable abc_list_divider_material 0x0
+int drawable abc_list_divider_mtrl_alpha 0x0
+int drawable abc_list_focused_holo 0x0
+int drawable abc_list_longpressed_holo 0x0
+int drawable abc_list_pressed_holo_dark 0x0
+int drawable abc_list_pressed_holo_light 0x0
+int drawable abc_list_selector_background_transition_holo_dark 0x0
+int drawable abc_list_selector_background_transition_holo_light 0x0
+int drawable abc_list_selector_disabled_holo_dark 0x0
+int drawable abc_list_selector_disabled_holo_light 0x0
+int drawable abc_list_selector_holo_dark 0x0
+int drawable abc_list_selector_holo_light 0x0
+int drawable abc_menu_hardkey_panel_mtrl_mult 0x0
+int drawable abc_popup_background_mtrl_mult 0x0
+int drawable abc_ratingbar_indicator_material 0x0
+int drawable abc_ratingbar_material 0x0
+int drawable abc_ratingbar_small_material 0x0
+int drawable abc_scrubber_control_off_mtrl_alpha 0x0
+int drawable abc_scrubber_control_to_pressed_mtrl_000 0x0
+int drawable abc_scrubber_control_to_pressed_mtrl_005 0x0
+int drawable abc_scrubber_primary_mtrl_alpha 0x0
+int drawable abc_scrubber_track_mtrl_alpha 0x0
+int drawable abc_seekbar_thumb_material 0x0
+int drawable abc_seekbar_tick_mark_material 0x0
+int drawable abc_seekbar_track_material 0x0
+int drawable abc_spinner_mtrl_am_alpha 0x0
+int drawable abc_spinner_textfield_background_material 0x0
+int drawable abc_star_black_48dp 0x0
+int drawable abc_star_half_black_48dp 0x0
+int drawable abc_switch_thumb_material 0x0
+int drawable abc_switch_track_mtrl_alpha 0x0
+int drawable abc_tab_indicator_material 0x0
+int drawable abc_tab_indicator_mtrl_alpha 0x0
+int drawable abc_text_cursor_material 0x0
+int drawable abc_text_select_handle_left_mtrl 0x0
+int drawable abc_text_select_handle_middle_mtrl 0x0
+int drawable abc_text_select_handle_right_mtrl 0x0
+int drawable abc_textfield_activated_mtrl_alpha 0x0
+int drawable abc_textfield_default_mtrl_alpha 0x0
+int drawable abc_textfield_search_activated_mtrl_alpha 0x0
+int drawable abc_textfield_search_default_mtrl_alpha 0x0
+int drawable abc_textfield_search_material 0x0
+int drawable abc_vector_test 0x0
+int drawable amu_bubble_mask 0x0
+int drawable amu_bubble_shadow 0x0
+int drawable autofill_inline_suggestion_chip_background 0x0
+int drawable btn_checkbox_checked_mtrl 0x0
+int drawable btn_checkbox_checked_to_unchecked_mtrl_animation 0x0
+int drawable btn_checkbox_unchecked_mtrl 0x0
+int drawable btn_checkbox_unchecked_to_checked_mtrl_animation 0x0
+int drawable btn_radio_off_mtrl 0x0
+int drawable btn_radio_off_to_on_mtrl_animation 0x0
+int drawable btn_radio_on_mtrl 0x0
+int drawable btn_radio_on_to_off_mtrl_animation 0x0
+int drawable common_full_open_on_phone 0x0
+int drawable common_google_signin_btn_icon_dark 0x0
+int drawable common_google_signin_btn_icon_dark_disabled 0x0
+int drawable common_google_signin_btn_icon_dark_focused 0x0
+int drawable common_google_signin_btn_icon_dark_normal 0x0
+int drawable common_google_signin_btn_icon_dark_normal_background 0x0
+int drawable common_google_signin_btn_icon_dark_pressed 0x0
+int drawable common_google_signin_btn_icon_disabled 0x0
+int drawable common_google_signin_btn_icon_light 0x0
+int drawable common_google_signin_btn_icon_light_disabled 0x0
+int drawable common_google_signin_btn_icon_light_focused 0x0
+int drawable common_google_signin_btn_icon_light_normal 0x0
+int drawable common_google_signin_btn_icon_light_normal_background 0x0
+int drawable common_google_signin_btn_icon_light_pressed 0x0
+int drawable common_google_signin_btn_text_dark 0x0
+int drawable common_google_signin_btn_text_dark_disabled 0x0
+int drawable common_google_signin_btn_text_dark_focused 0x0
+int drawable common_google_signin_btn_text_dark_normal 0x0
+int drawable common_google_signin_btn_text_dark_normal_background 0x0
+int drawable common_google_signin_btn_text_dark_pressed 0x0
+int drawable common_google_signin_btn_text_disabled 0x0
+int drawable common_google_signin_btn_text_light 0x0
+int drawable common_google_signin_btn_text_light_disabled 0x0
+int drawable common_google_signin_btn_text_light_focused 0x0
+int drawable common_google_signin_btn_text_light_normal 0x0
+int drawable common_google_signin_btn_text_light_normal_background 0x0
+int drawable common_google_signin_btn_text_light_pressed 0x0
+int drawable common_ic_googleplayservices 0x0
+int drawable googleg_disabled_color_18 0x0
+int drawable googleg_standard_color_18 0x0
+int drawable notification_action_background 0x0
+int drawable notification_bg 0x0
+int drawable notification_bg_low 0x0
+int drawable notification_bg_low_normal 0x0
+int drawable notification_bg_low_pressed 0x0
+int drawable notification_bg_normal 0x0
+int drawable notification_bg_normal_pressed 0x0
+int drawable notification_icon_background 0x0
+int drawable notification_template_icon_bg 0x0
+int drawable notification_template_icon_low_bg 0x0
+int drawable notification_tile_bg 0x0
+int drawable notify_panel_notification_icon_bg 0x0
+int drawable redbox_top_border_background 0x0
+int drawable test_level_drawable 0x0
+int drawable tooltip_frame_dark 0x0
+int drawable tooltip_frame_light 0x0
+int id accessibility_action_clickable_span 0x0
+int id accessibility_actions 0x0
+int id accessibility_collection 0x0
+int id accessibility_collection_item 0x0
+int id accessibility_custom_action_0 0x0
+int id accessibility_custom_action_1 0x0
+int id accessibility_custom_action_10 0x0
+int id accessibility_custom_action_11 0x0
+int id accessibility_custom_action_12 0x0
+int id accessibility_custom_action_13 0x0
+int id accessibility_custom_action_14 0x0
+int id accessibility_custom_action_15 0x0
+int id accessibility_custom_action_16 0x0
+int id accessibility_custom_action_17 0x0
+int id accessibility_custom_action_18 0x0
+int id accessibility_custom_action_19 0x0
+int id accessibility_custom_action_2 0x0
+int id accessibility_custom_action_20 0x0
+int id accessibility_custom_action_21 0x0
+int id accessibility_custom_action_22 0x0
+int id accessibility_custom_action_23 0x0
+int id accessibility_custom_action_24 0x0
+int id accessibility_custom_action_25 0x0
+int id accessibility_custom_action_26 0x0
+int id accessibility_custom_action_27 0x0
+int id accessibility_custom_action_28 0x0
+int id accessibility_custom_action_29 0x0
+int id accessibility_custom_action_3 0x0
+int id accessibility_custom_action_30 0x0
+int id accessibility_custom_action_31 0x0
+int id accessibility_custom_action_4 0x0
+int id accessibility_custom_action_5 0x0
+int id accessibility_custom_action_6 0x0
+int id accessibility_custom_action_7 0x0
+int id accessibility_custom_action_8 0x0
+int id accessibility_custom_action_9 0x0
+int id accessibility_hint 0x0
+int id accessibility_label 0x0
+int id accessibility_links 0x0
+int id accessibility_role 0x0
+int id accessibility_state 0x0
+int id accessibility_value 0x0
+int id action_bar 0x0
+int id action_bar_activity_content 0x0
+int id action_bar_container 0x0
+int id action_bar_root 0x0
+int id action_bar_spinner 0x0
+int id action_bar_subtitle 0x0
+int id action_bar_title 0x0
+int id action_container 0x0
+int id action_context_bar 0x0
+int id action_divider 0x0
+int id action_image 0x0
+int id action_menu_divider 0x0
+int id action_menu_presenter 0x0
+int id action_mode_bar 0x0
+int id action_mode_bar_stub 0x0
+int id action_mode_close_button 0x0
+int id action_text 0x0
+int id actions 0x0
+int id activity_chooser_view_content 0x0
+int id add 0x0
+int id adjust_height 0x0
+int id adjust_width 0x0
+int id alertTitle 0x0
+int id amu_text 0x0
+int id async 0x0
+int id auto 0x0
+int id autofill_inline_suggestion_end_icon 0x0
+int id autofill_inline_suggestion_start_icon 0x0
+int id autofill_inline_suggestion_subtitle 0x0
+int id autofill_inline_suggestion_title 0x0
+int id blocking 0x0
+int id buttonPanel 0x0
+int id catalyst_redbox_title 0x0
+int id center 0x0
+int id centerCrop 0x0
+int id centerInside 0x0
+int id checkbox 0x0
+int id checked 0x0
+int id chronometer 0x0
+int id content 0x0
+int id contentPanel 0x0
+int id custom 0x0
+int id customPanel 0x0
+int id dark 0x0
+int id decor_content_parent 0x0
+int id default_activity_button 0x0
+int id dialog_button 0x0
+int id edit_query 0x0
+int id expand_activities_button 0x0
+int id expanded_menu 0x0
+int id fitBottomStart 0x0
+int id fitCenter 0x0
+int id fitEnd 0x0
+int id fitStart 0x0
+int id fitXY 0x0
+int id focusCrop 0x0
+int id forever 0x0
+int id fps_text 0x0
+int id fragment_container_view_tag 0x0
+int id group_divider 0x0
+int id home 0x0
+int id hybrid 0x0
+int id icon 0x0
+int id icon_group 0x0
+int id icon_only 0x0
+int id image 0x0
+int id info 0x0
+int id italic 0x0
+int id item1 0x0
+int id item2 0x0
+int id item3 0x0
+int id item4 0x0
+int id labelled_by 0x0
+int id light 0x0
+int id line1 0x0
+int id line3 0x0
+int id listMode 0x0
+int id list_item 0x0
+int id message 0x0
+int id multiply 0x0
+int id none 0x0
+int id normal 0x0
+int id notification_background 0x0
+int id notification_main_column 0x0
+int id notification_main_column_container 0x0
+int id off 0x0
+int id on 0x0
+int id parentPanel 0x0
+int id pointer_enter 0x0
+int id pointer_enter_capture 0x0
+int id pointer_leave 0x0
+int id pointer_leave_capture 0x0
+int id pointer_move 0x0
+int id pointer_move_capture 0x0
+int id progress_circular 0x0
+int id progress_horizontal 0x0
+int id radio 0x0
+int id react_test_id 0x0
+int id right_icon 0x0
+int id right_side 0x0
+int id rn_frame_file 0x0
+int id rn_frame_method 0x0
+int id rn_redbox_dismiss_button 0x0
+int id rn_redbox_line_separator 0x0
+int id rn_redbox_loading_indicator 0x0
+int id rn_redbox_reload_button 0x0
+int id rn_redbox_report_button 0x0
+int id rn_redbox_report_label 0x0
+int id rn_redbox_stack 0x0
+int id satellite 0x0
+int id screen 0x0
+int id scrollIndicatorDown 0x0
+int id scrollIndicatorUp 0x0
+int id scrollView 0x0
+int id search_badge 0x0
+int id search_bar 0x0
+int id search_button 0x0
+int id search_close_btn 0x0
+int id search_edit_frame 0x0
+int id search_go_btn 0x0
+int id search_mag_icon 0x0
+int id search_plate 0x0
+int id search_src_text 0x0
+int id search_voice_btn 0x0
+int id select_dialog_listview 0x0
+int id shortcut 0x0
+int id spacer 0x0
+int id special_effects_controller_view_tag 0x0
+int id split_action_bar 0x0
+int id src_atop 0x0
+int id src_in 0x0
+int id src_over 0x0
+int id standard 0x0
+int id submenuarrow 0x0
+int id submit_area 0x0
+int id tabMode 0x0
+int id tag_accessibility_actions 0x0
+int id tag_accessibility_clickable_spans 0x0
+int id tag_accessibility_heading 0x0
+int id tag_accessibility_pane_title 0x0
+int id tag_on_apply_window_listener 0x0
+int id tag_on_receive_content_listener 0x0
+int id tag_on_receive_content_mime_types 0x0
+int id tag_screen_reader_focusable 0x0
+int id tag_state_description 0x0
+int id tag_transition_group 0x0
+int id tag_unhandled_key_event_manager 0x0
+int id tag_unhandled_key_listeners 0x0
+int id tag_window_insets_animation_callback 0x0
+int id terrain 0x0
+int id text 0x0
+int id text2 0x0
+int id textSpacerNoButtons 0x0
+int id textSpacerNoTitle 0x0
+int id time 0x0
+int id title 0x0
+int id titleDividerNoCustom 0x0
+int id title_template 0x0
+int id topPanel 0x0
+int id unchecked 0x0
+int id uniform 0x0
+int id up 0x0
+int id view_tag_instance_handle 0x0
+int id view_tag_native_id 0x0
+int id view_tree_lifecycle_owner 0x0
+int id view_tree_saved_state_registry_owner 0x0
+int id view_tree_view_model_store_owner 0x0
+int id visible_removing_fragment_view_tag 0x0
+int id webview 0x0
+int id wide 0x0
+int id window 0x0
+int id wrap_content 0x0
+int integer abc_config_activityDefaultDur 0x0
+int integer abc_config_activityShortDur 0x0
+int integer cancel_button_image_alpha 0x0
+int integer config_tooltipAnimTime 0x0
+int integer google_play_services_version 0x0
+int integer react_native_dev_server_port 0x0
+int integer react_native_inspector_proxy_port 0x0
+int integer status_bar_notification_info_maxnum 0x0
+int interpolator btn_checkbox_checked_mtrl_animation_interpolator_0 0x0
+int interpolator btn_checkbox_checked_mtrl_animation_interpolator_1 0x0
+int interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_0 0x0
+int interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_1 0x0
+int interpolator btn_radio_to_off_mtrl_animation_interpolator_0 0x0
+int interpolator btn_radio_to_on_mtrl_animation_interpolator_0 0x0
+int interpolator fast_out_slow_in 0x0
+int layout abc_action_bar_title_item 0x0
+int layout abc_action_bar_up_container 0x0
+int layout abc_action_menu_item_layout 0x0
+int layout abc_action_menu_layout 0x0
+int layout abc_action_mode_bar 0x0
+int layout abc_action_mode_close_item_material 0x0
+int layout abc_activity_chooser_view 0x0
+int layout abc_activity_chooser_view_list_item 0x0
+int layout abc_alert_dialog_button_bar_material 0x0
+int layout abc_alert_dialog_material 0x0
+int layout abc_alert_dialog_title_material 0x0
+int layout abc_cascading_menu_item_layout 0x0
+int layout abc_dialog_title_material 0x0
+int layout abc_expanded_menu_layout 0x0
+int layout abc_list_menu_item_checkbox 0x0
+int layout abc_list_menu_item_icon 0x0
+int layout abc_list_menu_item_layout 0x0
+int layout abc_list_menu_item_radio 0x0
+int layout abc_popup_menu_header_item_layout 0x0
+int layout abc_popup_menu_item_layout 0x0
+int layout abc_screen_content_include 0x0
+int layout abc_screen_simple 0x0
+int layout abc_screen_simple_overlay_action_mode 0x0
+int layout abc_screen_toolbar 0x0
+int layout abc_search_dropdown_item_icons_2line 0x0
+int layout abc_search_view 0x0
+int layout abc_select_dialog_material 0x0
+int layout abc_tooltip 0x0
+int layout amu_info_window 0x0
+int layout amu_text_bubble 0x0
+int layout amu_webview 0x0
+int layout autofill_inline_suggestion 0x0
+int layout custom_dialog 0x0
+int layout dev_loading_view 0x0
+int layout fps_view 0x0
+int layout notification_action 0x0
+int layout notification_action_tombstone 0x0
+int layout notification_template_custom_big 0x0
+int layout notification_template_icon_group 0x0
+int layout notification_template_part_chronometer 0x0
+int layout notification_template_part_time 0x0
+int layout redbox_item_frame 0x0
+int layout redbox_item_title 0x0
+int layout redbox_view 0x0
+int layout select_dialog_item_material 0x0
+int layout select_dialog_multichoice_material 0x0
+int layout select_dialog_singlechoice_material 0x0
+int layout support_simple_spinner_dropdown_item 0x0
+int menu example_menu 0x0
+int menu example_menu2 0x0
+int raw amu_ballon_gx_prefix 0x0
+int raw amu_basic_folder 0x0
+int raw amu_basic_placemark 0x0
+int raw amu_cdata 0x0
+int raw amu_default_balloon 0x0
+int raw amu_document_nest 0x0
+int raw amu_draw_order_ground_overlay 0x0
+int raw amu_extended_data 0x0
+int raw amu_ground_overlay 0x0
+int raw amu_ground_overlay_color 0x0
+int raw amu_inline_style 0x0
+int raw amu_multigeometry_placemarks 0x0
+int raw amu_multiple_placemarks 0x0
+int raw amu_nested_folders 0x0
+int raw amu_nested_multigeometry 0x0
+int raw amu_poly_style_boolean_alpha 0x0
+int raw amu_poly_style_boolean_numeric 0x0
+int raw amu_unknwown_folder 0x0
+int raw amu_unsupported 0x0
+int raw amu_visibility_ground_overlay 0x0
+int string abc_action_bar_home_description 0x0
+int string abc_action_bar_up_description 0x0
+int string abc_action_menu_overflow_description 0x0
+int string abc_action_mode_done 0x0
+int string abc_activity_chooser_view_see_all 0x0
+int string abc_activitychooserview_choose_application 0x0
+int string abc_capital_off 0x0
+int string abc_capital_on 0x0
+int string abc_menu_alt_shortcut_label 0x0
+int string abc_menu_ctrl_shortcut_label 0x0
+int string abc_menu_delete_shortcut_label 0x0
+int string abc_menu_enter_shortcut_label 0x0
+int string abc_menu_function_shortcut_label 0x0
+int string abc_menu_meta_shortcut_label 0x0
+int string abc_menu_shift_shortcut_label 0x0
+int string abc_menu_space_shortcut_label 0x0
+int string abc_menu_sym_shortcut_label 0x0
+int string abc_prepend_shortcut_label 0x0
+int string abc_search_hint 0x0
+int string abc_searchview_description_clear 0x0
+int string abc_searchview_description_query 0x0
+int string abc_searchview_description_search 0x0
+int string abc_searchview_description_submit 0x0
+int string abc_searchview_description_voice 0x0
+int string abc_shareactionprovider_share_with 0x0
+int string abc_shareactionprovider_share_with_application 0x0
+int string abc_toolbar_collapse_description 0x0
+int string alert_description 0x0
+int string androidx_startup 0x0
+int string catalyst_change_bundle_location 0x0
+int string catalyst_copy_button 0x0
+int string catalyst_debug 0x0
+int string catalyst_debug_chrome 0x0
+int string catalyst_debug_chrome_stop 0x0
+int string catalyst_debug_connecting 0x0
+int string catalyst_debug_error 0x0
+int string catalyst_debug_open 0x0
+int string catalyst_debug_stop 0x0
+int string catalyst_devtools_open 0x0
+int string catalyst_dismiss_button 0x0
+int string catalyst_heap_capture 0x0
+int string catalyst_hot_reloading 0x0
+int string catalyst_hot_reloading_auto_disable 0x0
+int string catalyst_hot_reloading_auto_enable 0x0
+int string catalyst_hot_reloading_stop 0x0
+int string catalyst_inspector 0x0
+int string catalyst_inspector_stop 0x0
+int string catalyst_loading_from_url 0x0
+int string catalyst_open_flipper_error 0x0
+int string catalyst_perf_monitor 0x0
+int string catalyst_perf_monitor_stop 0x0
+int string catalyst_reload 0x0
+int string catalyst_reload_button 0x0
+int string catalyst_reload_error 0x0
+int string catalyst_report_button 0x0
+int string catalyst_sample_profiler_disable 0x0
+int string catalyst_sample_profiler_enable 0x0
+int string catalyst_settings 0x0
+int string catalyst_settings_title 0x0
+int string combobox_description 0x0
+int string common_google_play_services_enable_button 0x0
+int string common_google_play_services_enable_text 0x0
+int string common_google_play_services_enable_title 0x0
+int string common_google_play_services_install_button 0x0
+int string common_google_play_services_install_text 0x0
+int string common_google_play_services_install_text_phone 0x0
+int string common_google_play_services_install_text_tablet 0x0
+int string common_google_play_services_install_title 0x0
+int string common_google_play_services_notification_channel_name 0x0
+int string common_google_play_services_notification_ticker 0x0
+int string common_google_play_services_unknown_issue 0x0
+int string common_google_play_services_unsupported_text 0x0
+int string common_google_play_services_unsupported_title 0x0
+int string common_google_play_services_update_button 0x0
+int string common_google_play_services_update_text 0x0
+int string common_google_play_services_update_title 0x0
+int string common_google_play_services_updating_text 0x0
+int string common_google_play_services_updating_title 0x0
+int string common_google_play_services_wear_update_text 0x0
+int string common_open_on_phone 0x0
+int string common_signin_button_text 0x0
+int string common_signin_button_text_long 0x0
+int string header_description 0x0
+int string image_description 0x0
+int string imagebutton_description 0x0
+int string link_description 0x0
+int string menu_description 0x0
+int string menubar_description 0x0
+int string menuitem_description 0x0
+int string progressbar_description 0x0
+int string radiogroup_description 0x0
+int string rn_tab_description 0x0
+int string scrollbar_description 0x0
+int string search_menu_title 0x0
+int string spinbutton_description 0x0
+int string state_busy_description 0x0
+int string state_collapsed_description 0x0
+int string state_expanded_description 0x0
+int string state_mixed_description 0x0
+int string state_off_description 0x0
+int string state_on_description 0x0
+int string state_unselected_description 0x0
+int string status_bar_notification_info_overflow 0x0
+int string summary_description 0x0
+int string tablist_description 0x0
+int string timer_description 0x0
+int string toolbar_description 0x0
+int style AlertDialog_AppCompat 0x0
+int style AlertDialog_AppCompat_Light 0x0
+int style Animation_AppCompat_Dialog 0x0
+int style Animation_AppCompat_DropDownUp 0x0
+int style Animation_AppCompat_Tooltip 0x0
+int style Animation_Catalyst_LogBox 0x0
+int style Animation_Catalyst_RedBox 0x0
+int style Base_AlertDialog_AppCompat 0x0
+int style Base_AlertDialog_AppCompat_Light 0x0
+int style Base_Animation_AppCompat_Dialog 0x0
+int style Base_Animation_AppCompat_DropDownUp 0x0
+int style Base_Animation_AppCompat_Tooltip 0x0
+int style Base_DialogWindowTitleBackground_AppCompat 0x0
+int style Base_DialogWindowTitle_AppCompat 0x0
+int style Base_TextAppearance_AppCompat 0x0
+int style Base_TextAppearance_AppCompat_Body1 0x0
+int style Base_TextAppearance_AppCompat_Body2 0x0
+int style Base_TextAppearance_AppCompat_Button 0x0
+int style Base_TextAppearance_AppCompat_Caption 0x0
+int style Base_TextAppearance_AppCompat_Display1 0x0
+int style Base_TextAppearance_AppCompat_Display2 0x0
+int style Base_TextAppearance_AppCompat_Display3 0x0
+int style Base_TextAppearance_AppCompat_Display4 0x0
+int style Base_TextAppearance_AppCompat_Headline 0x0
+int style Base_TextAppearance_AppCompat_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Large 0x0
+int style Base_TextAppearance_AppCompat_Large_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large 0x0
+int style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small 0x0
+int style Base_TextAppearance_AppCompat_Medium 0x0
+int style Base_TextAppearance_AppCompat_Medium_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Menu 0x0
+int style Base_TextAppearance_AppCompat_SearchResult 0x0
+int style Base_TextAppearance_AppCompat_SearchResult_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_SearchResult_Title 0x0
+int style Base_TextAppearance_AppCompat_Small 0x0
+int style Base_TextAppearance_AppCompat_Small_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Subhead 0x0
+int style Base_TextAppearance_AppCompat_Subhead_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Title 0x0
+int style Base_TextAppearance_AppCompat_Title_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Tooltip 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Menu 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Title 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle 0x0
+int style Base_TextAppearance_AppCompat_Widget_ActionMode_Title 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Colored 0x0
+int style Base_TextAppearance_AppCompat_Widget_Button_Inverse 0x0
+int style Base_TextAppearance_AppCompat_Widget_DropDownItem 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Header 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Large 0x0
+int style Base_TextAppearance_AppCompat_Widget_PopupMenu_Small 0x0
+int style Base_TextAppearance_AppCompat_Widget_Switch 0x0
+int style Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem 0x0
+int style Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item 0x0
+int style Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle 0x0
+int style Base_TextAppearance_Widget_AppCompat_Toolbar_Title 0x0
+int style Base_ThemeOverlay_AppCompat 0x0
+int style Base_ThemeOverlay_AppCompat_ActionBar 0x0
+int style Base_ThemeOverlay_AppCompat_Dark 0x0
+int style Base_ThemeOverlay_AppCompat_Dark_ActionBar 0x0
+int style Base_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_ThemeOverlay_AppCompat_Dialog_Alert 0x0
+int style Base_ThemeOverlay_AppCompat_Light 0x0
+int style Base_Theme_AppCompat 0x0
+int style Base_Theme_AppCompat_CompactMenu 0x0
+int style Base_Theme_AppCompat_Dialog 0x0
+int style Base_Theme_AppCompat_DialogWhenLarge 0x0
+int style Base_Theme_AppCompat_Dialog_Alert 0x0
+int style Base_Theme_AppCompat_Dialog_FixedSize 0x0
+int style Base_Theme_AppCompat_Dialog_MinWidth 0x0
+int style Base_Theme_AppCompat_Light 0x0
+int style Base_Theme_AppCompat_Light_DarkActionBar 0x0
+int style Base_Theme_AppCompat_Light_Dialog 0x0
+int style Base_Theme_AppCompat_Light_DialogWhenLarge 0x0
+int style Base_Theme_AppCompat_Light_Dialog_Alert 0x0
+int style Base_Theme_AppCompat_Light_Dialog_FixedSize 0x0
+int style Base_Theme_AppCompat_Light_Dialog_MinWidth 0x0
+int style Base_V21_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_V21_Theme_AppCompat 0x0
+int style Base_V21_Theme_AppCompat_Dialog 0x0
+int style Base_V21_Theme_AppCompat_Light 0x0
+int style Base_V21_Theme_AppCompat_Light_Dialog 0x0
+int style Base_V22_Theme_AppCompat 0x0
+int style Base_V22_Theme_AppCompat_Light 0x0
+int style Base_V23_Theme_AppCompat 0x0
+int style Base_V23_Theme_AppCompat_Light 0x0
+int style Base_V26_Theme_AppCompat 0x0
+int style Base_V26_Theme_AppCompat_Light 0x0
+int style Base_V26_Widget_AppCompat_Toolbar 0x0
+int style Base_V28_Theme_AppCompat 0x0
+int style Base_V28_Theme_AppCompat_Light 0x0
+int style Base_V7_ThemeOverlay_AppCompat_Dialog 0x0
+int style Base_V7_Theme_AppCompat 0x0
+int style Base_V7_Theme_AppCompat_Dialog 0x0
+int style Base_V7_Theme_AppCompat_Light 0x0
+int style Base_V7_Theme_AppCompat_Light_Dialog 0x0
+int style Base_V7_Widget_AppCompat_AutoCompleteTextView 0x0
+int style Base_V7_Widget_AppCompat_EditText 0x0
+int style Base_V7_Widget_AppCompat_Toolbar 0x0
+int style Base_Widget_AppCompat_ActionBar 0x0
+int style Base_Widget_AppCompat_ActionBar_Solid 0x0
+int style Base_Widget_AppCompat_ActionBar_TabBar 0x0
+int style Base_Widget_AppCompat_ActionBar_TabText 0x0
+int style Base_Widget_AppCompat_ActionBar_TabView 0x0
+int style Base_Widget_AppCompat_ActionButton 0x0
+int style Base_Widget_AppCompat_ActionButton_CloseMode 0x0
+int style Base_Widget_AppCompat_ActionButton_Overflow 0x0
+int style Base_Widget_AppCompat_ActionMode 0x0
+int style Base_Widget_AppCompat_ActivityChooserView 0x0
+int style Base_Widget_AppCompat_AutoCompleteTextView 0x0
+int style Base_Widget_AppCompat_Button 0x0
+int style Base_Widget_AppCompat_ButtonBar 0x0
+int style Base_Widget_AppCompat_ButtonBar_AlertDialog 0x0
+int style Base_Widget_AppCompat_Button_Borderless 0x0
+int style Base_Widget_AppCompat_Button_Borderless_Colored 0x0
+int style Base_Widget_AppCompat_Button_ButtonBar_AlertDialog 0x0
+int style Base_Widget_AppCompat_Button_Colored 0x0
+int style Base_Widget_AppCompat_Button_Small 0x0
+int style Base_Widget_AppCompat_CompoundButton_CheckBox 0x0
+int style Base_Widget_AppCompat_CompoundButton_RadioButton 0x0
+int style Base_Widget_AppCompat_CompoundButton_Switch 0x0
+int style Base_Widget_AppCompat_DrawerArrowToggle 0x0
+int style Base_Widget_AppCompat_DrawerArrowToggle_Common 0x0
+int style Base_Widget_AppCompat_DropDownItem_Spinner 0x0
+int style Base_Widget_AppCompat_EditText 0x0
+int style Base_Widget_AppCompat_ImageButton 0x0
+int style Base_Widget_AppCompat_Light_ActionBar 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_Solid 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabBar 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabText 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse 0x0
+int style Base_Widget_AppCompat_Light_ActionBar_TabView 0x0
+int style Base_Widget_AppCompat_Light_PopupMenu 0x0
+int style Base_Widget_AppCompat_Light_PopupMenu_Overflow 0x0
+int style Base_Widget_AppCompat_ListMenuView 0x0
+int style Base_Widget_AppCompat_ListPopupWindow 0x0
+int style Base_Widget_AppCompat_ListView 0x0
+int style Base_Widget_AppCompat_ListView_DropDown 0x0
+int style Base_Widget_AppCompat_ListView_Menu 0x0
+int style Base_Widget_AppCompat_PopupMenu 0x0
+int style Base_Widget_AppCompat_PopupMenu_Overflow 0x0
+int style Base_Widget_AppCompat_PopupWindow 0x0
+int style Base_Widget_AppCompat_ProgressBar 0x0
+int style Base_Widget_AppCompat_ProgressBar_Horizontal 0x0
+int style Base_Widget_AppCompat_RatingBar 0x0
+int style Base_Widget_AppCompat_RatingBar_Indicator 0x0
+int style Base_Widget_AppCompat_RatingBar_Small 0x0
+int style Base_Widget_AppCompat_SearchView 0x0
+int style Base_Widget_AppCompat_SearchView_ActionBar 0x0
+int style Base_Widget_AppCompat_SeekBar 0x0
+int style Base_Widget_AppCompat_SeekBar_Discrete 0x0
+int style Base_Widget_AppCompat_Spinner 0x0
+int style Base_Widget_AppCompat_Spinner_Underlined 0x0
+int style Base_Widget_AppCompat_TextView 0x0
+int style Base_Widget_AppCompat_TextView_SpinnerItem 0x0
+int style Base_Widget_AppCompat_Toolbar 0x0
+int style Base_Widget_AppCompat_Toolbar_Button_Navigation 0x0
+int style CalendarDatePickerDialog 0x0
+int style CalendarDatePickerStyle 0x0
+int style DialogAnimationFade 0x0
+int style DialogAnimationSlide 0x0
+int style Platform_AppCompat 0x0
+int style Platform_AppCompat_Light 0x0
+int style Platform_ThemeOverlay_AppCompat 0x0
+int style Platform_ThemeOverlay_AppCompat_Dark 0x0
+int style Platform_ThemeOverlay_AppCompat_Light 0x0
+int style Platform_V21_AppCompat 0x0
+int style Platform_V21_AppCompat_Light 0x0
+int style Platform_V25_AppCompat 0x0
+int style Platform_V25_AppCompat_Light 0x0
+int style Platform_Widget_AppCompat_Spinner 0x0
+int style RtlOverlay_DialogWindowTitle_AppCompat 0x0
+int style RtlOverlay_Widget_AppCompat_ActionBar_TitleItem 0x0
+int style RtlOverlay_Widget_AppCompat_DialogTitle_Icon 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Text 0x0
+int style RtlOverlay_Widget_AppCompat_PopupMenuItem_Title 0x0
+int style RtlOverlay_Widget_AppCompat_SearchView_MagIcon 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Query 0x0
+int style RtlOverlay_Widget_AppCompat_Search_DropDown_Text 0x0
+int style RtlUnderlay_Widget_AppCompat_ActionButton 0x0
+int style RtlUnderlay_Widget_AppCompat_ActionButton_Overflow 0x0
+int style SpinnerDatePickerDialog 0x0
+int style SpinnerDatePickerStyle 0x0
+int style TextAppearance_AppCompat 0x0
+int style TextAppearance_AppCompat_Body1 0x0
+int style TextAppearance_AppCompat_Body2 0x0
+int style TextAppearance_AppCompat_Button 0x0
+int style TextAppearance_AppCompat_Caption 0x0
+int style TextAppearance_AppCompat_Display1 0x0
+int style TextAppearance_AppCompat_Display2 0x0
+int style TextAppearance_AppCompat_Display3 0x0
+int style TextAppearance_AppCompat_Display4 0x0
+int style TextAppearance_AppCompat_Headline 0x0
+int style TextAppearance_AppCompat_Inverse 0x0
+int style TextAppearance_AppCompat_Large 0x0
+int style TextAppearance_AppCompat_Large_Inverse 0x0
+int style TextAppearance_AppCompat_Light_SearchResult_Subtitle 0x0
+int style TextAppearance_AppCompat_Light_SearchResult_Title 0x0
+int style TextAppearance_AppCompat_Light_Widget_PopupMenu_Large 0x0
+int style TextAppearance_AppCompat_Light_Widget_PopupMenu_Small 0x0
+int style TextAppearance_AppCompat_Medium 0x0
+int style TextAppearance_AppCompat_Medium_Inverse 0x0
+int style TextAppearance_AppCompat_Menu 0x0
+int style TextAppearance_AppCompat_SearchResult_Subtitle 0x0
+int style TextAppearance_AppCompat_SearchResult_Title 0x0
+int style TextAppearance_AppCompat_Small 0x0
+int style TextAppearance_AppCompat_Small_Inverse 0x0
+int style TextAppearance_AppCompat_Subhead 0x0
+int style TextAppearance_AppCompat_Subhead_Inverse 0x0
+int style TextAppearance_AppCompat_Title 0x0
+int style TextAppearance_AppCompat_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Tooltip 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Menu 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Subtitle 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Title 0x0
+int style TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Subtitle 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Title 0x0
+int style TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_Button 0x0
+int style TextAppearance_AppCompat_Widget_Button_Borderless_Colored 0x0
+int style TextAppearance_AppCompat_Widget_Button_Colored 0x0
+int style TextAppearance_AppCompat_Widget_Button_Inverse 0x0
+int style TextAppearance_AppCompat_Widget_DropDownItem 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Header 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Large 0x0
+int style TextAppearance_AppCompat_Widget_PopupMenu_Small 0x0
+int style TextAppearance_AppCompat_Widget_Switch 0x0
+int style TextAppearance_AppCompat_Widget_TextView_SpinnerItem 0x0
+int style TextAppearance_Compat_Notification 0x0
+int style TextAppearance_Compat_Notification_Info 0x0
+int style TextAppearance_Compat_Notification_Line2 0x0
+int style TextAppearance_Compat_Notification_Time 0x0
+int style TextAppearance_Compat_Notification_Title 0x0
+int style TextAppearance_Widget_AppCompat_ExpandedMenu_Item 0x0
+int style TextAppearance_Widget_AppCompat_Toolbar_Subtitle 0x0
+int style TextAppearance_Widget_AppCompat_Toolbar_Title 0x0
+int style Theme 0x0
+int style ThemeOverlay_AppCompat 0x0
+int style ThemeOverlay_AppCompat_ActionBar 0x0
+int style ThemeOverlay_AppCompat_Dark 0x0
+int style ThemeOverlay_AppCompat_Dark_ActionBar 0x0
+int style ThemeOverlay_AppCompat_DayNight 0x0
+int style ThemeOverlay_AppCompat_DayNight_ActionBar 0x0
+int style ThemeOverlay_AppCompat_Dialog 0x0
+int style ThemeOverlay_AppCompat_Dialog_Alert 0x0
+int style ThemeOverlay_AppCompat_Light 0x0
+int style Theme_AppCompat 0x0
+int style Theme_AppCompat_CompactMenu 0x0
+int style Theme_AppCompat_DayNight 0x0
+int style Theme_AppCompat_DayNight_DarkActionBar 0x0
+int style Theme_AppCompat_DayNight_Dialog 0x0
+int style Theme_AppCompat_DayNight_DialogWhenLarge 0x0
+int style Theme_AppCompat_DayNight_Dialog_Alert 0x0
+int style Theme_AppCompat_DayNight_Dialog_MinWidth 0x0
+int style Theme_AppCompat_DayNight_NoActionBar 0x0
+int style Theme_AppCompat_Dialog 0x0
+int style Theme_AppCompat_DialogWhenLarge 0x0
+int style Theme_AppCompat_Dialog_Alert 0x0
+int style Theme_AppCompat_Dialog_MinWidth 0x0
+int style Theme_AppCompat_Empty 0x0
+int style Theme_AppCompat_Light 0x0
+int style Theme_AppCompat_Light_DarkActionBar 0x0
+int style Theme_AppCompat_Light_Dialog 0x0
+int style Theme_AppCompat_Light_DialogWhenLarge 0x0
+int style Theme_AppCompat_Light_Dialog_Alert 0x0
+int style Theme_AppCompat_Light_Dialog_MinWidth 0x0
+int style Theme_AppCompat_Light_NoActionBar 0x0
+int style Theme_AppCompat_NoActionBar 0x0
+int style Theme_AutofillInlineSuggestion 0x0
+int style Theme_Catalyst 0x0
+int style Theme_Catalyst_LogBox 0x0
+int style Theme_Catalyst_RedBox 0x0
+int style Theme_FullScreenDialog 0x0
+int style Theme_FullScreenDialogAnimatedFade 0x0
+int style Theme_FullScreenDialogAnimatedSlide 0x0
+int style Theme_ReactNative_AppCompat_Light 0x0
+int style Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen 0x0
+int style Widget_AppCompat_ActionBar 0x0
+int style Widget_AppCompat_ActionBar_Solid 0x0
+int style Widget_AppCompat_ActionBar_TabBar 0x0
+int style Widget_AppCompat_ActionBar_TabText 0x0
+int style Widget_AppCompat_ActionBar_TabView 0x0
+int style Widget_AppCompat_ActionButton 0x0
+int style Widget_AppCompat_ActionButton_CloseMode 0x0
+int style Widget_AppCompat_ActionButton_Overflow 0x0
+int style Widget_AppCompat_ActionMode 0x0
+int style Widget_AppCompat_ActivityChooserView 0x0
+int style Widget_AppCompat_AutoCompleteTextView 0x0
+int style Widget_AppCompat_Button 0x0
+int style Widget_AppCompat_ButtonBar 0x0
+int style Widget_AppCompat_ButtonBar_AlertDialog 0x0
+int style Widget_AppCompat_Button_Borderless 0x0
+int style Widget_AppCompat_Button_Borderless_Colored 0x0
+int style Widget_AppCompat_Button_ButtonBar_AlertDialog 0x0
+int style Widget_AppCompat_Button_Colored 0x0
+int style Widget_AppCompat_Button_Small 0x0
+int style Widget_AppCompat_CompoundButton_CheckBox 0x0
+int style Widget_AppCompat_CompoundButton_RadioButton 0x0
+int style Widget_AppCompat_CompoundButton_Switch 0x0
+int style Widget_AppCompat_DrawerArrowToggle 0x0
+int style Widget_AppCompat_DropDownItem_Spinner 0x0
+int style Widget_AppCompat_EditText 0x0
+int style Widget_AppCompat_ImageButton 0x0
+int style Widget_AppCompat_Light_ActionBar 0x0
+int style Widget_AppCompat_Light_ActionBar_Solid 0x0
+int style Widget_AppCompat_Light_ActionBar_Solid_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabBar 0x0
+int style Widget_AppCompat_Light_ActionBar_TabBar_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabText 0x0
+int style Widget_AppCompat_Light_ActionBar_TabText_Inverse 0x0
+int style Widget_AppCompat_Light_ActionBar_TabView 0x0
+int style Widget_AppCompat_Light_ActionBar_TabView_Inverse 0x0
+int style Widget_AppCompat_Light_ActionButton 0x0
+int style Widget_AppCompat_Light_ActionButton_CloseMode 0x0
+int style Widget_AppCompat_Light_ActionButton_Overflow 0x0
+int style Widget_AppCompat_Light_ActionMode_Inverse 0x0
+int style Widget_AppCompat_Light_ActivityChooserView 0x0
+int style Widget_AppCompat_Light_AutoCompleteTextView 0x0
+int style Widget_AppCompat_Light_DropDownItem_Spinner 0x0
+int style Widget_AppCompat_Light_ListPopupWindow 0x0
+int style Widget_AppCompat_Light_ListView_DropDown 0x0
+int style Widget_AppCompat_Light_PopupMenu 0x0
+int style Widget_AppCompat_Light_PopupMenu_Overflow 0x0
+int style Widget_AppCompat_Light_SearchView 0x0
+int style Widget_AppCompat_Light_Spinner_DropDown_ActionBar 0x0
+int style Widget_AppCompat_ListMenuView 0x0
+int style Widget_AppCompat_ListPopupWindow 0x0
+int style Widget_AppCompat_ListView 0x0
+int style Widget_AppCompat_ListView_DropDown 0x0
+int style Widget_AppCompat_ListView_Menu 0x0
+int style Widget_AppCompat_PopupMenu 0x0
+int style Widget_AppCompat_PopupMenu_Overflow 0x0
+int style Widget_AppCompat_PopupWindow 0x0
+int style Widget_AppCompat_ProgressBar 0x0
+int style Widget_AppCompat_ProgressBar_Horizontal 0x0
+int style Widget_AppCompat_RatingBar 0x0
+int style Widget_AppCompat_RatingBar_Indicator 0x0
+int style Widget_AppCompat_RatingBar_Small 0x0
+int style Widget_AppCompat_SearchView 0x0
+int style Widget_AppCompat_SearchView_ActionBar 0x0
+int style Widget_AppCompat_SeekBar 0x0
+int style Widget_AppCompat_SeekBar_Discrete 0x0
+int style Widget_AppCompat_Spinner 0x0
+int style Widget_AppCompat_Spinner_DropDown 0x0
+int style Widget_AppCompat_Spinner_DropDown_ActionBar 0x0
+int style Widget_AppCompat_Spinner_Underlined 0x0
+int style Widget_AppCompat_TextView 0x0
+int style Widget_AppCompat_TextView_SpinnerItem 0x0
+int style Widget_AppCompat_Toolbar 0x0
+int style Widget_AppCompat_Toolbar_Button_Navigation 0x0
+int style Widget_Autofill 0x0
+int style Widget_Autofill_InlineSuggestionChip 0x0
+int style Widget_Autofill_InlineSuggestionEndIconStyle 0x0
+int style Widget_Autofill_InlineSuggestionStartIconStyle 0x0
+int style Widget_Autofill_InlineSuggestionSubtitle 0x0
+int style Widget_Autofill_InlineSuggestionTitle 0x0
+int style Widget_Compat_NotificationActionContainer 0x0
+int style Widget_Compat_NotificationActionText 0x0
+int style amu_Bubble_TextAppearance_Dark 0x0
+int style amu_Bubble_TextAppearance_Light 0x0
+int style amu_ClusterIcon_TextAppearance 0x0
+int style redboxButton 0x0
+int[] styleable ActionBar { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable ActionBar_background 0
+int styleable ActionBar_backgroundSplit 1
+int styleable ActionBar_backgroundStacked 2
+int styleable ActionBar_contentInsetEnd 3
+int styleable ActionBar_contentInsetEndWithActions 4
+int styleable ActionBar_contentInsetLeft 5
+int styleable ActionBar_contentInsetRight 6
+int styleable ActionBar_contentInsetStart 7
+int styleable ActionBar_contentInsetStartWithNavigation 8
+int styleable ActionBar_customNavigationLayout 9
+int styleable ActionBar_displayOptions 10
+int styleable ActionBar_divider 11
+int styleable ActionBar_elevation 12
+int styleable ActionBar_height 13
+int styleable ActionBar_hideOnContentScroll 14
+int styleable ActionBar_homeAsUpIndicator 15
+int styleable ActionBar_homeLayout 16
+int styleable ActionBar_icon 17
+int styleable ActionBar_indeterminateProgressStyle 18
+int styleable ActionBar_itemPadding 19
+int styleable ActionBar_logo 20
+int styleable ActionBar_navigationMode 21
+int styleable ActionBar_popupTheme 22
+int styleable ActionBar_progressBarPadding 23
+int styleable ActionBar_progressBarStyle 24
+int styleable ActionBar_subtitle 25
+int styleable ActionBar_subtitleTextStyle 26
+int styleable ActionBar_title 27
+int styleable ActionBar_titleTextStyle 28
+int[] styleable ActionBarLayout { 0x10100b3 }
+int styleable ActionBarLayout_android_layout_gravity 0
+int[] styleable ActionMenuItemView { 0x101013f }
+int styleable ActionMenuItemView_android_minWidth 0
+int[] styleable ActionMenuView {  }
+int[] styleable ActionMode { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable ActionMode_background 0
+int styleable ActionMode_backgroundSplit 1
+int styleable ActionMode_closeItemLayout 2
+int styleable ActionMode_height 3
+int styleable ActionMode_subtitleTextStyle 4
+int styleable ActionMode_titleTextStyle 5
+int[] styleable ActivityChooserView { 0x0, 0x0 }
+int styleable ActivityChooserView_expandActivityOverflowButtonDrawable 0
+int styleable ActivityChooserView_initialActivityCount 1
+int[] styleable AlertDialog { 0x10100f2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AlertDialog_android_layout 0
+int styleable AlertDialog_buttonIconDimen 1
+int styleable AlertDialog_buttonPanelSideLayout 2
+int styleable AlertDialog_listItemLayout 3
+int styleable AlertDialog_listLayout 4
+int styleable AlertDialog_multiChoiceItemLayout 5
+int styleable AlertDialog_showTitle 6
+int styleable AlertDialog_singleChoiceItemLayout 7
+int[] styleable AnimatedStateListDrawableCompat { 0x1010196, 0x101011c, 0x101030c, 0x101030d, 0x1010195, 0x1010194 }
+int styleable AnimatedStateListDrawableCompat_android_constantSize 0
+int styleable AnimatedStateListDrawableCompat_android_dither 1
+int styleable AnimatedStateListDrawableCompat_android_enterFadeDuration 2
+int styleable AnimatedStateListDrawableCompat_android_exitFadeDuration 3
+int styleable AnimatedStateListDrawableCompat_android_variablePadding 4
+int styleable AnimatedStateListDrawableCompat_android_visible 5
+int[] styleable AnimatedStateListDrawableItem { 0x1010199, 0x10100d0 }
+int styleable AnimatedStateListDrawableItem_android_drawable 0
+int styleable AnimatedStateListDrawableItem_android_id 1
+int[] styleable AnimatedStateListDrawableTransition { 0x1010199, 0x101044a, 0x101044b, 0x1010449 }
+int styleable AnimatedStateListDrawableTransition_android_drawable 0
+int styleable AnimatedStateListDrawableTransition_android_fromId 1
+int styleable AnimatedStateListDrawableTransition_android_reversible 2
+int styleable AnimatedStateListDrawableTransition_android_toId 3
+int[] styleable AppCompatEmojiHelper {  }
+int[] styleable AppCompatImageView { 0x1010119, 0x0, 0x0, 0x0 }
+int styleable AppCompatImageView_android_src 0
+int styleable AppCompatImageView_srcCompat 1
+int styleable AppCompatImageView_tint 2
+int styleable AppCompatImageView_tintMode 3
+int[] styleable AppCompatSeekBar { 0x1010142, 0x0, 0x0, 0x0 }
+int styleable AppCompatSeekBar_android_thumb 0
+int styleable AppCompatSeekBar_tickMark 1
+int styleable AppCompatSeekBar_tickMarkTint 2
+int styleable AppCompatSeekBar_tickMarkTintMode 3
+int[] styleable AppCompatTextHelper { 0x101016e, 0x1010393, 0x101016f, 0x1010170, 0x1010392, 0x101016d, 0x1010034 }
+int styleable AppCompatTextHelper_android_drawableBottom 0
+int styleable AppCompatTextHelper_android_drawableEnd 1
+int styleable AppCompatTextHelper_android_drawableLeft 2
+int styleable AppCompatTextHelper_android_drawableRight 3
+int styleable AppCompatTextHelper_android_drawableStart 4
+int styleable AppCompatTextHelper_android_drawableTop 5
+int styleable AppCompatTextHelper_android_textAppearance 6
+int[] styleable AppCompatTextView { 0x1010034, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AppCompatTextView_android_textAppearance 0
+int styleable AppCompatTextView_autoSizeMaxTextSize 1
+int styleable AppCompatTextView_autoSizeMinTextSize 2
+int styleable AppCompatTextView_autoSizePresetSizes 3
+int styleable AppCompatTextView_autoSizeStepGranularity 4
+int styleable AppCompatTextView_autoSizeTextType 5
+int styleable AppCompatTextView_drawableBottomCompat 6
+int styleable AppCompatTextView_drawableEndCompat 7
+int styleable AppCompatTextView_drawableLeftCompat 8
+int styleable AppCompatTextView_drawableRightCompat 9
+int styleable AppCompatTextView_drawableStartCompat 10
+int styleable AppCompatTextView_drawableTint 11
+int styleable AppCompatTextView_drawableTintMode 12
+int styleable AppCompatTextView_drawableTopCompat 13
+int styleable AppCompatTextView_emojiCompatEnabled 14
+int styleable AppCompatTextView_firstBaselineToTopHeight 15
+int styleable AppCompatTextView_fontFamily 16
+int styleable AppCompatTextView_fontVariationSettings 17
+int styleable AppCompatTextView_lastBaselineToBottomHeight 18
+int styleable AppCompatTextView_lineHeight 19
+int styleable AppCompatTextView_textAllCaps 20
+int styleable AppCompatTextView_textLocale 21
+int[] styleable AppCompatTheme { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10100ae, 0x1010057, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable AppCompatTheme_actionBarDivider 0
+int styleable AppCompatTheme_actionBarItemBackground 1
+int styleable AppCompatTheme_actionBarPopupTheme 2
+int styleable AppCompatTheme_actionBarSize 3
+int styleable AppCompatTheme_actionBarSplitStyle 4
+int styleable AppCompatTheme_actionBarStyle 5
+int styleable AppCompatTheme_actionBarTabBarStyle 6
+int styleable AppCompatTheme_actionBarTabStyle 7
+int styleable AppCompatTheme_actionBarTabTextStyle 8
+int styleable AppCompatTheme_actionBarTheme 9
+int styleable AppCompatTheme_actionBarWidgetTheme 10
+int styleable AppCompatTheme_actionButtonStyle 11
+int styleable AppCompatTheme_actionDropDownStyle 12
+int styleable AppCompatTheme_actionMenuTextAppearance 13
+int styleable AppCompatTheme_actionMenuTextColor 14
+int styleable AppCompatTheme_actionModeBackground 15
+int styleable AppCompatTheme_actionModeCloseButtonStyle 16
+int styleable AppCompatTheme_actionModeCloseContentDescription 17
+int styleable AppCompatTheme_actionModeCloseDrawable 18
+int styleable AppCompatTheme_actionModeCopyDrawable 19
+int styleable AppCompatTheme_actionModeCutDrawable 20
+int styleable AppCompatTheme_actionModeFindDrawable 21
+int styleable AppCompatTheme_actionModePasteDrawable 22
+int styleable AppCompatTheme_actionModePopupWindowStyle 23
+int styleable AppCompatTheme_actionModeSelectAllDrawable 24
+int styleable AppCompatTheme_actionModeShareDrawable 25
+int styleable AppCompatTheme_actionModeSplitBackground 26
+int styleable AppCompatTheme_actionModeStyle 27
+int styleable AppCompatTheme_actionModeTheme 28
+int styleable AppCompatTheme_actionModeWebSearchDrawable 29
+int styleable AppCompatTheme_actionOverflowButtonStyle 30
+int styleable AppCompatTheme_actionOverflowMenuStyle 31
+int styleable AppCompatTheme_activityChooserViewStyle 32
+int styleable AppCompatTheme_alertDialogButtonGroupStyle 33
+int styleable AppCompatTheme_alertDialogCenterButtons 34
+int styleable AppCompatTheme_alertDialogStyle 35
+int styleable AppCompatTheme_alertDialogTheme 36
+int styleable AppCompatTheme_android_windowAnimationStyle 37
+int styleable AppCompatTheme_android_windowIsFloating 38
+int styleable AppCompatTheme_autoCompleteTextViewStyle 39
+int styleable AppCompatTheme_borderlessButtonStyle 40
+int styleable AppCompatTheme_buttonBarButtonStyle 41
+int styleable AppCompatTheme_buttonBarNegativeButtonStyle 42
+int styleable AppCompatTheme_buttonBarNeutralButtonStyle 43
+int styleable AppCompatTheme_buttonBarPositiveButtonStyle 44
+int styleable AppCompatTheme_buttonBarStyle 45
+int styleable AppCompatTheme_buttonStyle 46
+int styleable AppCompatTheme_buttonStyleSmall 47
+int styleable AppCompatTheme_checkboxStyle 48
+int styleable AppCompatTheme_checkedTextViewStyle 49
+int styleable AppCompatTheme_colorAccent 50
+int styleable AppCompatTheme_colorBackgroundFloating 51
+int styleable AppCompatTheme_colorButtonNormal 52
+int styleable AppCompatTheme_colorControlActivated 53
+int styleable AppCompatTheme_colorControlHighlight 54
+int styleable AppCompatTheme_colorControlNormal 55
+int styleable AppCompatTheme_colorError 56
+int styleable AppCompatTheme_colorPrimary 57
+int styleable AppCompatTheme_colorPrimaryDark 58
+int styleable AppCompatTheme_colorSwitchThumbNormal 59
+int styleable AppCompatTheme_controlBackground 60
+int styleable AppCompatTheme_dialogCornerRadius 61
+int styleable AppCompatTheme_dialogPreferredPadding 62
+int styleable AppCompatTheme_dialogTheme 63
+int styleable AppCompatTheme_dividerHorizontal 64
+int styleable AppCompatTheme_dividerVertical 65
+int styleable AppCompatTheme_dropDownListViewStyle 66
+int styleable AppCompatTheme_dropdownListPreferredItemHeight 67
+int styleable AppCompatTheme_editTextBackground 68
+int styleable AppCompatTheme_editTextColor 69
+int styleable AppCompatTheme_editTextStyle 70
+int styleable AppCompatTheme_homeAsUpIndicator 71
+int styleable AppCompatTheme_imageButtonStyle 72
+int styleable AppCompatTheme_listChoiceBackgroundIndicator 73
+int styleable AppCompatTheme_listChoiceIndicatorMultipleAnimated 74
+int styleable AppCompatTheme_listChoiceIndicatorSingleAnimated 75
+int styleable AppCompatTheme_listDividerAlertDialog 76
+int styleable AppCompatTheme_listMenuViewStyle 77
+int styleable AppCompatTheme_listPopupWindowStyle 78
+int styleable AppCompatTheme_listPreferredItemHeight 79
+int styleable AppCompatTheme_listPreferredItemHeightLarge 80
+int styleable AppCompatTheme_listPreferredItemHeightSmall 81
+int styleable AppCompatTheme_listPreferredItemPaddingEnd 82
+int styleable AppCompatTheme_listPreferredItemPaddingLeft 83
+int styleable AppCompatTheme_listPreferredItemPaddingRight 84
+int styleable AppCompatTheme_listPreferredItemPaddingStart 85
+int styleable AppCompatTheme_panelBackground 86
+int styleable AppCompatTheme_panelMenuListTheme 87
+int styleable AppCompatTheme_panelMenuListWidth 88
+int styleable AppCompatTheme_popupMenuStyle 89
+int styleable AppCompatTheme_popupWindowStyle 90
+int styleable AppCompatTheme_radioButtonStyle 91
+int styleable AppCompatTheme_ratingBarStyle 92
+int styleable AppCompatTheme_ratingBarStyleIndicator 93
+int styleable AppCompatTheme_ratingBarStyleSmall 94
+int styleable AppCompatTheme_searchViewStyle 95
+int styleable AppCompatTheme_seekBarStyle 96
+int styleable AppCompatTheme_selectableItemBackground 97
+int styleable AppCompatTheme_selectableItemBackgroundBorderless 98
+int styleable AppCompatTheme_spinnerDropDownItemStyle 99
+int styleable AppCompatTheme_spinnerStyle 100
+int styleable AppCompatTheme_switchStyle 101
+int styleable AppCompatTheme_textAppearanceLargePopupMenu 102
+int styleable AppCompatTheme_textAppearanceListItem 103
+int styleable AppCompatTheme_textAppearanceListItemSecondary 104
+int styleable AppCompatTheme_textAppearanceListItemSmall 105
+int styleable AppCompatTheme_textAppearancePopupMenuHeader 106
+int styleable AppCompatTheme_textAppearanceSearchResultSubtitle 107
+int styleable AppCompatTheme_textAppearanceSearchResultTitle 108
+int styleable AppCompatTheme_textAppearanceSmallPopupMenu 109
+int styleable AppCompatTheme_textColorAlertDialogListItem 110
+int styleable AppCompatTheme_textColorSearchUrl 111
+int styleable AppCompatTheme_toolbarNavigationButtonStyle 112
+int styleable AppCompatTheme_toolbarStyle 113
+int styleable AppCompatTheme_tooltipForegroundColor 114
+int styleable AppCompatTheme_tooltipFrameBackground 115
+int styleable AppCompatTheme_viewInflaterClass 116
+int styleable AppCompatTheme_windowActionBar 117
+int styleable AppCompatTheme_windowActionBarOverlay 118
+int styleable AppCompatTheme_windowActionModeOverlay 119
+int styleable AppCompatTheme_windowFixedHeightMajor 120
+int styleable AppCompatTheme_windowFixedHeightMinor 121
+int styleable AppCompatTheme_windowFixedWidthMajor 122
+int styleable AppCompatTheme_windowFixedWidthMinor 123
+int styleable AppCompatTheme_windowMinWidthMajor 124
+int styleable AppCompatTheme_windowMinWidthMinor 125
+int styleable AppCompatTheme_windowNoTitle 126
+int[] styleable Autofill_InlineSuggestion { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionChip 0
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionEndIconStyle 1
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionStartIconStyle 2
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionSubtitle 3
+int styleable Autofill_InlineSuggestion_autofillInlineSuggestionTitle 4
+int styleable Autofill_InlineSuggestion_isAutofillInlineSuggestionTheme 5
+int[] styleable ButtonBarLayout { 0x0 }
+int styleable ButtonBarLayout_allowStacking 0
+int[] styleable Capability { 0x0, 0x0 }
+int styleable Capability_queryPatterns 0
+int styleable Capability_shortcutMatchRequired 1
+int[] styleable CheckedTextView { 0x1010108, 0x0, 0x0, 0x0 }
+int styleable CheckedTextView_android_checkMark 0
+int styleable CheckedTextView_checkMarkCompat 1
+int styleable CheckedTextView_checkMarkTint 2
+int styleable CheckedTextView_checkMarkTintMode 3
+int[] styleable ColorStateListItem { 0x0, 0x101031f, 0x10101a5, 0x1010647, 0x0 }
+int styleable ColorStateListItem_alpha 0
+int styleable ColorStateListItem_android_alpha 1
+int styleable ColorStateListItem_android_color 2
+int styleable ColorStateListItem_android_lStar 3
+int styleable ColorStateListItem_lStar 4
+int[] styleable CompoundButton { 0x1010107, 0x0, 0x0, 0x0 }
+int styleable CompoundButton_android_button 0
+int styleable CompoundButton_buttonCompat 1
+int styleable CompoundButton_buttonTint 2
+int styleable CompoundButton_buttonTintMode 3
+int[] styleable DrawerArrowToggle { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable DrawerArrowToggle_arrowHeadLength 0
+int styleable DrawerArrowToggle_arrowShaftLength 1
+int styleable DrawerArrowToggle_barLength 2
+int styleable DrawerArrowToggle_color 3
+int styleable DrawerArrowToggle_drawableSize 4
+int styleable DrawerArrowToggle_gapBetweenBars 5
+int styleable DrawerArrowToggle_spinBars 6
+int styleable DrawerArrowToggle_thickness 7
+int[] styleable FontFamily { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable FontFamily_fontProviderAuthority 0
+int styleable FontFamily_fontProviderCerts 1
+int styleable FontFamily_fontProviderFetchStrategy 2
+int styleable FontFamily_fontProviderFetchTimeout 3
+int styleable FontFamily_fontProviderPackage 4
+int styleable FontFamily_fontProviderQuery 5
+int styleable FontFamily_fontProviderSystemFontFamily 6
+int[] styleable FontFamilyFont { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable FontFamilyFont_android_font 0
+int styleable FontFamilyFont_android_fontStyle 1
+int styleable FontFamilyFont_android_fontVariationSettings 2
+int styleable FontFamilyFont_android_fontWeight 3
+int styleable FontFamilyFont_android_ttcIndex 4
+int styleable FontFamilyFont_font 5
+int styleable FontFamilyFont_fontStyle 6
+int styleable FontFamilyFont_fontVariationSettings 7
+int styleable FontFamilyFont_fontWeight 8
+int styleable FontFamilyFont_ttcIndex 9
+int[] styleable Fragment { 0x10100d0, 0x1010003, 0x10100d1 }
+int styleable Fragment_android_id 0
+int styleable Fragment_android_name 1
+int styleable Fragment_android_tag 2
+int[] styleable FragmentContainerView { 0x1010003, 0x10100d1 }
+int styleable FragmentContainerView_android_name 0
+int styleable FragmentContainerView_android_tag 1
+int[] styleable GenericDraweeHierarchy { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable GenericDraweeHierarchy_actualImageScaleType 0
+int styleable GenericDraweeHierarchy_backgroundImage 1
+int styleable GenericDraweeHierarchy_fadeDuration 2
+int styleable GenericDraweeHierarchy_failureImage 3
+int styleable GenericDraweeHierarchy_failureImageScaleType 4
+int styleable GenericDraweeHierarchy_overlayImage 5
+int styleable GenericDraweeHierarchy_placeholderImage 6
+int styleable GenericDraweeHierarchy_placeholderImageScaleType 7
+int styleable GenericDraweeHierarchy_pressedStateOverlayImage 8
+int styleable GenericDraweeHierarchy_progressBarAutoRotateInterval 9
+int styleable GenericDraweeHierarchy_progressBarImage 10
+int styleable GenericDraweeHierarchy_progressBarImageScaleType 11
+int styleable GenericDraweeHierarchy_retryImage 12
+int styleable GenericDraweeHierarchy_retryImageScaleType 13
+int styleable GenericDraweeHierarchy_roundAsCircle 14
+int styleable GenericDraweeHierarchy_roundBottomEnd 15
+int styleable GenericDraweeHierarchy_roundBottomLeft 16
+int styleable GenericDraweeHierarchy_roundBottomRight 17
+int styleable GenericDraweeHierarchy_roundBottomStart 18
+int styleable GenericDraweeHierarchy_roundTopEnd 19
+int styleable GenericDraweeHierarchy_roundTopLeft 20
+int styleable GenericDraweeHierarchy_roundTopRight 21
+int styleable GenericDraweeHierarchy_roundTopStart 22
+int styleable GenericDraweeHierarchy_roundWithOverlayColor 23
+int styleable GenericDraweeHierarchy_roundedCornerRadius 24
+int styleable GenericDraweeHierarchy_roundingBorderColor 25
+int styleable GenericDraweeHierarchy_roundingBorderPadding 26
+int styleable GenericDraweeHierarchy_roundingBorderWidth 27
+int styleable GenericDraweeHierarchy_viewAspectRatio 28
+int[] styleable GradientColor { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 }
+int styleable GradientColor_android_centerColor 0
+int styleable GradientColor_android_centerX 1
+int styleable GradientColor_android_centerY 2
+int styleable GradientColor_android_endColor 3
+int styleable GradientColor_android_endX 4
+int styleable GradientColor_android_endY 5
+int styleable GradientColor_android_gradientRadius 6
+int styleable GradientColor_android_startColor 7
+int styleable GradientColor_android_startX 8
+int styleable GradientColor_android_startY 9
+int styleable GradientColor_android_tileMode 10
+int styleable GradientColor_android_type 11
+int[] styleable GradientColorItem { 0x10101a5, 0x1010514 }
+int styleable GradientColorItem_android_color 0
+int styleable GradientColorItem_android_offset 1
+int[] styleable LinearLayoutCompat { 0x1010126, 0x1010127, 0x10100af, 0x10100c4, 0x1010128, 0x0, 0x0, 0x0, 0x0 }
+int styleable LinearLayoutCompat_android_baselineAligned 0
+int styleable LinearLayoutCompat_android_baselineAlignedChildIndex 1
+int styleable LinearLayoutCompat_android_gravity 2
+int styleable LinearLayoutCompat_android_orientation 3
+int styleable LinearLayoutCompat_android_weightSum 4
+int styleable LinearLayoutCompat_divider 5
+int styleable LinearLayoutCompat_dividerPadding 6
+int styleable LinearLayoutCompat_measureWithLargestChild 7
+int styleable LinearLayoutCompat_showDividers 8
+int[] styleable LinearLayoutCompat_Layout { 0x10100b3, 0x10100f5, 0x1010181, 0x10100f4 }
+int styleable LinearLayoutCompat_Layout_android_layout_gravity 0
+int styleable LinearLayoutCompat_Layout_android_layout_height 1
+int styleable LinearLayoutCompat_Layout_android_layout_weight 2
+int styleable LinearLayoutCompat_Layout_android_layout_width 3
+int[] styleable ListPopupWindow { 0x10102ac, 0x10102ad }
+int styleable ListPopupWindow_android_dropDownHorizontalOffset 0
+int styleable ListPopupWindow_android_dropDownVerticalOffset 1
+int[] styleable LoadingImageView { 0x0, 0x0, 0x0 }
+int styleable LoadingImageView_circleCrop 0
+int styleable LoadingImageView_imageAspectRatio 1
+int styleable LoadingImageView_imageAspectRatioAdjust 2
+int[] styleable MapAttrs { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable MapAttrs_ambientEnabled 0
+int styleable MapAttrs_backgroundColor 1
+int styleable MapAttrs_cameraBearing 2
+int styleable MapAttrs_cameraMaxZoomPreference 3
+int styleable MapAttrs_cameraMinZoomPreference 4
+int styleable MapAttrs_cameraTargetLat 5
+int styleable MapAttrs_cameraTargetLng 6
+int styleable MapAttrs_cameraTilt 7
+int styleable MapAttrs_cameraZoom 8
+int styleable MapAttrs_latLngBoundsNorthEastLatitude 9
+int styleable MapAttrs_latLngBoundsNorthEastLongitude 10
+int styleable MapAttrs_latLngBoundsSouthWestLatitude 11
+int styleable MapAttrs_latLngBoundsSouthWestLongitude 12
+int styleable MapAttrs_liteMode 13
+int styleable MapAttrs_mapId 14
+int styleable MapAttrs_mapType 15
+int styleable MapAttrs_uiCompass 16
+int styleable MapAttrs_uiMapToolbar 17
+int styleable MapAttrs_uiRotateGestures 18
+int styleable MapAttrs_uiScrollGestures 19
+int styleable MapAttrs_uiScrollGesturesDuringRotateOrZoom 20
+int styleable MapAttrs_uiTiltGestures 21
+int styleable MapAttrs_uiZoomControls 22
+int styleable MapAttrs_uiZoomGestures 23
+int styleable MapAttrs_useViewLifecycle 24
+int styleable MapAttrs_zOrderOnTop 25
+int[] styleable MenuGroup { 0x10101e0, 0x101000e, 0x10100d0, 0x10101de, 0x10101df, 0x1010194 }
+int styleable MenuGroup_android_checkableBehavior 0
+int styleable MenuGroup_android_enabled 1
+int styleable MenuGroup_android_id 2
+int styleable MenuGroup_android_menuCategory 3
+int styleable MenuGroup_android_orderInCategory 4
+int styleable MenuGroup_android_visible 5
+int[] styleable MenuItem { 0x0, 0x0, 0x0, 0x0, 0x10101e3, 0x10101e5, 0x1010106, 0x101000e, 0x1010002, 0x10100d0, 0x10101de, 0x10101e4, 0x101026f, 0x10101df, 0x10101e1, 0x10101e2, 0x1010194, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable MenuItem_actionLayout 0
+int styleable MenuItem_actionProviderClass 1
+int styleable MenuItem_actionViewClass 2
+int styleable MenuItem_alphabeticModifiers 3
+int styleable MenuItem_android_alphabeticShortcut 4
+int styleable MenuItem_android_checkable 5
+int styleable MenuItem_android_checked 6
+int styleable MenuItem_android_enabled 7
+int styleable MenuItem_android_icon 8
+int styleable MenuItem_android_id 9
+int styleable MenuItem_android_menuCategory 10
+int styleable MenuItem_android_numericShortcut 11
+int styleable MenuItem_android_onClick 12
+int styleable MenuItem_android_orderInCategory 13
+int styleable MenuItem_android_title 14
+int styleable MenuItem_android_titleCondensed 15
+int styleable MenuItem_android_visible 16
+int styleable MenuItem_contentDescription 17
+int styleable MenuItem_iconTint 18
+int styleable MenuItem_iconTintMode 19
+int styleable MenuItem_numericModifiers 20
+int styleable MenuItem_showAsAction 21
+int styleable MenuItem_tooltipText 22
+int[] styleable MenuView { 0x101012f, 0x101012d, 0x1010130, 0x1010131, 0x101012c, 0x101012e, 0x10100ae, 0x0, 0x0 }
+int styleable MenuView_android_headerBackground 0
+int styleable MenuView_android_horizontalDivider 1
+int styleable MenuView_android_itemBackground 2
+int styleable MenuView_android_itemIconDisabledAlpha 3
+int styleable MenuView_android_itemTextAppearance 4
+int styleable MenuView_android_verticalDivider 5
+int styleable MenuView_android_windowAnimationStyle 6
+int styleable MenuView_preserveIconSpacing 7
+int styleable MenuView_subMenuArrow 8
+int[] styleable PopupWindow { 0x10102c9, 0x1010176, 0x0 }
+int styleable PopupWindow_android_popupAnimationStyle 0
+int styleable PopupWindow_android_popupBackground 1
+int styleable PopupWindow_overlapAnchor 2
+int[] styleable PopupWindowBackgroundState { 0x0 }
+int styleable PopupWindowBackgroundState_state_above_anchor 0
+int[] styleable RecycleListView { 0x0, 0x0 }
+int styleable RecycleListView_paddingBottomNoButtons 0
+int styleable RecycleListView_paddingTopNoTitle 1
+int[] styleable SearchView { 0x10100da, 0x1010264, 0x1010220, 0x101011f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SearchView_android_focusable 0
+int styleable SearchView_android_imeOptions 1
+int styleable SearchView_android_inputType 2
+int styleable SearchView_android_maxWidth 3
+int styleable SearchView_closeIcon 4
+int styleable SearchView_commitIcon 5
+int styleable SearchView_defaultQueryHint 6
+int styleable SearchView_goIcon 7
+int styleable SearchView_iconifiedByDefault 8
+int styleable SearchView_layout 9
+int styleable SearchView_queryBackground 10
+int styleable SearchView_queryHint 11
+int styleable SearchView_searchHintIcon 12
+int styleable SearchView_searchIcon 13
+int styleable SearchView_submitBackground 14
+int styleable SearchView_suggestionRowLayout 15
+int styleable SearchView_voiceIcon 16
+int[] styleable SignInButton { 0x0, 0x0, 0x0 }
+int styleable SignInButton_buttonSize 0
+int styleable SignInButton_colorScheme 1
+int styleable SignInButton_scopeUris 2
+int[] styleable SimpleDraweeView { 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SimpleDraweeView_actualImageResource 0
+int styleable SimpleDraweeView_actualImageScaleType 1
+int styleable SimpleDraweeView_actualImageUri 2
+int styleable SimpleDraweeView_backgroundImage 3
+int styleable SimpleDraweeView_fadeDuration 4
+int styleable SimpleDraweeView_failureImage 5
+int styleable SimpleDraweeView_failureImageScaleType 6
+int styleable SimpleDraweeView_overlayImage 7
+int styleable SimpleDraweeView_placeholderImage 8
+int styleable SimpleDraweeView_placeholderImageScaleType 9
+int styleable SimpleDraweeView_pressedStateOverlayImage 10
+int styleable SimpleDraweeView_progressBarAutoRotateInterval 11
+int styleable SimpleDraweeView_progressBarImage 12
+int styleable SimpleDraweeView_progressBarImageScaleType 13
+int styleable SimpleDraweeView_retryImage 14
+int styleable SimpleDraweeView_retryImageScaleType 15
+int styleable SimpleDraweeView_roundAsCircle 16
+int styleable SimpleDraweeView_roundBottomEnd 17
+int styleable SimpleDraweeView_roundBottomLeft 18
+int styleable SimpleDraweeView_roundBottomRight 19
+int styleable SimpleDraweeView_roundBottomStart 20
+int styleable SimpleDraweeView_roundTopEnd 21
+int styleable SimpleDraweeView_roundTopLeft 22
+int styleable SimpleDraweeView_roundTopRight 23
+int styleable SimpleDraweeView_roundTopStart 24
+int styleable SimpleDraweeView_roundWithOverlayColor 25
+int styleable SimpleDraweeView_roundedCornerRadius 26
+int styleable SimpleDraweeView_roundingBorderColor 27
+int styleable SimpleDraweeView_roundingBorderPadding 28
+int styleable SimpleDraweeView_roundingBorderWidth 29
+int styleable SimpleDraweeView_viewAspectRatio 30
+int[] styleable Spinner { 0x1010262, 0x10100b2, 0x1010176, 0x101017b, 0x0 }
+int styleable Spinner_android_dropDownWidth 0
+int styleable Spinner_android_entries 1
+int styleable Spinner_android_popupBackground 2
+int styleable Spinner_android_prompt 3
+int styleable Spinner_popupTheme 4
+int[] styleable StateListDrawable { 0x1010196, 0x101011c, 0x101030c, 0x101030d, 0x1010195, 0x1010194 }
+int styleable StateListDrawable_android_constantSize 0
+int styleable StateListDrawable_android_dither 1
+int styleable StateListDrawable_android_enterFadeDuration 2
+int styleable StateListDrawable_android_exitFadeDuration 3
+int styleable StateListDrawable_android_variablePadding 4
+int styleable StateListDrawable_android_visible 5
+int[] styleable StateListDrawableItem { 0x1010199 }
+int styleable StateListDrawableItem_android_drawable 0
+int[] styleable SwitchCompat { 0x1010125, 0x1010124, 0x1010142, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable SwitchCompat_android_textOff 0
+int styleable SwitchCompat_android_textOn 1
+int styleable SwitchCompat_android_thumb 2
+int styleable SwitchCompat_showText 3
+int styleable SwitchCompat_splitTrack 4
+int styleable SwitchCompat_switchMinWidth 5
+int styleable SwitchCompat_switchPadding 6
+int styleable SwitchCompat_switchTextAppearance 7
+int styleable SwitchCompat_thumbTextPadding 8
+int styleable SwitchCompat_thumbTint 9
+int styleable SwitchCompat_thumbTintMode 10
+int styleable SwitchCompat_track 11
+int styleable SwitchCompat_trackTint 12
+int styleable SwitchCompat_trackTintMode 13
+int[] styleable TextAppearance { 0x10103ac, 0x1010161, 0x1010162, 0x1010163, 0x1010164, 0x1010098, 0x101009a, 0x101009b, 0x1010585, 0x1010095, 0x1010097, 0x1010096, 0x0, 0x0, 0x0, 0x0 }
+int styleable TextAppearance_android_fontFamily 0
+int styleable TextAppearance_android_shadowColor 1
+int styleable TextAppearance_android_shadowDx 2
+int styleable TextAppearance_android_shadowDy 3
+int styleable TextAppearance_android_shadowRadius 4
+int styleable TextAppearance_android_textColor 5
+int styleable TextAppearance_android_textColorHint 6
+int styleable TextAppearance_android_textColorLink 7
+int styleable TextAppearance_android_textFontWeight 8
+int styleable TextAppearance_android_textSize 9
+int styleable TextAppearance_android_textStyle 10
+int styleable TextAppearance_android_typeface 11
+int styleable TextAppearance_fontFamily 12
+int styleable TextAppearance_fontVariationSettings 13
+int styleable TextAppearance_textAllCaps 14
+int styleable TextAppearance_textLocale 15
+int[] styleable Toolbar { 0x10100af, 0x1010140, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 }
+int styleable Toolbar_android_gravity 0
+int styleable Toolbar_android_minHeight 1
+int styleable Toolbar_buttonGravity 2
+int styleable Toolbar_collapseContentDescription 3
+int styleable Toolbar_collapseIcon 4
+int styleable Toolbar_contentInsetEnd 5
+int styleable Toolbar_contentInsetEndWithActions 6
+int styleable Toolbar_contentInsetLeft 7
+int styleable Toolbar_contentInsetRight 8
+int styleable Toolbar_contentInsetStart 9
+int styleable Toolbar_contentInsetStartWithNavigation 10
+int styleable Toolbar_logo 11
+int styleable Toolbar_logoDescription 12
+int styleable Toolbar_maxButtonHeight 13
+int styleable Toolbar_menu 14
+int styleable Toolbar_navigationContentDescription 15
+int styleable Toolbar_navigationIcon 16
+int styleable Toolbar_popupTheme 17
+int styleable Toolbar_subtitle 18
+int styleable Toolbar_subtitleTextAppearance 19
+int styleable Toolbar_subtitleTextColor 20
+int styleable Toolbar_title 21
+int styleable Toolbar_titleMargin 22
+int styleable Toolbar_titleMarginBottom 23
+int styleable Toolbar_titleMarginEnd 24
+int styleable Toolbar_titleMarginStart 25
+int styleable Toolbar_titleMarginTop 26
+int styleable Toolbar_titleMargins 27
+int styleable Toolbar_titleTextAppearance 28
+int styleable Toolbar_titleTextColor 29
+int[] styleable View { 0x10100da, 0x1010000, 0x0, 0x0, 0x0 }
+int styleable View_android_focusable 0
+int styleable View_android_theme 1
+int styleable View_paddingEnd 2
+int styleable View_paddingStart 3
+int styleable View_theme 4
+int[] styleable ViewBackgroundHelper { 0x10100d4, 0x0, 0x0 }
+int styleable ViewBackgroundHelper_android_background 0
+int styleable ViewBackgroundHelper_backgroundTint 1
+int styleable ViewBackgroundHelper_backgroundTintMode 2
+int[] styleable ViewStubCompat { 0x10100d0, 0x10100f3, 0x10100f2 }
+int styleable ViewStubCompat_android_id 0
+int styleable ViewStubCompat_android_inflatedId 1
+int styleable ViewStubCompat_android_layout 2
+int xml rn_dev_preferences 0x0
diff --git a/node_modules/react-native-maps/android/build/intermediates/full_jar/release/full.jar b/node_modules/react-native-maps/android/build/intermediates/full_jar/release/full.jar
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties b/node_modules/react-native-maps/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
new file mode 100644
index 0000000..cd74540
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
@@ -0,0 +1 @@
+#Thu Aug 31 19:26:16 JST 2023
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml b/node_modules/react-native-maps/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
new file mode 100644
index 0000000..76baba1
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/res"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/generated/res/rs/debug"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/generated/res/resValues/debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/res"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/generated/res/rs/debug"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/generated/res/resValues/debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/debug/res"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml b/node_modules/react-native-maps/android/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml
new file mode 100644
index 0000000..c1d2b8d
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/mergeDebugJniLibFolders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/jniLibs"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/debug/jniLibs"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/mergeDebugShaders/merger.xml b/node_modules/react-native-maps/android/build/intermediates/incremental/mergeDebugShaders/merger.xml
new file mode 100644
index 0000000..61e8fa0
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/mergeDebugShaders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/shaders"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/debug/shaders"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml b/node_modules/react-native-maps/android/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml
new file mode 100644
index 0000000..474e646
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/mergeReleaseJniLibFolders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/android/app/src/main/jniLibs"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/android/app/src/debug/jniLibs"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/mergeReleaseShaders/merger.xml b/node_modules/react-native-maps/android/build/intermediates/incremental/mergeReleaseShaders/merger.xml
new file mode 100644
index 0000000..9d2348c
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/mergeReleaseShaders/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/android/app/src/main/shaders"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/android/app/src/debug/shaders"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/packageDebugAssets/merger.xml b/node_modules/react-native-maps/android/build/intermediates/incremental/packageDebugAssets/merger.xml
new file mode 100644
index 0000000..346171b
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/packageDebugAssets/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/assets"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/intermediates/shader_assets/debug/out"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/debug/assets"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/packageReleaseAssets/merger.xml b/node_modules/react-native-maps/android/build/intermediates/incremental/packageReleaseAssets/merger.xml
new file mode 100644
index 0000000..f7e674b
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/packageReleaseAssets/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet config="main" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/expo/android/src/main/assets"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/expo/android/build/intermediates/shader_assets/debug/out"/></dataSet><dataSet config="debug" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/expo/android/src/debug/assets"/></dataSet></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/release-mergeJavaRes/merge-state b/node_modules/react-native-maps/android/build/intermediates/incremental/release-mergeJavaRes/merge-state
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/release/packageReleaseResources/compile-file-map.properties b/node_modules/react-native-maps/android/build/intermediates/incremental/release/packageReleaseResources/compile-file-map.properties
new file mode 100644
index 0000000..d1291c5
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/release/packageReleaseResources/compile-file-map.properties
@@ -0,0 +1 @@
+#Tue Aug 22 15:00:56 JST 2023
diff --git a/node_modules/react-native-maps/android/build/intermediates/incremental/release/packageReleaseResources/merger.xml b/node_modules/react-native-maps/android/build/intermediates/incremental/release/packageReleaseResources/merger.xml
new file mode 100644
index 0000000..8278c3b
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/incremental/release/packageReleaseResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/res"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/generated/res/rs/release"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/generated/res/resValues/release"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/res"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/generated/res/rs/release"/><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/build/generated/res/resValues/release"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="release$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/release/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="release" generated-set="release$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/release/res"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/BufferPosition.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/BufferPosition.class
new file mode 100644
index 0000000..d19f1fc
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/BufferPosition.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Cache.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Cache.class
new file mode 100644
index 0000000..9c49e36
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Cache.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Compression.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Compression.class
new file mode 100644
index 0000000..372c1c5
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Compression.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Decompress.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Decompress.class
new file mode 100644
index 0000000..bae50d6
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Decompress.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/DecompressFunc.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/DecompressFunc.class
new file mode 100644
index 0000000..f0db361
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/DecompressFunc.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Entry.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Entry.class
new file mode 100644
index 0000000..ca23964
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Entry.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/EtagMismatch.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/EtagMismatch.class
new file mode 100644
index 0000000..4d64152
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/EtagMismatch.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/FetchSource.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/FetchSource.class
new file mode 100644
index 0000000..5851539
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/FetchSource.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Header.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Header.class
new file mode 100644
index 0000000..c3c89a9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Header.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/PMTiles.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/PMTiles.class
new file mode 100644
index 0000000..2a9e439
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/PMTiles.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/PMTilesUtils.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/PMTilesUtils.class
new file mode 100644
index 0000000..33925df
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/PMTilesUtils.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/RangeResponse.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/RangeResponse.class
new file mode 100644
index 0000000..6f3aa93
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/RangeResponse.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/RootDirData.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/RootDirData.class
new file mode 100644
index 0000000..4aa7a90
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/RootDirData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/SharedPromiseCache.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/SharedPromiseCache.class
new file mode 100644
index 0000000..1454a0a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/SharedPromiseCache.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/SharedPromiseCacheValue.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/SharedPromiseCacheValue.class
new file mode 100644
index 0000000..86a8584
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/SharedPromiseCacheValue.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Source.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Source.class
new file mode 100644
index 0000000..efd773a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/Source.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/TileType.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/TileType.class
new file mode 100644
index 0000000..f7b71d2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/PMTiles/TileType.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/LayoutStyle.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/LayoutStyle.class
new file mode 100644
index 0000000..b9d6520
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/LayoutStyle.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/PaintStyle.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/PaintStyle.class
new file mode 100644
index 0000000..898a0e9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/PaintStyle.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/StyleLayer.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/StyleLayer.class
new file mode 100644
index 0000000..7e4f8f0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/StyleLayer/StyleLayer.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/VectorTileStyleManager/VectorTileStyleManager$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/VectorTileStyleManager/VectorTileStyleManager$1.class
new file mode 100644
index 0000000..c5637e2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/VectorTileStyleManager/VectorTileStyleManager$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/VectorTileStyleManager/VectorTileStyleManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/VectorTileStyleManager/VectorTileStyleManager.class
new file mode 100644
index 0000000..ef017ac
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/VectorTileStyleManager/VectorTileStyleManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCallout.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCallout.class
new file mode 100644
index 0000000..b178a67
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCallout.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCalloutManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCalloutManager.class
new file mode 100644
index 0000000..409fcb3
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCalloutManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCircle.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCircle.class
new file mode 100644
index 0000000..8f29f08
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCircle.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCircleManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCircleManager.class
new file mode 100644
index 0000000..30afa05
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapCircleManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapFeature.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapFeature.class
new file mode 100644
index 0000000..16d0771
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapFeature.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.class
new file mode 100644
index 0000000..1b87606
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.class
new file mode 100644
index 0000000..98d05d7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline.class
new file mode 100644
index 0000000..e971ac8
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolyline.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolylineManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolylineManager.class
new file mode 100644
index 0000000..1a30597
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapGradientPolylineManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapHeatmap.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapHeatmap.class
new file mode 100644
index 0000000..fde046a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapHeatmap.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapHeatmapManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapHeatmapManager.class
new file mode 100644
index 0000000..362fd60
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapHeatmapManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLiteManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLiteManager.class
new file mode 100644
index 0000000..0c87f8e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLiteManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.class
new file mode 100644
index 0000000..d19f74f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTile.class
new file mode 100644
index 0000000..3bee429
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTileManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTileManager.class
new file mode 100644
index 0000000..ad0fdde
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapLocalTileManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapManager.class
new file mode 100644
index 0000000..9460c81
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker$1.class
new file mode 100644
index 0000000..acabb6e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker$2.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker$2.class
new file mode 100644
index 0000000..fd2a0b7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker$2.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker.class
new file mode 100644
index 0000000..25d473f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarker.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.class
new file mode 100644
index 0000000..bb0a228
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarkerManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarkerManager.class
new file mode 100644
index 0000000..73e9f76
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapMarkerManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$1$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$1$1.class
new file mode 100644
index 0000000..d097d5a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$1$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$1.class
new file mode 100644
index 0000000..1f8f73c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$2.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$2.class
new file mode 100644
index 0000000..136c5a4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$2.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$3.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$3.class
new file mode 100644
index 0000000..644484a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$3.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$4.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$4.class
new file mode 100644
index 0000000..532bf9f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$4.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$5.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$5.class
new file mode 100644
index 0000000..7720af9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$5.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$6.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$6.class
new file mode 100644
index 0000000..7ba797a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$6.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$7$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$7$1.class
new file mode 100644
index 0000000..85ea7fc
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$7$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$7.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$7.class
new file mode 100644
index 0000000..0b14a76
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule$7.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule.class
new file mode 100644
index 0000000..424d2dd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapModule.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapOverlay.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapOverlay.class
new file mode 100644
index 0000000..6b38e38
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapOverlay.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapOverlayManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapOverlayManager.class
new file mode 100644
index 0000000..fafbf55
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapOverlayManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTile.class
new file mode 100644
index 0000000..313d6cd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileManager.class
new file mode 100644
index 0000000..906250b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$FeatureData.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$FeatureData.class
new file mode 100644
index 0000000..78afb4e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$FeatureData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.class
new file mode 100644
index 0000000..60aff79
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.class
new file mode 100644
index 0000000..d740e2b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.class
new file mode 100644
index 0000000..6948d33
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.class
new file mode 100644
index 0000000..d600c92
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider.class
new file mode 100644
index 0000000..ce3233e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPMTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolygon.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolygon.class
new file mode 100644
index 0000000..898c7eb
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolygon.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolygonManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolygonManager.class
new file mode 100644
index 0000000..a98058f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolygonManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolyline.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolyline.class
new file mode 100644
index 0000000..d89a9ea
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolyline.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolylineManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolylineManager.class
new file mode 100644
index 0000000..d8e07af
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapPolylineManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.class
new file mode 100644
index 0000000..9808db0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapTileProvider.class
new file mode 100644
index 0000000..af1bb7a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapUrlTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapUrlTile.class
new file mode 100644
index 0000000..91abaf5
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapUrlTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapUrlTileManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapUrlTileManager.class
new file mode 100644
index 0000000..0908c3e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapUrlTileManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$1.class
new file mode 100644
index 0000000..1e0e4de
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$10.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$10.class
new file mode 100644
index 0000000..239b1a9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$10.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$11.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$11.class
new file mode 100644
index 0000000..c8d5f5e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$11.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$12.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$12.class
new file mode 100644
index 0000000..91b7141
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$12.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$13.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$13.class
new file mode 100644
index 0000000..464fc73
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$13.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$14.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$14.class
new file mode 100644
index 0000000..e500331
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$14.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$15.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$15.class
new file mode 100644
index 0000000..7e3c36e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$15.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$16.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$16.class
new file mode 100644
index 0000000..6204192
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$16.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$17.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$17.class
new file mode 100644
index 0000000..9eba700
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$17.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$2.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$2.class
new file mode 100644
index 0000000..5240b90
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$2.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$3.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$3.class
new file mode 100644
index 0000000..4f8fc3b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$3.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$4.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$4.class
new file mode 100644
index 0000000..2095ddc
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$4.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$5.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$5.class
new file mode 100644
index 0000000..88d84ce
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$5.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$6.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$6.class
new file mode 100644
index 0000000..2bc73d7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$6.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$7.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$7.class
new file mode 100644
index 0000000..fcb9be4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$7.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$8.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$8.class
new file mode 100644
index 0000000..f227790
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$8.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$9.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$9.class
new file mode 100644
index 0000000..f3c76f9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView$9.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView.class
new file mode 100644
index 0000000..074581d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapView.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.class
new file mode 100644
index 0000000..7c92cd4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.class
new file mode 100644
index 0000000..9f7b46f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile.class
new file mode 100644
index 0000000..e808286
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTileManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTileManager.class
new file mode 100644
index 0000000..286d8a4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/AirMapWMSTileManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/BuildConfig.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/BuildConfig.class
new file mode 100644
index 0000000..8ce2df4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/BuildConfig.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FileUtil.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FileUtil.class
new file mode 100644
index 0000000..2fdfadd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FileUtil.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource$1.class
new file mode 100644
index 0000000..8a6331d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource$2.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource$2.class
new file mode 100644
index 0000000..3cc20ab
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource$2.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource.class
new file mode 100644
index 0000000..d6a6d5b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/FusedLocationSource.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReadable.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReadable.class
new file mode 100644
index 0000000..8b1d3af
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReadable.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReader$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReader$1.class
new file mode 100644
index 0000000..e7bf859
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReader$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReader.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReader.class
new file mode 100644
index 0000000..6116969
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageReader.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageUtil.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageUtil.class
new file mode 100644
index 0000000..2f495e8
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ImageUtil.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/LatLngBoundsUtils.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/LatLngBoundsUtils.class
new file mode 100644
index 0000000..cf1775a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/LatLngBoundsUtils.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/MapsPackage.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/MapsPackage.class
new file mode 100644
index 0000000..5fb818f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/MapsPackage.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/RegionChangeEvent.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/RegionChangeEvent.class
new file mode 100644
index 0000000..8660ec9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/RegionChangeEvent.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/SizeReportingShadowNode.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/SizeReportingShadowNode.class
new file mode 100644
index 0000000..f1afeee
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/SizeReportingShadowNode.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewAttacherGroup.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewAttacherGroup.class
new file mode 100644
index 0000000..9f684b6
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewAttacherGroup.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewChangesTracker$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewChangesTracker$1.class
new file mode 100644
index 0000000..0601b71
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewChangesTracker$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewChangesTracker.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewChangesTracker.class
new file mode 100644
index 0000000..da72228
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/com/airbnb/android/react/maps/ViewChangesTracker.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$1.class
new file mode 100644
index 0000000..3199111
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$1.class
new file mode 100644
index 0000000..fcbfd1a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Builder.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Builder.class
new file mode 100644
index 0000000..2ca0dec
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Builder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature$1.class
new file mode 100644
index 0000000..6c2d0c0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature$Builder.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature$Builder.class
new file mode 100644
index 0000000..9ce3810
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature$Builder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature.class
new file mode 100644
index 0000000..a8d41f6
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Feature.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$FeatureOrBuilder.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$FeatureOrBuilder.class
new file mode 100644
index 0000000..028503a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$FeatureOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$GeomType$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$GeomType$1.class
new file mode 100644
index 0000000..15659f4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$GeomType$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$GeomType.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$GeomType.class
new file mode 100644
index 0000000..8697a0e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$GeomType.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer$1.class
new file mode 100644
index 0000000..110bfc0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer$Builder.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer$Builder.class
new file mode 100644
index 0000000..a7147fd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer$Builder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer.class
new file mode 100644
index 0000000..987e788
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Layer.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$LayerOrBuilder.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$LayerOrBuilder.class
new file mode 100644
index 0000000..0d574b7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$LayerOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value$1.class
new file mode 100644
index 0000000..6ca1319
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value$Builder.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value$Builder.class
new file mode 100644
index 0000000..3b22781
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value$Builder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value.class
new file mode 100644
index 0000000..a73ab6a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$Value.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$ValueOrBuilder.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$ValueOrBuilder.class
new file mode 100644
index 0000000..9ade1f9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile$ValueOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile.class
new file mode 100644
index 0000000..bca92fd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$Tile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$TileOrBuilder.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$TileOrBuilder.class
new file mode 100644
index 0000000..2fac2b9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile$TileOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile.class
new file mode 100644
index 0000000..0f17393
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/javac/debug/classes/vector_tile/VectorTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/BufferPosition.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/BufferPosition.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Cache.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Cache.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Compression.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Compression.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Decompress.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Decompress.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/DecompressFunc.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/DecompressFunc.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Entry.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Entry.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/EtagMismatch.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/EtagMismatch.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/FetchSource.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/FetchSource.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Header.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Header.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/PMTiles.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/PMTiles.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/PMTilesUtils.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/PMTilesUtils.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/RangeResponse.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/RangeResponse.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/RootDirData.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/RootDirData.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/SharedPromiseCache.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/SharedPromiseCache.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/SharedPromiseCacheValue.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/SharedPromiseCacheValue.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Source.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/Source.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/TileType.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/PMTiles/TileType.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapCallout.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapCallout.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapCalloutManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapCalloutManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapCircle.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapCircle.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapCircleManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapCircleManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapFeature.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapFeature.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapGradientPolyline.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapGradientPolyline.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapGradientPolylineManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapGradientPolylineManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapHeatmap.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapHeatmap.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapHeatmapManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapHeatmapManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapLiteManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapLiteManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapLocalTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapLocalTile.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapLocalTileManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapLocalTileManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarker$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarker$1.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarker$2.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarker$2.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarker.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarker.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarkerManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapMarkerManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$1$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$1$1.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$1.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$2.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$2.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$3.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$3.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$4.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$4.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$5.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$5.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$6.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$6.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$7$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$7$1.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$7.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule$7.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapModule.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapOverlay.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapOverlay.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapOverlayManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapOverlayManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPMTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPMTile.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPMTileManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPMTileManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPMTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPMTileProvider.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPolygon.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPolygon.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPolygonManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPolygonManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPolyline.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPolyline.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPolylineManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapPolylineManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapTileProvider.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapUrlTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapUrlTile.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapUrlTileManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapUrlTileManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$1.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$10.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$10.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$11.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$11.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$12.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$12.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$13.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$13.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$14.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$14.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$15.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$15.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$16.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$16.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$17.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$17.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$2.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$2.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$3.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$3.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$4.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$4.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$5.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$5.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$6.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$6.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$7.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$7.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$8.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$8.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$9.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView$9.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapView.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapWMSTile.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapWMSTile.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapWMSTileManager.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/AirMapWMSTileManager.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/BuildConfig.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/BuildConfig.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/FileUtil.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/FileUtil.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/FusedLocationSource$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/FusedLocationSource$1.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/FusedLocationSource$2.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/FusedLocationSource$2.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/FusedLocationSource.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/FusedLocationSource.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ImageReadable.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ImageReadable.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ImageReader$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ImageReader$1.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ImageReader.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ImageReader.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ImageUtil.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ImageUtil.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/LatLngBoundsUtils.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/LatLngBoundsUtils.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/MapsPackage.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/MapsPackage.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/RegionChangeEvent.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/RegionChangeEvent.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/SizeReportingShadowNode.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/SizeReportingShadowNode.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ViewAttacherGroup.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ViewAttacherGroup.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ViewChangesTracker$1.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ViewChangesTracker$1.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ViewChangesTracker.class b/node_modules/react-native-maps/android/build/intermediates/javac/release/classes/com/airbnb/android/react/maps/ViewChangesTracker.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/lint_model_metadata/release/lint-model-metadata.properties b/node_modules/react-native-maps/android/build/intermediates/lint_model_metadata/release/lint-model-metadata.properties
new file mode 100644
index 0000000..67f9873
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/lint_model_metadata/release/lint-model-metadata.properties
@@ -0,0 +1,2 @@
+mavenArtifactId=react-native-maps
+mavenGroupId=ecorismap
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/local_aar_for_lint/release/out.aar b/node_modules/react-native-maps/android/build/intermediates/local_aar_for_lint/release/out.aar
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/local_only_symbol_list/debug/R-def.txt b/node_modules/react-native-maps/android/build/intermediates/local_only_symbol_list/debug/R-def.txt
new file mode 100644
index 0000000..78ac5b8
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/local_only_symbol_list/debug/R-def.txt
@@ -0,0 +1,2 @@
+R_DEF: Internal format may change without notice
+local
diff --git a/node_modules/react-native-maps/android/build/intermediates/local_only_symbol_list/release/R-def.txt b/node_modules/react-native-maps/android/build/intermediates/local_only_symbol_list/release/R-def.txt
new file mode 100644
index 0000000..78ac5b8
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/local_only_symbol_list/release/R-def.txt
@@ -0,0 +1,2 @@
+R_DEF: Internal format may change without notice
+local
diff --git a/node_modules/react-native-maps/android/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt b/node_modules/react-native-maps/android/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt
new file mode 100644
index 0000000..4f08f4f
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt
@@ -0,0 +1,11 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.airbnb.android.react.maps" >
+4
+5    <uses-sdk
+6        android:minSdkVersion="21"
+6-->/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+7        android:targetSdkVersion="33" />
+7-->/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+8
+9</manifest>
diff --git a/node_modules/react-native-maps/android/build/intermediates/manifest_merge_blame_file/release/manifest-merger-blame-release-report.txt b/node_modules/react-native-maps/android/build/intermediates/manifest_merge_blame_file/release/manifest-merger-blame-release-report.txt
new file mode 100644
index 0000000..4f08f4f
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/manifest_merge_blame_file/release/manifest-merger-blame-release-report.txt
@@ -0,0 +1,11 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.airbnb.android.react.maps" >
+4
+5    <uses-sdk
+6        android:minSdkVersion="21"
+6-->/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+7        android:targetSdkVersion="33" />
+7-->/Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+8
+9</manifest>
diff --git a/node_modules/react-native-maps/android/build/intermediates/merged_java_res/release/feature-react-native-maps.jar b/node_modules/react-native-maps/android/build/intermediates/merged_java_res/release/feature-react-native-maps.jar
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/merged_manifest/debug/AndroidManifest.xml b/node_modules/react-native-maps/android/build/intermediates/merged_manifest/debug/AndroidManifest.xml
new file mode 100644
index 0000000..116aee6
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/merged_manifest/debug/AndroidManifest.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.airbnb.android.react.maps" >
+
+    <uses-sdk
+        android:minSdkVersion="21"
+        android:targetSdkVersion="33" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/merged_manifest/release/AndroidManifest.xml b/node_modules/react-native-maps/android/build/intermediates/merged_manifest/release/AndroidManifest.xml
new file mode 100644
index 0000000..116aee6
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/merged_manifest/release/AndroidManifest.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.airbnb.android.react.maps" >
+
+    <uses-sdk
+        android:minSdkVersion="21"
+        android:targetSdkVersion="33" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/navigation_json/debug/navigation.json b/node_modules/react-native-maps/android/build/intermediates/navigation_json/debug/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/navigation_json/debug/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/navigation_json/release/navigation.json b/node_modules/react-native-maps/android/build/intermediates/navigation_json/release/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/navigation_json/release/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/packaged_manifests/debug/output-metadata.json b/node_modules/react-native-maps/android/build/intermediates/packaged_manifests/debug/output-metadata.json
new file mode 100644
index 0000000..a7f4f07
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/packaged_manifests/debug/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "PACKAGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.airbnb.android.react.maps",
+  "variantName": "debug",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "../../merged_manifest/debug/AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/packaged_manifests/release/output-metadata.json b/node_modules/react-native-maps/android/build/intermediates/packaged_manifests/release/output-metadata.json
new file mode 100644
index 0000000..2e85ba9
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/packaged_manifests/release/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "PACKAGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.airbnb.android.react.maps",
+  "variantName": "release",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "../../merged_manifest/release/AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/BufferPosition.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/BufferPosition.class
new file mode 100644
index 0000000..92b7308
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/BufferPosition.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Cache.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Cache.class
new file mode 100644
index 0000000..58cf248
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Cache.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Compression.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Compression.class
new file mode 100644
index 0000000..1a0b22e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Compression.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Decompress.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Decompress.class
new file mode 100644
index 0000000..6a700b2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Decompress.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/DecompressFunc.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/DecompressFunc.class
new file mode 100644
index 0000000..c369470
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/DecompressFunc.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Entry.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Entry.class
new file mode 100644
index 0000000..8c32f6f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Entry.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/EtagMismatch.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/EtagMismatch.class
new file mode 100644
index 0000000..aac2720
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/EtagMismatch.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/FetchSource.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/FetchSource.class
new file mode 100644
index 0000000..b05432a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/FetchSource.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Header.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Header.class
new file mode 100644
index 0000000..5d397a4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Header.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/PMTiles.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/PMTiles.class
new file mode 100644
index 0000000..0a75596
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/PMTiles.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/PMTilesUtils.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/PMTilesUtils.class
new file mode 100644
index 0000000..6ec0624
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/PMTilesUtils.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/RangeResponse.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/RangeResponse.class
new file mode 100644
index 0000000..f17e6a3
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/RangeResponse.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/RootDirData.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/RootDirData.class
new file mode 100644
index 0000000..4d8a5ea
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/RootDirData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/SharedPromiseCache.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/SharedPromiseCache.class
new file mode 100644
index 0000000..fa37909
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/SharedPromiseCache.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/SharedPromiseCacheValue.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/SharedPromiseCacheValue.class
new file mode 100644
index 0000000..2572bc0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/SharedPromiseCacheValue.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Source.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Source.class
new file mode 100644
index 0000000..149dfb9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/Source.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/TileType.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/TileType.class
new file mode 100644
index 0000000..38b32af
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/PMTiles/TileType.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/LayoutStyle.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/LayoutStyle.class
new file mode 100644
index 0000000..b7dc2bf
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/LayoutStyle.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/PaintStyle.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/PaintStyle.class
new file mode 100644
index 0000000..72a42ba
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/PaintStyle.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/StyleLayer.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/StyleLayer.class
new file mode 100644
index 0000000..370521c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/StyleLayer/StyleLayer.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/VectorTileStyleManager/VectorTileStyleManager$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/VectorTileStyleManager/VectorTileStyleManager$1.class
new file mode 100644
index 0000000..cbaa627
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/VectorTileStyleManager/VectorTileStyleManager$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/VectorTileStyleManager/VectorTileStyleManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/VectorTileStyleManager/VectorTileStyleManager.class
new file mode 100644
index 0000000..56502e1
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/VectorTileStyleManager/VectorTileStyleManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCallout.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCallout.class
new file mode 100644
index 0000000..fd8933c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCallout.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCalloutManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCalloutManager.class
new file mode 100644
index 0000000..8f6b462
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCalloutManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCircle.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCircle.class
new file mode 100644
index 0000000..f4324d2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCircle.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCircleManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCircleManager.class
new file mode 100644
index 0000000..055810a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapCircleManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapFeature.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapFeature.class
new file mode 100644
index 0000000..b8d0011
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapFeature.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.class
new file mode 100644
index 0000000..6b6998f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$AirMapGradientPolylineProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.class
new file mode 100644
index 0000000..5503068
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline$MutPoint.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline.class
new file mode 100644
index 0000000..e9d6bd2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolyline.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolylineManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolylineManager.class
new file mode 100644
index 0000000..24d632a
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapGradientPolylineManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapHeatmap.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapHeatmap.class
new file mode 100644
index 0000000..31202c8
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapHeatmap.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapHeatmapManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapHeatmapManager.class
new file mode 100644
index 0000000..7d6d3fb
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapHeatmapManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLiteManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLiteManager.class
new file mode 100644
index 0000000..06d13f5
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLiteManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.class
new file mode 100644
index 0000000..79d1cc6
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTile$AIRMapLocalTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTile.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTile.class
new file mode 100644
index 0000000..3b764b9
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTileManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTileManager.class
new file mode 100644
index 0000000..3d47fdf
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapLocalTileManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapManager.class
new file mode 100644
index 0000000..8b17134
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker$1.class
new file mode 100644
index 0000000..78de9db
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker$2.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker$2.class
new file mode 100644
index 0000000..c37340b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker$2.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker.class
new file mode 100644
index 0000000..02efbcf
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarker.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.class
new file mode 100644
index 0000000..2e6b80f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarkerManager$AirMapMarkerSharedIcon.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarkerManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarkerManager.class
new file mode 100644
index 0000000..b26ed99
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapMarkerManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$1$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$1$1.class
new file mode 100644
index 0000000..f18e0c7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$1$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$1.class
new file mode 100644
index 0000000..019c3a3
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$2.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$2.class
new file mode 100644
index 0000000..9ea1eb4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$2.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$3.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$3.class
new file mode 100644
index 0000000..cf23bbe
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$3.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$4.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$4.class
new file mode 100644
index 0000000..6428883
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$4.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$5.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$5.class
new file mode 100644
index 0000000..89f7b37
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$5.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$6.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$6.class
new file mode 100644
index 0000000..2ac1bbd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$6.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$7$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$7$1.class
new file mode 100644
index 0000000..4428bef
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$7$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$7.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$7.class
new file mode 100644
index 0000000..2137dc8
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule$7.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule.class
new file mode 100644
index 0000000..f71d70d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapModule.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapOverlay.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapOverlay.class
new file mode 100644
index 0000000..34ebab7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapOverlay.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapOverlayManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapOverlayManager.class
new file mode 100644
index 0000000..4102dc5
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapOverlayManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTile.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTile.class
new file mode 100644
index 0000000..24db0e2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileManager.class
new file mode 100644
index 0000000..de26c4f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.class
new file mode 100644
index 0000000..ab142b5
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$LineData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.class
new file mode 100644
index 0000000..246caf4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PointData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.class
new file mode 100644
index 0000000..f6cc2c0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$PolygonData.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.class
new file mode 100644
index 0000000..f5d1cbd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider$VectorSource.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider.class
new file mode 100644
index 0000000..25ae770
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPMTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolygon.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolygon.class
new file mode 100644
index 0000000..69cd636
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolygon.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolygonManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolygonManager.class
new file mode 100644
index 0000000..cbb7ebe
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolygonManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolyline.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolyline.class
new file mode 100644
index 0000000..ee7cf0b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolyline.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolylineManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolylineManager.class
new file mode 100644
index 0000000..9f3f2fd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapPolylineManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.class
new file mode 100644
index 0000000..9521144
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapTileProvider$AIRMapUrlTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapTileProvider.class
new file mode 100644
index 0000000..f302541
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapUrlTile.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapUrlTile.class
new file mode 100644
index 0000000..97a60b4
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapUrlTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapUrlTileManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapUrlTileManager.class
new file mode 100644
index 0000000..aa5ed63
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapUrlTileManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$1.class
new file mode 100644
index 0000000..33be07c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$10.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$10.class
new file mode 100644
index 0000000..e9f1cd2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$10.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$11.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$11.class
new file mode 100644
index 0000000..e6b343f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$11.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$12.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$12.class
new file mode 100644
index 0000000..407a698
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$12.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$13.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$13.class
new file mode 100644
index 0000000..49ec3ad
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$13.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$14.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$14.class
new file mode 100644
index 0000000..0013835
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$14.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$15.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$15.class
new file mode 100644
index 0000000..8f27d70
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$15.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$16.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$16.class
new file mode 100644
index 0000000..6c2471f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$16.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$17.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$17.class
new file mode 100644
index 0000000..ae05557
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$17.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$2.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$2.class
new file mode 100644
index 0000000..7b9ab5c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$2.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$3.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$3.class
new file mode 100644
index 0000000..771eec3
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$3.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$4.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$4.class
new file mode 100644
index 0000000..e570b87
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$4.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$5.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$5.class
new file mode 100644
index 0000000..b0109f2
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$5.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$6.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$6.class
new file mode 100644
index 0000000..92cab55
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$6.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$7.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$7.class
new file mode 100644
index 0000000..4511f56
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$7.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$8.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$8.class
new file mode 100644
index 0000000..4e76d00
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$8.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$9.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$9.class
new file mode 100644
index 0000000..1eea175
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView$9.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView.class
new file mode 100644
index 0000000..136b18c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapView.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.class
new file mode 100644
index 0000000..c5ee55d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider$AIRMapWMSTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.class
new file mode 100644
index 0000000..7677b2c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile$AIRMapGSUrlTileProvider.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile.class
new file mode 100644
index 0000000..2effeca
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTileManager.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTileManager.class
new file mode 100644
index 0000000..c8024bb
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/AirMapWMSTileManager.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/BuildConfig.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/BuildConfig.class
new file mode 100644
index 0000000..66f7189
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/BuildConfig.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FileUtil.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FileUtil.class
new file mode 100644
index 0000000..028813b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FileUtil.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource$1.class
new file mode 100644
index 0000000..6987b49
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource$2.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource$2.class
new file mode 100644
index 0000000..7431ba6
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource$2.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource.class
new file mode 100644
index 0000000..8068231
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/FusedLocationSource.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReadable.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReadable.class
new file mode 100644
index 0000000..6c9194c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReadable.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReader$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReader$1.class
new file mode 100644
index 0000000..b31addf
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReader$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReader.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReader.class
new file mode 100644
index 0000000..1d6318f
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageReader.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageUtil.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageUtil.class
new file mode 100644
index 0000000..849f33d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ImageUtil.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/LatLngBoundsUtils.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/LatLngBoundsUtils.class
new file mode 100644
index 0000000..4acb857
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/LatLngBoundsUtils.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/MapsPackage.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/MapsPackage.class
new file mode 100644
index 0000000..4003a69
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/MapsPackage.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/RegionChangeEvent.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/RegionChangeEvent.class
new file mode 100644
index 0000000..325250c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/RegionChangeEvent.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/SizeReportingShadowNode.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/SizeReportingShadowNode.class
new file mode 100644
index 0000000..e10053e
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/SizeReportingShadowNode.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewAttacherGroup.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewAttacherGroup.class
new file mode 100644
index 0000000..3c9b69d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewAttacherGroup.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewChangesTracker$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewChangesTracker$1.class
new file mode 100644
index 0000000..307742d
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewChangesTracker$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewChangesTracker.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewChangesTracker.class
new file mode 100644
index 0000000..7072844
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/com/airbnb/android/react/maps/ViewChangesTracker.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$1.class
new file mode 100644
index 0000000..20e3908
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$1.class
new file mode 100644
index 0000000..5ab00a5
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Builder.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Builder.class
new file mode 100644
index 0000000..02ce041
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Builder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature$1.class
new file mode 100644
index 0000000..8d3dffe
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature$Builder.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature$Builder.class
new file mode 100644
index 0000000..5a566c6
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature$Builder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature.class
new file mode 100644
index 0000000..54300be
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Feature.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$FeatureOrBuilder.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$FeatureOrBuilder.class
new file mode 100644
index 0000000..b993502
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$FeatureOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$GeomType$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$GeomType$1.class
new file mode 100644
index 0000000..89aae2c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$GeomType$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$GeomType.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$GeomType.class
new file mode 100644
index 0000000..371d942
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$GeomType.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer$1.class
new file mode 100644
index 0000000..0953319
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer$Builder.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer$Builder.class
new file mode 100644
index 0000000..5dff369
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer$Builder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer.class
new file mode 100644
index 0000000..5fef2cc
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Layer.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$LayerOrBuilder.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$LayerOrBuilder.class
new file mode 100644
index 0000000..4127af7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$LayerOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value$1.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value$1.class
new file mode 100644
index 0000000..65651b6
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value$1.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value$Builder.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value$Builder.class
new file mode 100644
index 0000000..fe933f7
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value$Builder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value.class
new file mode 100644
index 0000000..1f7c70b
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$Value.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$ValueOrBuilder.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$ValueOrBuilder.class
new file mode 100644
index 0000000..bca25cd
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile$ValueOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile.class
new file mode 100644
index 0000000..dea15f0
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$Tile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$TileOrBuilder.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$TileOrBuilder.class
new file mode 100644
index 0000000..ba0fb27
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile$TileOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile.class b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile.class
new file mode 100644
index 0000000..a213f97
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_dir/debug/vector_tile/VectorTile.class differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_jar/debug/classes.jar b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_jar/debug/classes.jar
new file mode 100644
index 0000000..0beebb6
Binary files /dev/null and b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_jar/debug/classes.jar differ
diff --git a/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_jar/release/classes.jar b/node_modules/react-native-maps/android/build/intermediates/runtime_library_classes_jar/release/classes.jar
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/build/intermediates/symbol_list_with_package_name/debug/package-aware-r.txt b/node_modules/react-native-maps/android/build/intermediates/symbol_list_with_package_name/debug/package-aware-r.txt
new file mode 100644
index 0000000..22f1d37
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/symbol_list_with_package_name/debug/package-aware-r.txt
@@ -0,0 +1,1597 @@
+com.airbnb.android.react.maps
+anim abc_fade_in
+anim abc_fade_out
+anim abc_grow_fade_in_from_bottom
+anim abc_popup_enter
+anim abc_popup_exit
+anim abc_shrink_fade_out_from_bottom
+anim abc_slide_in_bottom
+anim abc_slide_in_top
+anim abc_slide_out_bottom
+anim abc_slide_out_top
+anim abc_tooltip_enter
+anim abc_tooltip_exit
+anim btn_checkbox_to_checked_box_inner_merged_animation
+anim btn_checkbox_to_checked_box_outer_merged_animation
+anim btn_checkbox_to_checked_icon_null_animation
+anim btn_checkbox_to_unchecked_box_inner_merged_animation
+anim btn_checkbox_to_unchecked_check_path_merged_animation
+anim btn_checkbox_to_unchecked_icon_null_animation
+anim btn_radio_to_off_mtrl_dot_group_animation
+anim btn_radio_to_off_mtrl_ring_outer_animation
+anim btn_radio_to_off_mtrl_ring_outer_path_animation
+anim btn_radio_to_on_mtrl_dot_group_animation
+anim btn_radio_to_on_mtrl_ring_outer_animation
+anim btn_radio_to_on_mtrl_ring_outer_path_animation
+anim catalyst_fade_in
+anim catalyst_fade_out
+anim catalyst_push_up_in
+anim catalyst_push_up_out
+anim catalyst_slide_down
+anim catalyst_slide_up
+anim fragment_fast_out_extra_slow_in
+animator fragment_close_enter
+animator fragment_close_exit
+animator fragment_fade_enter
+animator fragment_fade_exit
+animator fragment_open_enter
+animator fragment_open_exit
+attr actionBarDivider
+attr actionBarItemBackground
+attr actionBarPopupTheme
+attr actionBarSize
+attr actionBarSplitStyle
+attr actionBarStyle
+attr actionBarTabBarStyle
+attr actionBarTabStyle
+attr actionBarTabTextStyle
+attr actionBarTheme
+attr actionBarWidgetTheme
+attr actionButtonStyle
+attr actionDropDownStyle
+attr actionLayout
+attr actionMenuTextAppearance
+attr actionMenuTextColor
+attr actionModeBackground
+attr actionModeCloseButtonStyle
+attr actionModeCloseContentDescription
+attr actionModeCloseDrawable
+attr actionModeCopyDrawable
+attr actionModeCutDrawable
+attr actionModeFindDrawable
+attr actionModePasteDrawable
+attr actionModePopupWindowStyle
+attr actionModeSelectAllDrawable
+attr actionModeShareDrawable
+attr actionModeSplitBackground
+attr actionModeStyle
+attr actionModeTheme
+attr actionModeWebSearchDrawable
+attr actionOverflowButtonStyle
+attr actionOverflowMenuStyle
+attr actionProviderClass
+attr actionViewClass
+attr activityChooserViewStyle
+attr actualImageResource
+attr actualImageScaleType
+attr actualImageUri
+attr alertDialogButtonGroupStyle
+attr alertDialogCenterButtons
+attr alertDialogStyle
+attr alertDialogTheme
+attr allowStacking
+attr alpha
+attr alphabeticModifiers
+attr ambientEnabled
+attr arrowHeadLength
+attr arrowShaftLength
+attr autoCompleteTextViewStyle
+attr autoSizeMaxTextSize
+attr autoSizeMinTextSize
+attr autoSizePresetSizes
+attr autoSizeStepGranularity
+attr autoSizeTextType
+attr autofillInlineSuggestionChip
+attr autofillInlineSuggestionEndIconStyle
+attr autofillInlineSuggestionStartIconStyle
+attr autofillInlineSuggestionSubtitle
+attr autofillInlineSuggestionTitle
+attr background
+attr backgroundColor
+attr backgroundImage
+attr backgroundSplit
+attr backgroundStacked
+attr backgroundTint
+attr backgroundTintMode
+attr barLength
+attr borderlessButtonStyle
+attr buttonBarButtonStyle
+attr buttonBarNegativeButtonStyle
+attr buttonBarNeutralButtonStyle
+attr buttonBarPositiveButtonStyle
+attr buttonBarStyle
+attr buttonCompat
+attr buttonGravity
+attr buttonIconDimen
+attr buttonPanelSideLayout
+attr buttonSize
+attr buttonStyle
+attr buttonStyleSmall
+attr buttonTint
+attr buttonTintMode
+attr cameraBearing
+attr cameraMaxZoomPreference
+attr cameraMinZoomPreference
+attr cameraTargetLat
+attr cameraTargetLng
+attr cameraTilt
+attr cameraZoom
+attr checkMarkCompat
+attr checkMarkTint
+attr checkMarkTintMode
+attr checkboxStyle
+attr checkedTextViewStyle
+attr circleCrop
+attr closeIcon
+attr closeItemLayout
+attr collapseContentDescription
+attr collapseIcon
+attr color
+attr colorAccent
+attr colorBackgroundFloating
+attr colorButtonNormal
+attr colorControlActivated
+attr colorControlHighlight
+attr colorControlNormal
+attr colorError
+attr colorPrimary
+attr colorPrimaryDark
+attr colorScheme
+attr colorSwitchThumbNormal
+attr commitIcon
+attr contentDescription
+attr contentInsetEnd
+attr contentInsetEndWithActions
+attr contentInsetLeft
+attr contentInsetRight
+attr contentInsetStart
+attr contentInsetStartWithNavigation
+attr controlBackground
+attr customNavigationLayout
+attr defaultQueryHint
+attr dialogCornerRadius
+attr dialogPreferredPadding
+attr dialogTheme
+attr displayOptions
+attr divider
+attr dividerHorizontal
+attr dividerPadding
+attr dividerVertical
+attr drawableBottomCompat
+attr drawableEndCompat
+attr drawableLeftCompat
+attr drawableRightCompat
+attr drawableSize
+attr drawableStartCompat
+attr drawableTint
+attr drawableTintMode
+attr drawableTopCompat
+attr drawerArrowStyle
+attr dropDownListViewStyle
+attr dropdownListPreferredItemHeight
+attr editTextBackground
+attr editTextColor
+attr editTextStyle
+attr elevation
+attr emojiCompatEnabled
+attr expandActivityOverflowButtonDrawable
+attr fadeDuration
+attr failureImage
+attr failureImageScaleType
+attr firstBaselineToTopHeight
+attr font
+attr fontFamily
+attr fontProviderAuthority
+attr fontProviderCerts
+attr fontProviderFetchStrategy
+attr fontProviderFetchTimeout
+attr fontProviderPackage
+attr fontProviderQuery
+attr fontProviderSystemFontFamily
+attr fontStyle
+attr fontVariationSettings
+attr fontWeight
+attr gapBetweenBars
+attr goIcon
+attr height
+attr hideOnContentScroll
+attr homeAsUpIndicator
+attr homeLayout
+attr icon
+attr iconTint
+attr iconTintMode
+attr iconifiedByDefault
+attr imageAspectRatio
+attr imageAspectRatioAdjust
+attr imageButtonStyle
+attr indeterminateProgressStyle
+attr initialActivityCount
+attr isAutofillInlineSuggestionTheme
+attr isLightTheme
+attr itemPadding
+attr lStar
+attr lastBaselineToBottomHeight
+attr latLngBoundsNorthEastLatitude
+attr latLngBoundsNorthEastLongitude
+attr latLngBoundsSouthWestLatitude
+attr latLngBoundsSouthWestLongitude
+attr layout
+attr lineHeight
+attr listChoiceBackgroundIndicator
+attr listChoiceIndicatorMultipleAnimated
+attr listChoiceIndicatorSingleAnimated
+attr listDividerAlertDialog
+attr listItemLayout
+attr listLayout
+attr listMenuViewStyle
+attr listPopupWindowStyle
+attr listPreferredItemHeight
+attr listPreferredItemHeightLarge
+attr listPreferredItemHeightSmall
+attr listPreferredItemPaddingEnd
+attr listPreferredItemPaddingLeft
+attr listPreferredItemPaddingRight
+attr listPreferredItemPaddingStart
+attr liteMode
+attr logo
+attr logoDescription
+attr mapId
+attr mapType
+attr maxButtonHeight
+attr measureWithLargestChild
+attr menu
+attr multiChoiceItemLayout
+attr navigationContentDescription
+attr navigationIcon
+attr navigationMode
+attr nestedScrollViewStyle
+attr numericModifiers
+attr overlapAnchor
+attr overlayImage
+attr paddingBottomNoButtons
+attr paddingEnd
+attr paddingStart
+attr paddingTopNoTitle
+attr panelBackground
+attr panelMenuListTheme
+attr panelMenuListWidth
+attr placeholderImage
+attr placeholderImageScaleType
+attr popupMenuStyle
+attr popupTheme
+attr popupWindowStyle
+attr preserveIconSpacing
+attr pressedStateOverlayImage
+attr progressBarAutoRotateInterval
+attr progressBarImage
+attr progressBarImageScaleType
+attr progressBarPadding
+attr progressBarStyle
+attr queryBackground
+attr queryHint
+attr queryPatterns
+attr radioButtonStyle
+attr ratingBarStyle
+attr ratingBarStyleIndicator
+attr ratingBarStyleSmall
+attr retryImage
+attr retryImageScaleType
+attr roundAsCircle
+attr roundBottomEnd
+attr roundBottomLeft
+attr roundBottomRight
+attr roundBottomStart
+attr roundTopEnd
+attr roundTopLeft
+attr roundTopRight
+attr roundTopStart
+attr roundWithOverlayColor
+attr roundedCornerRadius
+attr roundingBorderColor
+attr roundingBorderPadding
+attr roundingBorderWidth
+attr scopeUris
+attr searchHintIcon
+attr searchIcon
+attr searchViewStyle
+attr seekBarStyle
+attr selectableItemBackground
+attr selectableItemBackgroundBorderless
+attr shortcutMatchRequired
+attr showAsAction
+attr showDividers
+attr showText
+attr showTitle
+attr singleChoiceItemLayout
+attr spinBars
+attr spinnerDropDownItemStyle
+attr spinnerStyle
+attr splitTrack
+attr srcCompat
+attr state_above_anchor
+attr subMenuArrow
+attr submitBackground
+attr subtitle
+attr subtitleTextAppearance
+attr subtitleTextColor
+attr subtitleTextStyle
+attr suggestionRowLayout
+attr switchMinWidth
+attr switchPadding
+attr switchStyle
+attr switchTextAppearance
+attr textAllCaps
+attr textAppearanceLargePopupMenu
+attr textAppearanceListItem
+attr textAppearanceListItemSecondary
+attr textAppearanceListItemSmall
+attr textAppearancePopupMenuHeader
+attr textAppearanceSearchResultSubtitle
+attr textAppearanceSearchResultTitle
+attr textAppearanceSmallPopupMenu
+attr textColorAlertDialogListItem
+attr textColorSearchUrl
+attr textLocale
+attr theme
+attr thickness
+attr thumbTextPadding
+attr thumbTint
+attr thumbTintMode
+attr tickMark
+attr tickMarkTint
+attr tickMarkTintMode
+attr tint
+attr tintMode
+attr title
+attr titleMargin
+attr titleMarginBottom
+attr titleMarginEnd
+attr titleMarginStart
+attr titleMarginTop
+attr titleMargins
+attr titleTextAppearance
+attr titleTextColor
+attr titleTextStyle
+attr toolbarNavigationButtonStyle
+attr toolbarStyle
+attr tooltipForegroundColor
+attr tooltipFrameBackground
+attr tooltipText
+attr track
+attr trackTint
+attr trackTintMode
+attr ttcIndex
+attr uiCompass
+attr uiMapToolbar
+attr uiRotateGestures
+attr uiScrollGestures
+attr uiScrollGesturesDuringRotateOrZoom
+attr uiTiltGestures
+attr uiZoomControls
+attr uiZoomGestures
+attr useViewLifecycle
+attr viewAspectRatio
+attr viewInflaterClass
+attr voiceIcon
+attr windowActionBar
+attr windowActionBarOverlay
+attr windowActionModeOverlay
+attr windowFixedHeightMajor
+attr windowFixedHeightMinor
+attr windowFixedWidthMajor
+attr windowFixedWidthMinor
+attr windowMinWidthMajor
+attr windowMinWidthMinor
+attr windowNoTitle
+attr zOrderOnTop
+bool abc_action_bar_embed_tabs
+bool abc_config_actionMenuItemAllCaps
+bool enable_system_alarm_service_default
+bool enable_system_foreground_service_default
+bool enable_system_job_service_default
+bool workmanager_test_configuration
+color abc_background_cache_hint_selector_material_dark
+color abc_background_cache_hint_selector_material_light
+color abc_btn_colored_borderless_text_material
+color abc_btn_colored_text_material
+color abc_color_highlight_material
+color abc_decor_view_status_guard
+color abc_decor_view_status_guard_light
+color abc_hint_foreground_material_dark
+color abc_hint_foreground_material_light
+color abc_primary_text_disable_only_material_dark
+color abc_primary_text_disable_only_material_light
+color abc_primary_text_material_dark
+color abc_primary_text_material_light
+color abc_search_url_text
+color abc_search_url_text_normal
+color abc_search_url_text_pressed
+color abc_search_url_text_selected
+color abc_secondary_text_material_dark
+color abc_secondary_text_material_light
+color abc_tint_btn_checkable
+color abc_tint_default
+color abc_tint_edittext
+color abc_tint_seek_thumb
+color abc_tint_spinner
+color abc_tint_switch_track
+color accent_material_dark
+color accent_material_light
+color androidx_core_ripple_material_light
+color androidx_core_secondary_text_default_material_light
+color background_floating_material_dark
+color background_floating_material_light
+color background_material_dark
+color background_material_light
+color bright_foreground_disabled_material_dark
+color bright_foreground_disabled_material_light
+color bright_foreground_inverse_material_dark
+color bright_foreground_inverse_material_light
+color bright_foreground_material_dark
+color bright_foreground_material_light
+color button_material_dark
+color button_material_light
+color catalyst_logbox_background
+color catalyst_redbox_background
+color common_google_signin_btn_text_dark
+color common_google_signin_btn_text_dark_default
+color common_google_signin_btn_text_dark_disabled
+color common_google_signin_btn_text_dark_focused
+color common_google_signin_btn_text_dark_pressed
+color common_google_signin_btn_text_light
+color common_google_signin_btn_text_light_default
+color common_google_signin_btn_text_light_disabled
+color common_google_signin_btn_text_light_focused
+color common_google_signin_btn_text_light_pressed
+color common_google_signin_btn_tint
+color dim_foreground_disabled_material_dark
+color dim_foreground_disabled_material_light
+color dim_foreground_material_dark
+color dim_foreground_material_light
+color error_color_material_dark
+color error_color_material_light
+color foreground_material_dark
+color foreground_material_light
+color highlighted_text_material_dark
+color highlighted_text_material_light
+color material_blue_grey_800
+color material_blue_grey_900
+color material_blue_grey_950
+color material_deep_teal_200
+color material_deep_teal_500
+color material_grey_100
+color material_grey_300
+color material_grey_50
+color material_grey_600
+color material_grey_800
+color material_grey_850
+color material_grey_900
+color notification_action_color_filter
+color notification_icon_bg_color
+color primary_dark_material_dark
+color primary_dark_material_light
+color primary_material_dark
+color primary_material_light
+color primary_text_default_material_dark
+color primary_text_default_material_light
+color primary_text_disabled_material_dark
+color primary_text_disabled_material_light
+color ripple_material_dark
+color ripple_material_light
+color secondary_text_default_material_dark
+color secondary_text_default_material_light
+color secondary_text_disabled_material_dark
+color secondary_text_disabled_material_light
+color switch_thumb_disabled_material_dark
+color switch_thumb_disabled_material_light
+color switch_thumb_material_dark
+color switch_thumb_material_light
+color switch_thumb_normal_material_dark
+color switch_thumb_normal_material_light
+color tooltip_background_dark
+color tooltip_background_light
+dimen abc_action_bar_content_inset_material
+dimen abc_action_bar_content_inset_with_nav
+dimen abc_action_bar_default_height_material
+dimen abc_action_bar_default_padding_end_material
+dimen abc_action_bar_default_padding_start_material
+dimen abc_action_bar_elevation_material
+dimen abc_action_bar_icon_vertical_padding_material
+dimen abc_action_bar_overflow_padding_end_material
+dimen abc_action_bar_overflow_padding_start_material
+dimen abc_action_bar_stacked_max_height
+dimen abc_action_bar_stacked_tab_max_width
+dimen abc_action_bar_subtitle_bottom_margin_material
+dimen abc_action_bar_subtitle_top_margin_material
+dimen abc_action_button_min_height_material
+dimen abc_action_button_min_width_material
+dimen abc_action_button_min_width_overflow_material
+dimen abc_alert_dialog_button_bar_height
+dimen abc_alert_dialog_button_dimen
+dimen abc_button_inset_horizontal_material
+dimen abc_button_inset_vertical_material
+dimen abc_button_padding_horizontal_material
+dimen abc_button_padding_vertical_material
+dimen abc_cascading_menus_min_smallest_width
+dimen abc_config_prefDialogWidth
+dimen abc_control_corner_material
+dimen abc_control_inset_material
+dimen abc_control_padding_material
+dimen abc_dialog_corner_radius_material
+dimen abc_dialog_fixed_height_major
+dimen abc_dialog_fixed_height_minor
+dimen abc_dialog_fixed_width_major
+dimen abc_dialog_fixed_width_minor
+dimen abc_dialog_list_padding_bottom_no_buttons
+dimen abc_dialog_list_padding_top_no_title
+dimen abc_dialog_min_width_major
+dimen abc_dialog_min_width_minor
+dimen abc_dialog_padding_material
+dimen abc_dialog_padding_top_material
+dimen abc_dialog_title_divider_material
+dimen abc_disabled_alpha_material_dark
+dimen abc_disabled_alpha_material_light
+dimen abc_dropdownitem_icon_width
+dimen abc_dropdownitem_text_padding_left
+dimen abc_dropdownitem_text_padding_right
+dimen abc_edit_text_inset_bottom_material
+dimen abc_edit_text_inset_horizontal_material
+dimen abc_edit_text_inset_top_material
+dimen abc_floating_window_z
+dimen abc_list_item_height_large_material
+dimen abc_list_item_height_material
+dimen abc_list_item_height_small_material
+dimen abc_list_item_padding_horizontal_material
+dimen abc_panel_menu_list_width
+dimen abc_progress_bar_height_material
+dimen abc_search_view_preferred_height
+dimen abc_search_view_preferred_width
+dimen abc_seekbar_track_background_height_material
+dimen abc_seekbar_track_progress_height_material
+dimen abc_select_dialog_padding_start_material
+dimen abc_star_big
+dimen abc_star_medium
+dimen abc_star_small
+dimen abc_switch_padding
+dimen abc_text_size_body_1_material
+dimen abc_text_size_body_2_material
+dimen abc_text_size_button_material
+dimen abc_text_size_caption_material
+dimen abc_text_size_display_1_material
+dimen abc_text_size_display_2_material
+dimen abc_text_size_display_3_material
+dimen abc_text_size_display_4_material
+dimen abc_text_size_headline_material
+dimen abc_text_size_large_material
+dimen abc_text_size_medium_material
+dimen abc_text_size_menu_header_material
+dimen abc_text_size_menu_material
+dimen abc_text_size_small_material
+dimen abc_text_size_subhead_material
+dimen abc_text_size_subtitle_material_toolbar
+dimen abc_text_size_title_material
+dimen abc_text_size_title_material_toolbar
+dimen autofill_inline_suggestion_icon_size
+dimen compat_button_inset_horizontal_material
+dimen compat_button_inset_vertical_material
+dimen compat_button_padding_horizontal_material
+dimen compat_button_padding_vertical_material
+dimen compat_control_corner_material
+dimen compat_notification_large_icon_max_height
+dimen compat_notification_large_icon_max_width
+dimen disabled_alpha_material_dark
+dimen disabled_alpha_material_light
+dimen highlight_alpha_material_colored
+dimen highlight_alpha_material_dark
+dimen highlight_alpha_material_light
+dimen hint_alpha_material_dark
+dimen hint_alpha_material_light
+dimen hint_pressed_alpha_material_dark
+dimen hint_pressed_alpha_material_light
+dimen notification_action_icon_size
+dimen notification_action_text_size
+dimen notification_big_circle_margin
+dimen notification_content_margin_start
+dimen notification_large_icon_height
+dimen notification_large_icon_width
+dimen notification_main_column_padding_top
+dimen notification_media_narrow_margin
+dimen notification_right_icon_size
+dimen notification_right_side_padding_top
+dimen notification_small_icon_background_padding
+dimen notification_small_icon_size_as_large
+dimen notification_subtext_size
+dimen notification_top_pad
+dimen notification_top_pad_large_text
+dimen tooltip_corner_radius
+dimen tooltip_horizontal_padding
+dimen tooltip_margin
+dimen tooltip_precise_anchor_extra_offset
+dimen tooltip_precise_anchor_threshold
+dimen tooltip_vertical_padding
+dimen tooltip_y_offset_non_touch
+dimen tooltip_y_offset_touch
+drawable abc_ab_share_pack_mtrl_alpha
+drawable abc_action_bar_item_background_material
+drawable abc_btn_borderless_material
+drawable abc_btn_check_material
+drawable abc_btn_check_material_anim
+drawable abc_btn_check_to_on_mtrl_000
+drawable abc_btn_check_to_on_mtrl_015
+drawable abc_btn_colored_material
+drawable abc_btn_default_mtrl_shape
+drawable abc_btn_radio_material
+drawable abc_btn_radio_material_anim
+drawable abc_btn_radio_to_on_mtrl_000
+drawable abc_btn_radio_to_on_mtrl_015
+drawable abc_btn_switch_to_on_mtrl_00001
+drawable abc_btn_switch_to_on_mtrl_00012
+drawable abc_cab_background_internal_bg
+drawable abc_cab_background_top_material
+drawable abc_cab_background_top_mtrl_alpha
+drawable abc_control_background_material
+drawable abc_dialog_material_background
+drawable abc_edit_text_material
+drawable abc_ic_ab_back_material
+drawable abc_ic_arrow_drop_right_black_24dp
+drawable abc_ic_clear_material
+drawable abc_ic_commit_search_api_mtrl_alpha
+drawable abc_ic_go_search_api_material
+drawable abc_ic_menu_copy_mtrl_am_alpha
+drawable abc_ic_menu_cut_mtrl_alpha
+drawable abc_ic_menu_overflow_material
+drawable abc_ic_menu_paste_mtrl_am_alpha
+drawable abc_ic_menu_selectall_mtrl_alpha
+drawable abc_ic_menu_share_mtrl_alpha
+drawable abc_ic_search_api_material
+drawable abc_ic_voice_search_api_material
+drawable abc_item_background_holo_dark
+drawable abc_item_background_holo_light
+drawable abc_list_divider_material
+drawable abc_list_divider_mtrl_alpha
+drawable abc_list_focused_holo
+drawable abc_list_longpressed_holo
+drawable abc_list_pressed_holo_dark
+drawable abc_list_pressed_holo_light
+drawable abc_list_selector_background_transition_holo_dark
+drawable abc_list_selector_background_transition_holo_light
+drawable abc_list_selector_disabled_holo_dark
+drawable abc_list_selector_disabled_holo_light
+drawable abc_list_selector_holo_dark
+drawable abc_list_selector_holo_light
+drawable abc_menu_hardkey_panel_mtrl_mult
+drawable abc_popup_background_mtrl_mult
+drawable abc_ratingbar_indicator_material
+drawable abc_ratingbar_material
+drawable abc_ratingbar_small_material
+drawable abc_scrubber_control_off_mtrl_alpha
+drawable abc_scrubber_control_to_pressed_mtrl_000
+drawable abc_scrubber_control_to_pressed_mtrl_005
+drawable abc_scrubber_primary_mtrl_alpha
+drawable abc_scrubber_track_mtrl_alpha
+drawable abc_seekbar_thumb_material
+drawable abc_seekbar_tick_mark_material
+drawable abc_seekbar_track_material
+drawable abc_spinner_mtrl_am_alpha
+drawable abc_spinner_textfield_background_material
+drawable abc_star_black_48dp
+drawable abc_star_half_black_48dp
+drawable abc_switch_thumb_material
+drawable abc_switch_track_mtrl_alpha
+drawable abc_tab_indicator_material
+drawable abc_tab_indicator_mtrl_alpha
+drawable abc_text_cursor_material
+drawable abc_text_select_handle_left_mtrl
+drawable abc_text_select_handle_middle_mtrl
+drawable abc_text_select_handle_right_mtrl
+drawable abc_textfield_activated_mtrl_alpha
+drawable abc_textfield_default_mtrl_alpha
+drawable abc_textfield_search_activated_mtrl_alpha
+drawable abc_textfield_search_default_mtrl_alpha
+drawable abc_textfield_search_material
+drawable abc_vector_test
+drawable amu_bubble_mask
+drawable amu_bubble_shadow
+drawable autofill_inline_suggestion_chip_background
+drawable btn_checkbox_checked_mtrl
+drawable btn_checkbox_checked_to_unchecked_mtrl_animation
+drawable btn_checkbox_unchecked_mtrl
+drawable btn_checkbox_unchecked_to_checked_mtrl_animation
+drawable btn_radio_off_mtrl
+drawable btn_radio_off_to_on_mtrl_animation
+drawable btn_radio_on_mtrl
+drawable btn_radio_on_to_off_mtrl_animation
+drawable common_full_open_on_phone
+drawable common_google_signin_btn_icon_dark
+drawable common_google_signin_btn_icon_dark_disabled
+drawable common_google_signin_btn_icon_dark_focused
+drawable common_google_signin_btn_icon_dark_normal
+drawable common_google_signin_btn_icon_dark_normal_background
+drawable common_google_signin_btn_icon_dark_pressed
+drawable common_google_signin_btn_icon_disabled
+drawable common_google_signin_btn_icon_light
+drawable common_google_signin_btn_icon_light_disabled
+drawable common_google_signin_btn_icon_light_focused
+drawable common_google_signin_btn_icon_light_normal
+drawable common_google_signin_btn_icon_light_normal_background
+drawable common_google_signin_btn_icon_light_pressed
+drawable common_google_signin_btn_text_dark
+drawable common_google_signin_btn_text_dark_disabled
+drawable common_google_signin_btn_text_dark_focused
+drawable common_google_signin_btn_text_dark_normal
+drawable common_google_signin_btn_text_dark_normal_background
+drawable common_google_signin_btn_text_dark_pressed
+drawable common_google_signin_btn_text_disabled
+drawable common_google_signin_btn_text_light
+drawable common_google_signin_btn_text_light_disabled
+drawable common_google_signin_btn_text_light_focused
+drawable common_google_signin_btn_text_light_normal
+drawable common_google_signin_btn_text_light_normal_background
+drawable common_google_signin_btn_text_light_pressed
+drawable common_ic_googleplayservices
+drawable googleg_disabled_color_18
+drawable googleg_standard_color_18
+drawable notification_action_background
+drawable notification_bg
+drawable notification_bg_low
+drawable notification_bg_low_normal
+drawable notification_bg_low_pressed
+drawable notification_bg_normal
+drawable notification_bg_normal_pressed
+drawable notification_icon_background
+drawable notification_template_icon_bg
+drawable notification_template_icon_low_bg
+drawable notification_tile_bg
+drawable notify_panel_notification_icon_bg
+drawable redbox_top_border_background
+drawable test_level_drawable
+drawable tooltip_frame_dark
+drawable tooltip_frame_light
+id accessibility_action_clickable_span
+id accessibility_actions
+id accessibility_collection
+id accessibility_collection_item
+id accessibility_custom_action_0
+id accessibility_custom_action_1
+id accessibility_custom_action_10
+id accessibility_custom_action_11
+id accessibility_custom_action_12
+id accessibility_custom_action_13
+id accessibility_custom_action_14
+id accessibility_custom_action_15
+id accessibility_custom_action_16
+id accessibility_custom_action_17
+id accessibility_custom_action_18
+id accessibility_custom_action_19
+id accessibility_custom_action_2
+id accessibility_custom_action_20
+id accessibility_custom_action_21
+id accessibility_custom_action_22
+id accessibility_custom_action_23
+id accessibility_custom_action_24
+id accessibility_custom_action_25
+id accessibility_custom_action_26
+id accessibility_custom_action_27
+id accessibility_custom_action_28
+id accessibility_custom_action_29
+id accessibility_custom_action_3
+id accessibility_custom_action_30
+id accessibility_custom_action_31
+id accessibility_custom_action_4
+id accessibility_custom_action_5
+id accessibility_custom_action_6
+id accessibility_custom_action_7
+id accessibility_custom_action_8
+id accessibility_custom_action_9
+id accessibility_hint
+id accessibility_label
+id accessibility_links
+id accessibility_role
+id accessibility_state
+id accessibility_value
+id action_bar
+id action_bar_activity_content
+id action_bar_container
+id action_bar_root
+id action_bar_spinner
+id action_bar_subtitle
+id action_bar_title
+id action_container
+id action_context_bar
+id action_divider
+id action_image
+id action_menu_divider
+id action_menu_presenter
+id action_mode_bar
+id action_mode_bar_stub
+id action_mode_close_button
+id action_text
+id actions
+id activity_chooser_view_content
+id add
+id adjust_height
+id adjust_width
+id alertTitle
+id amu_text
+id async
+id auto
+id autofill_inline_suggestion_end_icon
+id autofill_inline_suggestion_start_icon
+id autofill_inline_suggestion_subtitle
+id autofill_inline_suggestion_title
+id blocking
+id buttonPanel
+id catalyst_redbox_title
+id center
+id centerCrop
+id centerInside
+id checkbox
+id checked
+id chronometer
+id content
+id contentPanel
+id custom
+id customPanel
+id dark
+id decor_content_parent
+id default_activity_button
+id dialog_button
+id edit_query
+id expand_activities_button
+id expanded_menu
+id fitBottomStart
+id fitCenter
+id fitEnd
+id fitStart
+id fitXY
+id focusCrop
+id forever
+id fps_text
+id fragment_container_view_tag
+id group_divider
+id home
+id hybrid
+id icon
+id icon_group
+id icon_only
+id image
+id info
+id italic
+id item1
+id item2
+id item3
+id item4
+id labelled_by
+id light
+id line1
+id line3
+id listMode
+id list_item
+id message
+id multiply
+id none
+id normal
+id notification_background
+id notification_main_column
+id notification_main_column_container
+id off
+id on
+id parentPanel
+id pointer_enter
+id pointer_enter_capture
+id pointer_leave
+id pointer_leave_capture
+id pointer_move
+id pointer_move_capture
+id progress_circular
+id progress_horizontal
+id radio
+id react_test_id
+id right_icon
+id right_side
+id rn_frame_file
+id rn_frame_method
+id rn_redbox_dismiss_button
+id rn_redbox_line_separator
+id rn_redbox_loading_indicator
+id rn_redbox_reload_button
+id rn_redbox_report_button
+id rn_redbox_report_label
+id rn_redbox_stack
+id satellite
+id screen
+id scrollIndicatorDown
+id scrollIndicatorUp
+id scrollView
+id search_badge
+id search_bar
+id search_button
+id search_close_btn
+id search_edit_frame
+id search_go_btn
+id search_mag_icon
+id search_plate
+id search_src_text
+id search_voice_btn
+id select_dialog_listview
+id shortcut
+id spacer
+id special_effects_controller_view_tag
+id split_action_bar
+id src_atop
+id src_in
+id src_over
+id standard
+id submenuarrow
+id submit_area
+id tabMode
+id tag_accessibility_actions
+id tag_accessibility_clickable_spans
+id tag_accessibility_heading
+id tag_accessibility_pane_title
+id tag_on_apply_window_listener
+id tag_on_receive_content_listener
+id tag_on_receive_content_mime_types
+id tag_screen_reader_focusable
+id tag_state_description
+id tag_transition_group
+id tag_unhandled_key_event_manager
+id tag_unhandled_key_listeners
+id tag_window_insets_animation_callback
+id terrain
+id text
+id text2
+id textSpacerNoButtons
+id textSpacerNoTitle
+id time
+id title
+id titleDividerNoCustom
+id title_template
+id topPanel
+id unchecked
+id uniform
+id up
+id view_tag_instance_handle
+id view_tag_native_id
+id view_tree_lifecycle_owner
+id view_tree_saved_state_registry_owner
+id view_tree_view_model_store_owner
+id visible_removing_fragment_view_tag
+id webview
+id wide
+id window
+id wrap_content
+integer abc_config_activityDefaultDur
+integer abc_config_activityShortDur
+integer cancel_button_image_alpha
+integer config_tooltipAnimTime
+integer google_play_services_version
+integer react_native_dev_server_port
+integer react_native_inspector_proxy_port
+integer status_bar_notification_info_maxnum
+interpolator btn_checkbox_checked_mtrl_animation_interpolator_0
+interpolator btn_checkbox_checked_mtrl_animation_interpolator_1
+interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_0
+interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_1
+interpolator btn_radio_to_off_mtrl_animation_interpolator_0
+interpolator btn_radio_to_on_mtrl_animation_interpolator_0
+interpolator fast_out_slow_in
+layout abc_action_bar_title_item
+layout abc_action_bar_up_container
+layout abc_action_menu_item_layout
+layout abc_action_menu_layout
+layout abc_action_mode_bar
+layout abc_action_mode_close_item_material
+layout abc_activity_chooser_view
+layout abc_activity_chooser_view_list_item
+layout abc_alert_dialog_button_bar_material
+layout abc_alert_dialog_material
+layout abc_alert_dialog_title_material
+layout abc_cascading_menu_item_layout
+layout abc_dialog_title_material
+layout abc_expanded_menu_layout
+layout abc_list_menu_item_checkbox
+layout abc_list_menu_item_icon
+layout abc_list_menu_item_layout
+layout abc_list_menu_item_radio
+layout abc_popup_menu_header_item_layout
+layout abc_popup_menu_item_layout
+layout abc_screen_content_include
+layout abc_screen_simple
+layout abc_screen_simple_overlay_action_mode
+layout abc_screen_toolbar
+layout abc_search_dropdown_item_icons_2line
+layout abc_search_view
+layout abc_select_dialog_material
+layout abc_tooltip
+layout amu_info_window
+layout amu_text_bubble
+layout amu_webview
+layout autofill_inline_suggestion
+layout custom_dialog
+layout dev_loading_view
+layout fps_view
+layout notification_action
+layout notification_action_tombstone
+layout notification_template_custom_big
+layout notification_template_icon_group
+layout notification_template_part_chronometer
+layout notification_template_part_time
+layout redbox_item_frame
+layout redbox_item_title
+layout redbox_view
+layout select_dialog_item_material
+layout select_dialog_multichoice_material
+layout select_dialog_singlechoice_material
+layout support_simple_spinner_dropdown_item
+menu example_menu
+menu example_menu2
+raw amu_ballon_gx_prefix
+raw amu_basic_folder
+raw amu_basic_placemark
+raw amu_cdata
+raw amu_default_balloon
+raw amu_document_nest
+raw amu_draw_order_ground_overlay
+raw amu_extended_data
+raw amu_ground_overlay
+raw amu_ground_overlay_color
+raw amu_inline_style
+raw amu_multigeometry_placemarks
+raw amu_multiple_placemarks
+raw amu_nested_folders
+raw amu_nested_multigeometry
+raw amu_poly_style_boolean_alpha
+raw amu_poly_style_boolean_numeric
+raw amu_unknwown_folder
+raw amu_unsupported
+raw amu_visibility_ground_overlay
+string abc_action_bar_home_description
+string abc_action_bar_up_description
+string abc_action_menu_overflow_description
+string abc_action_mode_done
+string abc_activity_chooser_view_see_all
+string abc_activitychooserview_choose_application
+string abc_capital_off
+string abc_capital_on
+string abc_menu_alt_shortcut_label
+string abc_menu_ctrl_shortcut_label
+string abc_menu_delete_shortcut_label
+string abc_menu_enter_shortcut_label
+string abc_menu_function_shortcut_label
+string abc_menu_meta_shortcut_label
+string abc_menu_shift_shortcut_label
+string abc_menu_space_shortcut_label
+string abc_menu_sym_shortcut_label
+string abc_prepend_shortcut_label
+string abc_search_hint
+string abc_searchview_description_clear
+string abc_searchview_description_query
+string abc_searchview_description_search
+string abc_searchview_description_submit
+string abc_searchview_description_voice
+string abc_shareactionprovider_share_with
+string abc_shareactionprovider_share_with_application
+string abc_toolbar_collapse_description
+string alert_description
+string androidx_startup
+string catalyst_change_bundle_location
+string catalyst_copy_button
+string catalyst_debug
+string catalyst_debug_chrome
+string catalyst_debug_chrome_stop
+string catalyst_debug_connecting
+string catalyst_debug_error
+string catalyst_debug_open
+string catalyst_debug_stop
+string catalyst_devtools_open
+string catalyst_dismiss_button
+string catalyst_heap_capture
+string catalyst_hot_reloading
+string catalyst_hot_reloading_auto_disable
+string catalyst_hot_reloading_auto_enable
+string catalyst_hot_reloading_stop
+string catalyst_inspector
+string catalyst_inspector_stop
+string catalyst_loading_from_url
+string catalyst_open_flipper_error
+string catalyst_perf_monitor
+string catalyst_perf_monitor_stop
+string catalyst_reload
+string catalyst_reload_button
+string catalyst_reload_error
+string catalyst_report_button
+string catalyst_sample_profiler_disable
+string catalyst_sample_profiler_enable
+string catalyst_settings
+string catalyst_settings_title
+string combobox_description
+string common_google_play_services_enable_button
+string common_google_play_services_enable_text
+string common_google_play_services_enable_title
+string common_google_play_services_install_button
+string common_google_play_services_install_text
+string common_google_play_services_install_text_phone
+string common_google_play_services_install_text_tablet
+string common_google_play_services_install_title
+string common_google_play_services_notification_channel_name
+string common_google_play_services_notification_ticker
+string common_google_play_services_unknown_issue
+string common_google_play_services_unsupported_text
+string common_google_play_services_unsupported_title
+string common_google_play_services_update_button
+string common_google_play_services_update_text
+string common_google_play_services_update_title
+string common_google_play_services_updating_text
+string common_google_play_services_updating_title
+string common_google_play_services_wear_update_text
+string common_open_on_phone
+string common_signin_button_text
+string common_signin_button_text_long
+string header_description
+string image_description
+string imagebutton_description
+string link_description
+string menu_description
+string menubar_description
+string menuitem_description
+string progressbar_description
+string radiogroup_description
+string rn_tab_description
+string scrollbar_description
+string search_menu_title
+string spinbutton_description
+string state_busy_description
+string state_collapsed_description
+string state_expanded_description
+string state_mixed_description
+string state_off_description
+string state_on_description
+string state_unselected_description
+string status_bar_notification_info_overflow
+string summary_description
+string tablist_description
+string timer_description
+string toolbar_description
+style AlertDialog_AppCompat
+style AlertDialog_AppCompat_Light
+style Animation_AppCompat_Dialog
+style Animation_AppCompat_DropDownUp
+style Animation_AppCompat_Tooltip
+style Animation_Catalyst_LogBox
+style Animation_Catalyst_RedBox
+style Base_AlertDialog_AppCompat
+style Base_AlertDialog_AppCompat_Light
+style Base_Animation_AppCompat_Dialog
+style Base_Animation_AppCompat_DropDownUp
+style Base_Animation_AppCompat_Tooltip
+style Base_DialogWindowTitleBackground_AppCompat
+style Base_DialogWindowTitle_AppCompat
+style Base_TextAppearance_AppCompat
+style Base_TextAppearance_AppCompat_Body1
+style Base_TextAppearance_AppCompat_Body2
+style Base_TextAppearance_AppCompat_Button
+style Base_TextAppearance_AppCompat_Caption
+style Base_TextAppearance_AppCompat_Display1
+style Base_TextAppearance_AppCompat_Display2
+style Base_TextAppearance_AppCompat_Display3
+style Base_TextAppearance_AppCompat_Display4
+style Base_TextAppearance_AppCompat_Headline
+style Base_TextAppearance_AppCompat_Inverse
+style Base_TextAppearance_AppCompat_Large
+style Base_TextAppearance_AppCompat_Large_Inverse
+style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
+style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
+style Base_TextAppearance_AppCompat_Medium
+style Base_TextAppearance_AppCompat_Medium_Inverse
+style Base_TextAppearance_AppCompat_Menu
+style Base_TextAppearance_AppCompat_SearchResult
+style Base_TextAppearance_AppCompat_SearchResult_Subtitle
+style Base_TextAppearance_AppCompat_SearchResult_Title
+style Base_TextAppearance_AppCompat_Small
+style Base_TextAppearance_AppCompat_Small_Inverse
+style Base_TextAppearance_AppCompat_Subhead
+style Base_TextAppearance_AppCompat_Subhead_Inverse
+style Base_TextAppearance_AppCompat_Title
+style Base_TextAppearance_AppCompat_Title_Inverse
+style Base_TextAppearance_AppCompat_Tooltip
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Title
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
+style Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
+style Base_TextAppearance_AppCompat_Widget_ActionMode_Title
+style Base_TextAppearance_AppCompat_Widget_Button
+style Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
+style Base_TextAppearance_AppCompat_Widget_Button_Colored
+style Base_TextAppearance_AppCompat_Widget_Button_Inverse
+style Base_TextAppearance_AppCompat_Widget_DropDownItem
+style Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
+style Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
+style Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
+style Base_TextAppearance_AppCompat_Widget_Switch
+style Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
+style Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
+style Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
+style Base_TextAppearance_Widget_AppCompat_Toolbar_Title
+style Base_ThemeOverlay_AppCompat
+style Base_ThemeOverlay_AppCompat_ActionBar
+style Base_ThemeOverlay_AppCompat_Dark
+style Base_ThemeOverlay_AppCompat_Dark_ActionBar
+style Base_ThemeOverlay_AppCompat_Dialog
+style Base_ThemeOverlay_AppCompat_Dialog_Alert
+style Base_ThemeOverlay_AppCompat_Light
+style Base_Theme_AppCompat
+style Base_Theme_AppCompat_CompactMenu
+style Base_Theme_AppCompat_Dialog
+style Base_Theme_AppCompat_DialogWhenLarge
+style Base_Theme_AppCompat_Dialog_Alert
+style Base_Theme_AppCompat_Dialog_FixedSize
+style Base_Theme_AppCompat_Dialog_MinWidth
+style Base_Theme_AppCompat_Light
+style Base_Theme_AppCompat_Light_DarkActionBar
+style Base_Theme_AppCompat_Light_Dialog
+style Base_Theme_AppCompat_Light_DialogWhenLarge
+style Base_Theme_AppCompat_Light_Dialog_Alert
+style Base_Theme_AppCompat_Light_Dialog_FixedSize
+style Base_Theme_AppCompat_Light_Dialog_MinWidth
+style Base_V21_ThemeOverlay_AppCompat_Dialog
+style Base_V21_Theme_AppCompat
+style Base_V21_Theme_AppCompat_Dialog
+style Base_V21_Theme_AppCompat_Light
+style Base_V21_Theme_AppCompat_Light_Dialog
+style Base_V22_Theme_AppCompat
+style Base_V22_Theme_AppCompat_Light
+style Base_V23_Theme_AppCompat
+style Base_V23_Theme_AppCompat_Light
+style Base_V26_Theme_AppCompat
+style Base_V26_Theme_AppCompat_Light
+style Base_V26_Widget_AppCompat_Toolbar
+style Base_V28_Theme_AppCompat
+style Base_V28_Theme_AppCompat_Light
+style Base_V7_ThemeOverlay_AppCompat_Dialog
+style Base_V7_Theme_AppCompat
+style Base_V7_Theme_AppCompat_Dialog
+style Base_V7_Theme_AppCompat_Light
+style Base_V7_Theme_AppCompat_Light_Dialog
+style Base_V7_Widget_AppCompat_AutoCompleteTextView
+style Base_V7_Widget_AppCompat_EditText
+style Base_V7_Widget_AppCompat_Toolbar
+style Base_Widget_AppCompat_ActionBar
+style Base_Widget_AppCompat_ActionBar_Solid
+style Base_Widget_AppCompat_ActionBar_TabBar
+style Base_Widget_AppCompat_ActionBar_TabText
+style Base_Widget_AppCompat_ActionBar_TabView
+style Base_Widget_AppCompat_ActionButton
+style Base_Widget_AppCompat_ActionButton_CloseMode
+style Base_Widget_AppCompat_ActionButton_Overflow
+style Base_Widget_AppCompat_ActionMode
+style Base_Widget_AppCompat_ActivityChooserView
+style Base_Widget_AppCompat_AutoCompleteTextView
+style Base_Widget_AppCompat_Button
+style Base_Widget_AppCompat_ButtonBar
+style Base_Widget_AppCompat_ButtonBar_AlertDialog
+style Base_Widget_AppCompat_Button_Borderless
+style Base_Widget_AppCompat_Button_Borderless_Colored
+style Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
+style Base_Widget_AppCompat_Button_Colored
+style Base_Widget_AppCompat_Button_Small
+style Base_Widget_AppCompat_CompoundButton_CheckBox
+style Base_Widget_AppCompat_CompoundButton_RadioButton
+style Base_Widget_AppCompat_CompoundButton_Switch
+style Base_Widget_AppCompat_DrawerArrowToggle
+style Base_Widget_AppCompat_DrawerArrowToggle_Common
+style Base_Widget_AppCompat_DropDownItem_Spinner
+style Base_Widget_AppCompat_EditText
+style Base_Widget_AppCompat_ImageButton
+style Base_Widget_AppCompat_Light_ActionBar
+style Base_Widget_AppCompat_Light_ActionBar_Solid
+style Base_Widget_AppCompat_Light_ActionBar_TabBar
+style Base_Widget_AppCompat_Light_ActionBar_TabText
+style Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
+style Base_Widget_AppCompat_Light_ActionBar_TabView
+style Base_Widget_AppCompat_Light_PopupMenu
+style Base_Widget_AppCompat_Light_PopupMenu_Overflow
+style Base_Widget_AppCompat_ListMenuView
+style Base_Widget_AppCompat_ListPopupWindow
+style Base_Widget_AppCompat_ListView
+style Base_Widget_AppCompat_ListView_DropDown
+style Base_Widget_AppCompat_ListView_Menu
+style Base_Widget_AppCompat_PopupMenu
+style Base_Widget_AppCompat_PopupMenu_Overflow
+style Base_Widget_AppCompat_PopupWindow
+style Base_Widget_AppCompat_ProgressBar
+style Base_Widget_AppCompat_ProgressBar_Horizontal
+style Base_Widget_AppCompat_RatingBar
+style Base_Widget_AppCompat_RatingBar_Indicator
+style Base_Widget_AppCompat_RatingBar_Small
+style Base_Widget_AppCompat_SearchView
+style Base_Widget_AppCompat_SearchView_ActionBar
+style Base_Widget_AppCompat_SeekBar
+style Base_Widget_AppCompat_SeekBar_Discrete
+style Base_Widget_AppCompat_Spinner
+style Base_Widget_AppCompat_Spinner_Underlined
+style Base_Widget_AppCompat_TextView
+style Base_Widget_AppCompat_TextView_SpinnerItem
+style Base_Widget_AppCompat_Toolbar
+style Base_Widget_AppCompat_Toolbar_Button_Navigation
+style CalendarDatePickerDialog
+style CalendarDatePickerStyle
+style DialogAnimationFade
+style DialogAnimationSlide
+style Platform_AppCompat
+style Platform_AppCompat_Light
+style Platform_ThemeOverlay_AppCompat
+style Platform_ThemeOverlay_AppCompat_Dark
+style Platform_ThemeOverlay_AppCompat_Light
+style Platform_V21_AppCompat
+style Platform_V21_AppCompat_Light
+style Platform_V25_AppCompat
+style Platform_V25_AppCompat_Light
+style Platform_Widget_AppCompat_Spinner
+style RtlOverlay_DialogWindowTitle_AppCompat
+style RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
+style RtlOverlay_Widget_AppCompat_DialogTitle_Icon
+style RtlOverlay_Widget_AppCompat_PopupMenuItem
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
+style RtlOverlay_Widget_AppCompat_SearchView_MagIcon
+style RtlOverlay_Widget_AppCompat_Search_DropDown
+style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
+style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
+style RtlOverlay_Widget_AppCompat_Search_DropDown_Query
+style RtlOverlay_Widget_AppCompat_Search_DropDown_Text
+style RtlUnderlay_Widget_AppCompat_ActionButton
+style RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
+style SpinnerDatePickerDialog
+style SpinnerDatePickerStyle
+style TextAppearance_AppCompat
+style TextAppearance_AppCompat_Body1
+style TextAppearance_AppCompat_Body2
+style TextAppearance_AppCompat_Button
+style TextAppearance_AppCompat_Caption
+style TextAppearance_AppCompat_Display1
+style TextAppearance_AppCompat_Display2
+style TextAppearance_AppCompat_Display3
+style TextAppearance_AppCompat_Display4
+style TextAppearance_AppCompat_Headline
+style TextAppearance_AppCompat_Inverse
+style TextAppearance_AppCompat_Large
+style TextAppearance_AppCompat_Large_Inverse
+style TextAppearance_AppCompat_Light_SearchResult_Subtitle
+style TextAppearance_AppCompat_Light_SearchResult_Title
+style TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
+style TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
+style TextAppearance_AppCompat_Medium
+style TextAppearance_AppCompat_Medium_Inverse
+style TextAppearance_AppCompat_Menu
+style TextAppearance_AppCompat_SearchResult_Subtitle
+style TextAppearance_AppCompat_SearchResult_Title
+style TextAppearance_AppCompat_Small
+style TextAppearance_AppCompat_Small_Inverse
+style TextAppearance_AppCompat_Subhead
+style TextAppearance_AppCompat_Subhead_Inverse
+style TextAppearance_AppCompat_Title
+style TextAppearance_AppCompat_Title_Inverse
+style TextAppearance_AppCompat_Tooltip
+style TextAppearance_AppCompat_Widget_ActionBar_Menu
+style TextAppearance_AppCompat_Widget_ActionBar_Subtitle
+style TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
+style TextAppearance_AppCompat_Widget_ActionBar_Title
+style TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
+style TextAppearance_AppCompat_Widget_ActionMode_Subtitle
+style TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
+style TextAppearance_AppCompat_Widget_ActionMode_Title
+style TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
+style TextAppearance_AppCompat_Widget_Button
+style TextAppearance_AppCompat_Widget_Button_Borderless_Colored
+style TextAppearance_AppCompat_Widget_Button_Colored
+style TextAppearance_AppCompat_Widget_Button_Inverse
+style TextAppearance_AppCompat_Widget_DropDownItem
+style TextAppearance_AppCompat_Widget_PopupMenu_Header
+style TextAppearance_AppCompat_Widget_PopupMenu_Large
+style TextAppearance_AppCompat_Widget_PopupMenu_Small
+style TextAppearance_AppCompat_Widget_Switch
+style TextAppearance_AppCompat_Widget_TextView_SpinnerItem
+style TextAppearance_Compat_Notification
+style TextAppearance_Compat_Notification_Info
+style TextAppearance_Compat_Notification_Line2
+style TextAppearance_Compat_Notification_Time
+style TextAppearance_Compat_Notification_Title
+style TextAppearance_Widget_AppCompat_ExpandedMenu_Item
+style TextAppearance_Widget_AppCompat_Toolbar_Subtitle
+style TextAppearance_Widget_AppCompat_Toolbar_Title
+style Theme
+style ThemeOverlay_AppCompat
+style ThemeOverlay_AppCompat_ActionBar
+style ThemeOverlay_AppCompat_Dark
+style ThemeOverlay_AppCompat_Dark_ActionBar
+style ThemeOverlay_AppCompat_DayNight
+style ThemeOverlay_AppCompat_DayNight_ActionBar
+style ThemeOverlay_AppCompat_Dialog
+style ThemeOverlay_AppCompat_Dialog_Alert
+style ThemeOverlay_AppCompat_Light
+style Theme_AppCompat
+style Theme_AppCompat_CompactMenu
+style Theme_AppCompat_DayNight
+style Theme_AppCompat_DayNight_DarkActionBar
+style Theme_AppCompat_DayNight_Dialog
+style Theme_AppCompat_DayNight_DialogWhenLarge
+style Theme_AppCompat_DayNight_Dialog_Alert
+style Theme_AppCompat_DayNight_Dialog_MinWidth
+style Theme_AppCompat_DayNight_NoActionBar
+style Theme_AppCompat_Dialog
+style Theme_AppCompat_DialogWhenLarge
+style Theme_AppCompat_Dialog_Alert
+style Theme_AppCompat_Dialog_MinWidth
+style Theme_AppCompat_Empty
+style Theme_AppCompat_Light
+style Theme_AppCompat_Light_DarkActionBar
+style Theme_AppCompat_Light_Dialog
+style Theme_AppCompat_Light_DialogWhenLarge
+style Theme_AppCompat_Light_Dialog_Alert
+style Theme_AppCompat_Light_Dialog_MinWidth
+style Theme_AppCompat_Light_NoActionBar
+style Theme_AppCompat_NoActionBar
+style Theme_AutofillInlineSuggestion
+style Theme_Catalyst
+style Theme_Catalyst_LogBox
+style Theme_Catalyst_RedBox
+style Theme_FullScreenDialog
+style Theme_FullScreenDialogAnimatedFade
+style Theme_FullScreenDialogAnimatedSlide
+style Theme_ReactNative_AppCompat_Light
+style Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
+style Widget_AppCompat_ActionBar
+style Widget_AppCompat_ActionBar_Solid
+style Widget_AppCompat_ActionBar_TabBar
+style Widget_AppCompat_ActionBar_TabText
+style Widget_AppCompat_ActionBar_TabView
+style Widget_AppCompat_ActionButton
+style Widget_AppCompat_ActionButton_CloseMode
+style Widget_AppCompat_ActionButton_Overflow
+style Widget_AppCompat_ActionMode
+style Widget_AppCompat_ActivityChooserView
+style Widget_AppCompat_AutoCompleteTextView
+style Widget_AppCompat_Button
+style Widget_AppCompat_ButtonBar
+style Widget_AppCompat_ButtonBar_AlertDialog
+style Widget_AppCompat_Button_Borderless
+style Widget_AppCompat_Button_Borderless_Colored
+style Widget_AppCompat_Button_ButtonBar_AlertDialog
+style Widget_AppCompat_Button_Colored
+style Widget_AppCompat_Button_Small
+style Widget_AppCompat_CompoundButton_CheckBox
+style Widget_AppCompat_CompoundButton_RadioButton
+style Widget_AppCompat_CompoundButton_Switch
+style Widget_AppCompat_DrawerArrowToggle
+style Widget_AppCompat_DropDownItem_Spinner
+style Widget_AppCompat_EditText
+style Widget_AppCompat_ImageButton
+style Widget_AppCompat_Light_ActionBar
+style Widget_AppCompat_Light_ActionBar_Solid
+style Widget_AppCompat_Light_ActionBar_Solid_Inverse
+style Widget_AppCompat_Light_ActionBar_TabBar
+style Widget_AppCompat_Light_ActionBar_TabBar_Inverse
+style Widget_AppCompat_Light_ActionBar_TabText
+style Widget_AppCompat_Light_ActionBar_TabText_Inverse
+style Widget_AppCompat_Light_ActionBar_TabView
+style Widget_AppCompat_Light_ActionBar_TabView_Inverse
+style Widget_AppCompat_Light_ActionButton
+style Widget_AppCompat_Light_ActionButton_CloseMode
+style Widget_AppCompat_Light_ActionButton_Overflow
+style Widget_AppCompat_Light_ActionMode_Inverse
+style Widget_AppCompat_Light_ActivityChooserView
+style Widget_AppCompat_Light_AutoCompleteTextView
+style Widget_AppCompat_Light_DropDownItem_Spinner
+style Widget_AppCompat_Light_ListPopupWindow
+style Widget_AppCompat_Light_ListView_DropDown
+style Widget_AppCompat_Light_PopupMenu
+style Widget_AppCompat_Light_PopupMenu_Overflow
+style Widget_AppCompat_Light_SearchView
+style Widget_AppCompat_Light_Spinner_DropDown_ActionBar
+style Widget_AppCompat_ListMenuView
+style Widget_AppCompat_ListPopupWindow
+style Widget_AppCompat_ListView
+style Widget_AppCompat_ListView_DropDown
+style Widget_AppCompat_ListView_Menu
+style Widget_AppCompat_PopupMenu
+style Widget_AppCompat_PopupMenu_Overflow
+style Widget_AppCompat_PopupWindow
+style Widget_AppCompat_ProgressBar
+style Widget_AppCompat_ProgressBar_Horizontal
+style Widget_AppCompat_RatingBar
+style Widget_AppCompat_RatingBar_Indicator
+style Widget_AppCompat_RatingBar_Small
+style Widget_AppCompat_SearchView
+style Widget_AppCompat_SearchView_ActionBar
+style Widget_AppCompat_SeekBar
+style Widget_AppCompat_SeekBar_Discrete
+style Widget_AppCompat_Spinner
+style Widget_AppCompat_Spinner_DropDown
+style Widget_AppCompat_Spinner_DropDown_ActionBar
+style Widget_AppCompat_Spinner_Underlined
+style Widget_AppCompat_TextView
+style Widget_AppCompat_TextView_SpinnerItem
+style Widget_AppCompat_Toolbar
+style Widget_AppCompat_Toolbar_Button_Navigation
+style Widget_Autofill
+style Widget_Autofill_InlineSuggestionChip
+style Widget_Autofill_InlineSuggestionEndIconStyle
+style Widget_Autofill_InlineSuggestionStartIconStyle
+style Widget_Autofill_InlineSuggestionSubtitle
+style Widget_Autofill_InlineSuggestionTitle
+style Widget_Compat_NotificationActionContainer
+style Widget_Compat_NotificationActionText
+style amu_Bubble_TextAppearance_Dark
+style amu_Bubble_TextAppearance_Light
+style amu_ClusterIcon_TextAppearance
+style redboxButton
+styleable ActionBar background backgroundSplit backgroundStacked contentInsetEnd contentInsetEndWithActions contentInsetLeft contentInsetRight contentInsetStart contentInsetStartWithNavigation customNavigationLayout displayOptions divider elevation height hideOnContentScroll homeAsUpIndicator homeLayout icon indeterminateProgressStyle itemPadding logo navigationMode popupTheme progressBarPadding progressBarStyle subtitle subtitleTextStyle title titleTextStyle
+styleable ActionBarLayout android_layout_gravity
+styleable ActionMenuItemView android_minWidth
+styleable ActionMenuView
+styleable ActionMode background backgroundSplit closeItemLayout height subtitleTextStyle titleTextStyle
+styleable ActivityChooserView expandActivityOverflowButtonDrawable initialActivityCount
+styleable AlertDialog android_layout buttonIconDimen buttonPanelSideLayout listItemLayout listLayout multiChoiceItemLayout showTitle singleChoiceItemLayout
+styleable AnimatedStateListDrawableCompat android_constantSize android_dither android_enterFadeDuration android_exitFadeDuration android_variablePadding android_visible
+styleable AnimatedStateListDrawableItem android_drawable android_id
+styleable AnimatedStateListDrawableTransition android_drawable android_fromId android_reversible android_toId
+styleable AppCompatEmojiHelper
+styleable AppCompatImageView android_src srcCompat tint tintMode
+styleable AppCompatSeekBar android_thumb tickMark tickMarkTint tickMarkTintMode
+styleable AppCompatTextHelper android_drawableBottom android_drawableEnd android_drawableLeft android_drawableRight android_drawableStart android_drawableTop android_textAppearance
+styleable AppCompatTextView android_textAppearance autoSizeMaxTextSize autoSizeMinTextSize autoSizePresetSizes autoSizeStepGranularity autoSizeTextType drawableBottomCompat drawableEndCompat drawableLeftCompat drawableRightCompat drawableStartCompat drawableTint drawableTintMode drawableTopCompat emojiCompatEnabled firstBaselineToTopHeight fontFamily fontVariationSettings lastBaselineToBottomHeight lineHeight textAllCaps textLocale
+styleable AppCompatTheme actionBarDivider actionBarItemBackground actionBarPopupTheme actionBarSize actionBarSplitStyle actionBarStyle actionBarTabBarStyle actionBarTabStyle actionBarTabTextStyle actionBarTheme actionBarWidgetTheme actionButtonStyle actionDropDownStyle actionMenuTextAppearance actionMenuTextColor actionModeBackground actionModeCloseButtonStyle actionModeCloseContentDescription actionModeCloseDrawable actionModeCopyDrawable actionModeCutDrawable actionModeFindDrawable actionModePasteDrawable actionModePopupWindowStyle actionModeSelectAllDrawable actionModeShareDrawable actionModeSplitBackground actionModeStyle actionModeTheme actionModeWebSearchDrawable actionOverflowButtonStyle actionOverflowMenuStyle activityChooserViewStyle alertDialogButtonGroupStyle alertDialogCenterButtons alertDialogStyle alertDialogTheme android_windowAnimationStyle android_windowIsFloating autoCompleteTextViewStyle borderlessButtonStyle buttonBarButtonStyle buttonBarNegativeButtonStyle buttonBarNeutralButtonStyle buttonBarPositiveButtonStyle buttonBarStyle buttonStyle buttonStyleSmall checkboxStyle checkedTextViewStyle colorAccent colorBackgroundFloating colorButtonNormal colorControlActivated colorControlHighlight colorControlNormal colorError colorPrimary colorPrimaryDark colorSwitchThumbNormal controlBackground dialogCornerRadius dialogPreferredPadding dialogTheme dividerHorizontal dividerVertical dropDownListViewStyle dropdownListPreferredItemHeight editTextBackground editTextColor editTextStyle homeAsUpIndicator imageButtonStyle listChoiceBackgroundIndicator listChoiceIndicatorMultipleAnimated listChoiceIndicatorSingleAnimated listDividerAlertDialog listMenuViewStyle listPopupWindowStyle listPreferredItemHeight listPreferredItemHeightLarge listPreferredItemHeightSmall listPreferredItemPaddingEnd listPreferredItemPaddingLeft listPreferredItemPaddingRight listPreferredItemPaddingStart panelBackground panelMenuListTheme panelMenuListWidth popupMenuStyle popupWindowStyle radioButtonStyle ratingBarStyle ratingBarStyleIndicator ratingBarStyleSmall searchViewStyle seekBarStyle selectableItemBackground selectableItemBackgroundBorderless spinnerDropDownItemStyle spinnerStyle switchStyle textAppearanceLargePopupMenu textAppearanceListItem textAppearanceListItemSecondary textAppearanceListItemSmall textAppearancePopupMenuHeader textAppearanceSearchResultSubtitle textAppearanceSearchResultTitle textAppearanceSmallPopupMenu textColorAlertDialogListItem textColorSearchUrl toolbarNavigationButtonStyle toolbarStyle tooltipForegroundColor tooltipFrameBackground viewInflaterClass windowActionBar windowActionBarOverlay windowActionModeOverlay windowFixedHeightMajor windowFixedHeightMinor windowFixedWidthMajor windowFixedWidthMinor windowMinWidthMajor windowMinWidthMinor windowNoTitle
+styleable Autofill_InlineSuggestion autofillInlineSuggestionChip autofillInlineSuggestionEndIconStyle autofillInlineSuggestionStartIconStyle autofillInlineSuggestionSubtitle autofillInlineSuggestionTitle isAutofillInlineSuggestionTheme
+styleable ButtonBarLayout allowStacking
+styleable Capability queryPatterns shortcutMatchRequired
+styleable CheckedTextView android_checkMark checkMarkCompat checkMarkTint checkMarkTintMode
+styleable ColorStateListItem alpha android_alpha android_color android_lStar lStar
+styleable CompoundButton android_button buttonCompat buttonTint buttonTintMode
+styleable DrawerArrowToggle arrowHeadLength arrowShaftLength barLength color drawableSize gapBetweenBars spinBars thickness
+styleable FontFamily fontProviderAuthority fontProviderCerts fontProviderFetchStrategy fontProviderFetchTimeout fontProviderPackage fontProviderQuery fontProviderSystemFontFamily
+styleable FontFamilyFont android_font android_fontStyle android_fontVariationSettings android_fontWeight android_ttcIndex font fontStyle fontVariationSettings fontWeight ttcIndex
+styleable Fragment android_id android_name android_tag
+styleable FragmentContainerView android_name android_tag
+styleable GenericDraweeHierarchy actualImageScaleType backgroundImage fadeDuration failureImage failureImageScaleType overlayImage placeholderImage placeholderImageScaleType pressedStateOverlayImage progressBarAutoRotateInterval progressBarImage progressBarImageScaleType retryImage retryImageScaleType roundAsCircle roundBottomEnd roundBottomLeft roundBottomRight roundBottomStart roundTopEnd roundTopLeft roundTopRight roundTopStart roundWithOverlayColor roundedCornerRadius roundingBorderColor roundingBorderPadding roundingBorderWidth viewAspectRatio
+styleable GradientColor android_centerColor android_centerX android_centerY android_endColor android_endX android_endY android_gradientRadius android_startColor android_startX android_startY android_tileMode android_type
+styleable GradientColorItem android_color android_offset
+styleable LinearLayoutCompat android_baselineAligned android_baselineAlignedChildIndex android_gravity android_orientation android_weightSum divider dividerPadding measureWithLargestChild showDividers
+styleable LinearLayoutCompat_Layout android_layout_gravity android_layout_height android_layout_weight android_layout_width
+styleable ListPopupWindow android_dropDownHorizontalOffset android_dropDownVerticalOffset
+styleable LoadingImageView circleCrop imageAspectRatio imageAspectRatioAdjust
+styleable MapAttrs ambientEnabled backgroundColor cameraBearing cameraMaxZoomPreference cameraMinZoomPreference cameraTargetLat cameraTargetLng cameraTilt cameraZoom latLngBoundsNorthEastLatitude latLngBoundsNorthEastLongitude latLngBoundsSouthWestLatitude latLngBoundsSouthWestLongitude liteMode mapId mapType uiCompass uiMapToolbar uiRotateGestures uiScrollGestures uiScrollGesturesDuringRotateOrZoom uiTiltGestures uiZoomControls uiZoomGestures useViewLifecycle zOrderOnTop
+styleable MenuGroup android_checkableBehavior android_enabled android_id android_menuCategory android_orderInCategory android_visible
+styleable MenuItem actionLayout actionProviderClass actionViewClass alphabeticModifiers android_alphabeticShortcut android_checkable android_checked android_enabled android_icon android_id android_menuCategory android_numericShortcut android_onClick android_orderInCategory android_title android_titleCondensed android_visible contentDescription iconTint iconTintMode numericModifiers showAsAction tooltipText
+styleable MenuView android_headerBackground android_horizontalDivider android_itemBackground android_itemIconDisabledAlpha android_itemTextAppearance android_verticalDivider android_windowAnimationStyle preserveIconSpacing subMenuArrow
+styleable PopupWindow android_popupAnimationStyle android_popupBackground overlapAnchor
+styleable PopupWindowBackgroundState state_above_anchor
+styleable RecycleListView paddingBottomNoButtons paddingTopNoTitle
+styleable SearchView android_focusable android_imeOptions android_inputType android_maxWidth closeIcon commitIcon defaultQueryHint goIcon iconifiedByDefault layout queryBackground queryHint searchHintIcon searchIcon submitBackground suggestionRowLayout voiceIcon
+styleable SignInButton buttonSize colorScheme scopeUris
+styleable SimpleDraweeView actualImageResource actualImageScaleType actualImageUri backgroundImage fadeDuration failureImage failureImageScaleType overlayImage placeholderImage placeholderImageScaleType pressedStateOverlayImage progressBarAutoRotateInterval progressBarImage progressBarImageScaleType retryImage retryImageScaleType roundAsCircle roundBottomEnd roundBottomLeft roundBottomRight roundBottomStart roundTopEnd roundTopLeft roundTopRight roundTopStart roundWithOverlayColor roundedCornerRadius roundingBorderColor roundingBorderPadding roundingBorderWidth viewAspectRatio
+styleable Spinner android_dropDownWidth android_entries android_popupBackground android_prompt popupTheme
+styleable StateListDrawable android_constantSize android_dither android_enterFadeDuration android_exitFadeDuration android_variablePadding android_visible
+styleable StateListDrawableItem android_drawable
+styleable SwitchCompat android_textOff android_textOn android_thumb showText splitTrack switchMinWidth switchPadding switchTextAppearance thumbTextPadding thumbTint thumbTintMode track trackTint trackTintMode
+styleable TextAppearance android_fontFamily android_shadowColor android_shadowDx android_shadowDy android_shadowRadius android_textColor android_textColorHint android_textColorLink android_textFontWeight android_textSize android_textStyle android_typeface fontFamily fontVariationSettings textAllCaps textLocale
+styleable Toolbar android_gravity android_minHeight buttonGravity collapseContentDescription collapseIcon contentInsetEnd contentInsetEndWithActions contentInsetLeft contentInsetRight contentInsetStart contentInsetStartWithNavigation logo logoDescription maxButtonHeight menu navigationContentDescription navigationIcon popupTheme subtitle subtitleTextAppearance subtitleTextColor title titleMargin titleMarginBottom titleMarginEnd titleMarginStart titleMarginTop titleMargins titleTextAppearance titleTextColor
+styleable View android_focusable android_theme paddingEnd paddingStart theme
+styleable ViewBackgroundHelper android_background backgroundTint backgroundTintMode
+styleable ViewStubCompat android_id android_inflatedId android_layout
+xml rn_dev_preferences
diff --git a/node_modules/react-native-maps/android/build/intermediates/symbol_list_with_package_name/release/package-aware-r.txt b/node_modules/react-native-maps/android/build/intermediates/symbol_list_with_package_name/release/package-aware-r.txt
new file mode 100644
index 0000000..22f1d37
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/intermediates/symbol_list_with_package_name/release/package-aware-r.txt
@@ -0,0 +1,1597 @@
+com.airbnb.android.react.maps
+anim abc_fade_in
+anim abc_fade_out
+anim abc_grow_fade_in_from_bottom
+anim abc_popup_enter
+anim abc_popup_exit
+anim abc_shrink_fade_out_from_bottom
+anim abc_slide_in_bottom
+anim abc_slide_in_top
+anim abc_slide_out_bottom
+anim abc_slide_out_top
+anim abc_tooltip_enter
+anim abc_tooltip_exit
+anim btn_checkbox_to_checked_box_inner_merged_animation
+anim btn_checkbox_to_checked_box_outer_merged_animation
+anim btn_checkbox_to_checked_icon_null_animation
+anim btn_checkbox_to_unchecked_box_inner_merged_animation
+anim btn_checkbox_to_unchecked_check_path_merged_animation
+anim btn_checkbox_to_unchecked_icon_null_animation
+anim btn_radio_to_off_mtrl_dot_group_animation
+anim btn_radio_to_off_mtrl_ring_outer_animation
+anim btn_radio_to_off_mtrl_ring_outer_path_animation
+anim btn_radio_to_on_mtrl_dot_group_animation
+anim btn_radio_to_on_mtrl_ring_outer_animation
+anim btn_radio_to_on_mtrl_ring_outer_path_animation
+anim catalyst_fade_in
+anim catalyst_fade_out
+anim catalyst_push_up_in
+anim catalyst_push_up_out
+anim catalyst_slide_down
+anim catalyst_slide_up
+anim fragment_fast_out_extra_slow_in
+animator fragment_close_enter
+animator fragment_close_exit
+animator fragment_fade_enter
+animator fragment_fade_exit
+animator fragment_open_enter
+animator fragment_open_exit
+attr actionBarDivider
+attr actionBarItemBackground
+attr actionBarPopupTheme
+attr actionBarSize
+attr actionBarSplitStyle
+attr actionBarStyle
+attr actionBarTabBarStyle
+attr actionBarTabStyle
+attr actionBarTabTextStyle
+attr actionBarTheme
+attr actionBarWidgetTheme
+attr actionButtonStyle
+attr actionDropDownStyle
+attr actionLayout
+attr actionMenuTextAppearance
+attr actionMenuTextColor
+attr actionModeBackground
+attr actionModeCloseButtonStyle
+attr actionModeCloseContentDescription
+attr actionModeCloseDrawable
+attr actionModeCopyDrawable
+attr actionModeCutDrawable
+attr actionModeFindDrawable
+attr actionModePasteDrawable
+attr actionModePopupWindowStyle
+attr actionModeSelectAllDrawable
+attr actionModeShareDrawable
+attr actionModeSplitBackground
+attr actionModeStyle
+attr actionModeTheme
+attr actionModeWebSearchDrawable
+attr actionOverflowButtonStyle
+attr actionOverflowMenuStyle
+attr actionProviderClass
+attr actionViewClass
+attr activityChooserViewStyle
+attr actualImageResource
+attr actualImageScaleType
+attr actualImageUri
+attr alertDialogButtonGroupStyle
+attr alertDialogCenterButtons
+attr alertDialogStyle
+attr alertDialogTheme
+attr allowStacking
+attr alpha
+attr alphabeticModifiers
+attr ambientEnabled
+attr arrowHeadLength
+attr arrowShaftLength
+attr autoCompleteTextViewStyle
+attr autoSizeMaxTextSize
+attr autoSizeMinTextSize
+attr autoSizePresetSizes
+attr autoSizeStepGranularity
+attr autoSizeTextType
+attr autofillInlineSuggestionChip
+attr autofillInlineSuggestionEndIconStyle
+attr autofillInlineSuggestionStartIconStyle
+attr autofillInlineSuggestionSubtitle
+attr autofillInlineSuggestionTitle
+attr background
+attr backgroundColor
+attr backgroundImage
+attr backgroundSplit
+attr backgroundStacked
+attr backgroundTint
+attr backgroundTintMode
+attr barLength
+attr borderlessButtonStyle
+attr buttonBarButtonStyle
+attr buttonBarNegativeButtonStyle
+attr buttonBarNeutralButtonStyle
+attr buttonBarPositiveButtonStyle
+attr buttonBarStyle
+attr buttonCompat
+attr buttonGravity
+attr buttonIconDimen
+attr buttonPanelSideLayout
+attr buttonSize
+attr buttonStyle
+attr buttonStyleSmall
+attr buttonTint
+attr buttonTintMode
+attr cameraBearing
+attr cameraMaxZoomPreference
+attr cameraMinZoomPreference
+attr cameraTargetLat
+attr cameraTargetLng
+attr cameraTilt
+attr cameraZoom
+attr checkMarkCompat
+attr checkMarkTint
+attr checkMarkTintMode
+attr checkboxStyle
+attr checkedTextViewStyle
+attr circleCrop
+attr closeIcon
+attr closeItemLayout
+attr collapseContentDescription
+attr collapseIcon
+attr color
+attr colorAccent
+attr colorBackgroundFloating
+attr colorButtonNormal
+attr colorControlActivated
+attr colorControlHighlight
+attr colorControlNormal
+attr colorError
+attr colorPrimary
+attr colorPrimaryDark
+attr colorScheme
+attr colorSwitchThumbNormal
+attr commitIcon
+attr contentDescription
+attr contentInsetEnd
+attr contentInsetEndWithActions
+attr contentInsetLeft
+attr contentInsetRight
+attr contentInsetStart
+attr contentInsetStartWithNavigation
+attr controlBackground
+attr customNavigationLayout
+attr defaultQueryHint
+attr dialogCornerRadius
+attr dialogPreferredPadding
+attr dialogTheme
+attr displayOptions
+attr divider
+attr dividerHorizontal
+attr dividerPadding
+attr dividerVertical
+attr drawableBottomCompat
+attr drawableEndCompat
+attr drawableLeftCompat
+attr drawableRightCompat
+attr drawableSize
+attr drawableStartCompat
+attr drawableTint
+attr drawableTintMode
+attr drawableTopCompat
+attr drawerArrowStyle
+attr dropDownListViewStyle
+attr dropdownListPreferredItemHeight
+attr editTextBackground
+attr editTextColor
+attr editTextStyle
+attr elevation
+attr emojiCompatEnabled
+attr expandActivityOverflowButtonDrawable
+attr fadeDuration
+attr failureImage
+attr failureImageScaleType
+attr firstBaselineToTopHeight
+attr font
+attr fontFamily
+attr fontProviderAuthority
+attr fontProviderCerts
+attr fontProviderFetchStrategy
+attr fontProviderFetchTimeout
+attr fontProviderPackage
+attr fontProviderQuery
+attr fontProviderSystemFontFamily
+attr fontStyle
+attr fontVariationSettings
+attr fontWeight
+attr gapBetweenBars
+attr goIcon
+attr height
+attr hideOnContentScroll
+attr homeAsUpIndicator
+attr homeLayout
+attr icon
+attr iconTint
+attr iconTintMode
+attr iconifiedByDefault
+attr imageAspectRatio
+attr imageAspectRatioAdjust
+attr imageButtonStyle
+attr indeterminateProgressStyle
+attr initialActivityCount
+attr isAutofillInlineSuggestionTheme
+attr isLightTheme
+attr itemPadding
+attr lStar
+attr lastBaselineToBottomHeight
+attr latLngBoundsNorthEastLatitude
+attr latLngBoundsNorthEastLongitude
+attr latLngBoundsSouthWestLatitude
+attr latLngBoundsSouthWestLongitude
+attr layout
+attr lineHeight
+attr listChoiceBackgroundIndicator
+attr listChoiceIndicatorMultipleAnimated
+attr listChoiceIndicatorSingleAnimated
+attr listDividerAlertDialog
+attr listItemLayout
+attr listLayout
+attr listMenuViewStyle
+attr listPopupWindowStyle
+attr listPreferredItemHeight
+attr listPreferredItemHeightLarge
+attr listPreferredItemHeightSmall
+attr listPreferredItemPaddingEnd
+attr listPreferredItemPaddingLeft
+attr listPreferredItemPaddingRight
+attr listPreferredItemPaddingStart
+attr liteMode
+attr logo
+attr logoDescription
+attr mapId
+attr mapType
+attr maxButtonHeight
+attr measureWithLargestChild
+attr menu
+attr multiChoiceItemLayout
+attr navigationContentDescription
+attr navigationIcon
+attr navigationMode
+attr nestedScrollViewStyle
+attr numericModifiers
+attr overlapAnchor
+attr overlayImage
+attr paddingBottomNoButtons
+attr paddingEnd
+attr paddingStart
+attr paddingTopNoTitle
+attr panelBackground
+attr panelMenuListTheme
+attr panelMenuListWidth
+attr placeholderImage
+attr placeholderImageScaleType
+attr popupMenuStyle
+attr popupTheme
+attr popupWindowStyle
+attr preserveIconSpacing
+attr pressedStateOverlayImage
+attr progressBarAutoRotateInterval
+attr progressBarImage
+attr progressBarImageScaleType
+attr progressBarPadding
+attr progressBarStyle
+attr queryBackground
+attr queryHint
+attr queryPatterns
+attr radioButtonStyle
+attr ratingBarStyle
+attr ratingBarStyleIndicator
+attr ratingBarStyleSmall
+attr retryImage
+attr retryImageScaleType
+attr roundAsCircle
+attr roundBottomEnd
+attr roundBottomLeft
+attr roundBottomRight
+attr roundBottomStart
+attr roundTopEnd
+attr roundTopLeft
+attr roundTopRight
+attr roundTopStart
+attr roundWithOverlayColor
+attr roundedCornerRadius
+attr roundingBorderColor
+attr roundingBorderPadding
+attr roundingBorderWidth
+attr scopeUris
+attr searchHintIcon
+attr searchIcon
+attr searchViewStyle
+attr seekBarStyle
+attr selectableItemBackground
+attr selectableItemBackgroundBorderless
+attr shortcutMatchRequired
+attr showAsAction
+attr showDividers
+attr showText
+attr showTitle
+attr singleChoiceItemLayout
+attr spinBars
+attr spinnerDropDownItemStyle
+attr spinnerStyle
+attr splitTrack
+attr srcCompat
+attr state_above_anchor
+attr subMenuArrow
+attr submitBackground
+attr subtitle
+attr subtitleTextAppearance
+attr subtitleTextColor
+attr subtitleTextStyle
+attr suggestionRowLayout
+attr switchMinWidth
+attr switchPadding
+attr switchStyle
+attr switchTextAppearance
+attr textAllCaps
+attr textAppearanceLargePopupMenu
+attr textAppearanceListItem
+attr textAppearanceListItemSecondary
+attr textAppearanceListItemSmall
+attr textAppearancePopupMenuHeader
+attr textAppearanceSearchResultSubtitle
+attr textAppearanceSearchResultTitle
+attr textAppearanceSmallPopupMenu
+attr textColorAlertDialogListItem
+attr textColorSearchUrl
+attr textLocale
+attr theme
+attr thickness
+attr thumbTextPadding
+attr thumbTint
+attr thumbTintMode
+attr tickMark
+attr tickMarkTint
+attr tickMarkTintMode
+attr tint
+attr tintMode
+attr title
+attr titleMargin
+attr titleMarginBottom
+attr titleMarginEnd
+attr titleMarginStart
+attr titleMarginTop
+attr titleMargins
+attr titleTextAppearance
+attr titleTextColor
+attr titleTextStyle
+attr toolbarNavigationButtonStyle
+attr toolbarStyle
+attr tooltipForegroundColor
+attr tooltipFrameBackground
+attr tooltipText
+attr track
+attr trackTint
+attr trackTintMode
+attr ttcIndex
+attr uiCompass
+attr uiMapToolbar
+attr uiRotateGestures
+attr uiScrollGestures
+attr uiScrollGesturesDuringRotateOrZoom
+attr uiTiltGestures
+attr uiZoomControls
+attr uiZoomGestures
+attr useViewLifecycle
+attr viewAspectRatio
+attr viewInflaterClass
+attr voiceIcon
+attr windowActionBar
+attr windowActionBarOverlay
+attr windowActionModeOverlay
+attr windowFixedHeightMajor
+attr windowFixedHeightMinor
+attr windowFixedWidthMajor
+attr windowFixedWidthMinor
+attr windowMinWidthMajor
+attr windowMinWidthMinor
+attr windowNoTitle
+attr zOrderOnTop
+bool abc_action_bar_embed_tabs
+bool abc_config_actionMenuItemAllCaps
+bool enable_system_alarm_service_default
+bool enable_system_foreground_service_default
+bool enable_system_job_service_default
+bool workmanager_test_configuration
+color abc_background_cache_hint_selector_material_dark
+color abc_background_cache_hint_selector_material_light
+color abc_btn_colored_borderless_text_material
+color abc_btn_colored_text_material
+color abc_color_highlight_material
+color abc_decor_view_status_guard
+color abc_decor_view_status_guard_light
+color abc_hint_foreground_material_dark
+color abc_hint_foreground_material_light
+color abc_primary_text_disable_only_material_dark
+color abc_primary_text_disable_only_material_light
+color abc_primary_text_material_dark
+color abc_primary_text_material_light
+color abc_search_url_text
+color abc_search_url_text_normal
+color abc_search_url_text_pressed
+color abc_search_url_text_selected
+color abc_secondary_text_material_dark
+color abc_secondary_text_material_light
+color abc_tint_btn_checkable
+color abc_tint_default
+color abc_tint_edittext
+color abc_tint_seek_thumb
+color abc_tint_spinner
+color abc_tint_switch_track
+color accent_material_dark
+color accent_material_light
+color androidx_core_ripple_material_light
+color androidx_core_secondary_text_default_material_light
+color background_floating_material_dark
+color background_floating_material_light
+color background_material_dark
+color background_material_light
+color bright_foreground_disabled_material_dark
+color bright_foreground_disabled_material_light
+color bright_foreground_inverse_material_dark
+color bright_foreground_inverse_material_light
+color bright_foreground_material_dark
+color bright_foreground_material_light
+color button_material_dark
+color button_material_light
+color catalyst_logbox_background
+color catalyst_redbox_background
+color common_google_signin_btn_text_dark
+color common_google_signin_btn_text_dark_default
+color common_google_signin_btn_text_dark_disabled
+color common_google_signin_btn_text_dark_focused
+color common_google_signin_btn_text_dark_pressed
+color common_google_signin_btn_text_light
+color common_google_signin_btn_text_light_default
+color common_google_signin_btn_text_light_disabled
+color common_google_signin_btn_text_light_focused
+color common_google_signin_btn_text_light_pressed
+color common_google_signin_btn_tint
+color dim_foreground_disabled_material_dark
+color dim_foreground_disabled_material_light
+color dim_foreground_material_dark
+color dim_foreground_material_light
+color error_color_material_dark
+color error_color_material_light
+color foreground_material_dark
+color foreground_material_light
+color highlighted_text_material_dark
+color highlighted_text_material_light
+color material_blue_grey_800
+color material_blue_grey_900
+color material_blue_grey_950
+color material_deep_teal_200
+color material_deep_teal_500
+color material_grey_100
+color material_grey_300
+color material_grey_50
+color material_grey_600
+color material_grey_800
+color material_grey_850
+color material_grey_900
+color notification_action_color_filter
+color notification_icon_bg_color
+color primary_dark_material_dark
+color primary_dark_material_light
+color primary_material_dark
+color primary_material_light
+color primary_text_default_material_dark
+color primary_text_default_material_light
+color primary_text_disabled_material_dark
+color primary_text_disabled_material_light
+color ripple_material_dark
+color ripple_material_light
+color secondary_text_default_material_dark
+color secondary_text_default_material_light
+color secondary_text_disabled_material_dark
+color secondary_text_disabled_material_light
+color switch_thumb_disabled_material_dark
+color switch_thumb_disabled_material_light
+color switch_thumb_material_dark
+color switch_thumb_material_light
+color switch_thumb_normal_material_dark
+color switch_thumb_normal_material_light
+color tooltip_background_dark
+color tooltip_background_light
+dimen abc_action_bar_content_inset_material
+dimen abc_action_bar_content_inset_with_nav
+dimen abc_action_bar_default_height_material
+dimen abc_action_bar_default_padding_end_material
+dimen abc_action_bar_default_padding_start_material
+dimen abc_action_bar_elevation_material
+dimen abc_action_bar_icon_vertical_padding_material
+dimen abc_action_bar_overflow_padding_end_material
+dimen abc_action_bar_overflow_padding_start_material
+dimen abc_action_bar_stacked_max_height
+dimen abc_action_bar_stacked_tab_max_width
+dimen abc_action_bar_subtitle_bottom_margin_material
+dimen abc_action_bar_subtitle_top_margin_material
+dimen abc_action_button_min_height_material
+dimen abc_action_button_min_width_material
+dimen abc_action_button_min_width_overflow_material
+dimen abc_alert_dialog_button_bar_height
+dimen abc_alert_dialog_button_dimen
+dimen abc_button_inset_horizontal_material
+dimen abc_button_inset_vertical_material
+dimen abc_button_padding_horizontal_material
+dimen abc_button_padding_vertical_material
+dimen abc_cascading_menus_min_smallest_width
+dimen abc_config_prefDialogWidth
+dimen abc_control_corner_material
+dimen abc_control_inset_material
+dimen abc_control_padding_material
+dimen abc_dialog_corner_radius_material
+dimen abc_dialog_fixed_height_major
+dimen abc_dialog_fixed_height_minor
+dimen abc_dialog_fixed_width_major
+dimen abc_dialog_fixed_width_minor
+dimen abc_dialog_list_padding_bottom_no_buttons
+dimen abc_dialog_list_padding_top_no_title
+dimen abc_dialog_min_width_major
+dimen abc_dialog_min_width_minor
+dimen abc_dialog_padding_material
+dimen abc_dialog_padding_top_material
+dimen abc_dialog_title_divider_material
+dimen abc_disabled_alpha_material_dark
+dimen abc_disabled_alpha_material_light
+dimen abc_dropdownitem_icon_width
+dimen abc_dropdownitem_text_padding_left
+dimen abc_dropdownitem_text_padding_right
+dimen abc_edit_text_inset_bottom_material
+dimen abc_edit_text_inset_horizontal_material
+dimen abc_edit_text_inset_top_material
+dimen abc_floating_window_z
+dimen abc_list_item_height_large_material
+dimen abc_list_item_height_material
+dimen abc_list_item_height_small_material
+dimen abc_list_item_padding_horizontal_material
+dimen abc_panel_menu_list_width
+dimen abc_progress_bar_height_material
+dimen abc_search_view_preferred_height
+dimen abc_search_view_preferred_width
+dimen abc_seekbar_track_background_height_material
+dimen abc_seekbar_track_progress_height_material
+dimen abc_select_dialog_padding_start_material
+dimen abc_star_big
+dimen abc_star_medium
+dimen abc_star_small
+dimen abc_switch_padding
+dimen abc_text_size_body_1_material
+dimen abc_text_size_body_2_material
+dimen abc_text_size_button_material
+dimen abc_text_size_caption_material
+dimen abc_text_size_display_1_material
+dimen abc_text_size_display_2_material
+dimen abc_text_size_display_3_material
+dimen abc_text_size_display_4_material
+dimen abc_text_size_headline_material
+dimen abc_text_size_large_material
+dimen abc_text_size_medium_material
+dimen abc_text_size_menu_header_material
+dimen abc_text_size_menu_material
+dimen abc_text_size_small_material
+dimen abc_text_size_subhead_material
+dimen abc_text_size_subtitle_material_toolbar
+dimen abc_text_size_title_material
+dimen abc_text_size_title_material_toolbar
+dimen autofill_inline_suggestion_icon_size
+dimen compat_button_inset_horizontal_material
+dimen compat_button_inset_vertical_material
+dimen compat_button_padding_horizontal_material
+dimen compat_button_padding_vertical_material
+dimen compat_control_corner_material
+dimen compat_notification_large_icon_max_height
+dimen compat_notification_large_icon_max_width
+dimen disabled_alpha_material_dark
+dimen disabled_alpha_material_light
+dimen highlight_alpha_material_colored
+dimen highlight_alpha_material_dark
+dimen highlight_alpha_material_light
+dimen hint_alpha_material_dark
+dimen hint_alpha_material_light
+dimen hint_pressed_alpha_material_dark
+dimen hint_pressed_alpha_material_light
+dimen notification_action_icon_size
+dimen notification_action_text_size
+dimen notification_big_circle_margin
+dimen notification_content_margin_start
+dimen notification_large_icon_height
+dimen notification_large_icon_width
+dimen notification_main_column_padding_top
+dimen notification_media_narrow_margin
+dimen notification_right_icon_size
+dimen notification_right_side_padding_top
+dimen notification_small_icon_background_padding
+dimen notification_small_icon_size_as_large
+dimen notification_subtext_size
+dimen notification_top_pad
+dimen notification_top_pad_large_text
+dimen tooltip_corner_radius
+dimen tooltip_horizontal_padding
+dimen tooltip_margin
+dimen tooltip_precise_anchor_extra_offset
+dimen tooltip_precise_anchor_threshold
+dimen tooltip_vertical_padding
+dimen tooltip_y_offset_non_touch
+dimen tooltip_y_offset_touch
+drawable abc_ab_share_pack_mtrl_alpha
+drawable abc_action_bar_item_background_material
+drawable abc_btn_borderless_material
+drawable abc_btn_check_material
+drawable abc_btn_check_material_anim
+drawable abc_btn_check_to_on_mtrl_000
+drawable abc_btn_check_to_on_mtrl_015
+drawable abc_btn_colored_material
+drawable abc_btn_default_mtrl_shape
+drawable abc_btn_radio_material
+drawable abc_btn_radio_material_anim
+drawable abc_btn_radio_to_on_mtrl_000
+drawable abc_btn_radio_to_on_mtrl_015
+drawable abc_btn_switch_to_on_mtrl_00001
+drawable abc_btn_switch_to_on_mtrl_00012
+drawable abc_cab_background_internal_bg
+drawable abc_cab_background_top_material
+drawable abc_cab_background_top_mtrl_alpha
+drawable abc_control_background_material
+drawable abc_dialog_material_background
+drawable abc_edit_text_material
+drawable abc_ic_ab_back_material
+drawable abc_ic_arrow_drop_right_black_24dp
+drawable abc_ic_clear_material
+drawable abc_ic_commit_search_api_mtrl_alpha
+drawable abc_ic_go_search_api_material
+drawable abc_ic_menu_copy_mtrl_am_alpha
+drawable abc_ic_menu_cut_mtrl_alpha
+drawable abc_ic_menu_overflow_material
+drawable abc_ic_menu_paste_mtrl_am_alpha
+drawable abc_ic_menu_selectall_mtrl_alpha
+drawable abc_ic_menu_share_mtrl_alpha
+drawable abc_ic_search_api_material
+drawable abc_ic_voice_search_api_material
+drawable abc_item_background_holo_dark
+drawable abc_item_background_holo_light
+drawable abc_list_divider_material
+drawable abc_list_divider_mtrl_alpha
+drawable abc_list_focused_holo
+drawable abc_list_longpressed_holo
+drawable abc_list_pressed_holo_dark
+drawable abc_list_pressed_holo_light
+drawable abc_list_selector_background_transition_holo_dark
+drawable abc_list_selector_background_transition_holo_light
+drawable abc_list_selector_disabled_holo_dark
+drawable abc_list_selector_disabled_holo_light
+drawable abc_list_selector_holo_dark
+drawable abc_list_selector_holo_light
+drawable abc_menu_hardkey_panel_mtrl_mult
+drawable abc_popup_background_mtrl_mult
+drawable abc_ratingbar_indicator_material
+drawable abc_ratingbar_material
+drawable abc_ratingbar_small_material
+drawable abc_scrubber_control_off_mtrl_alpha
+drawable abc_scrubber_control_to_pressed_mtrl_000
+drawable abc_scrubber_control_to_pressed_mtrl_005
+drawable abc_scrubber_primary_mtrl_alpha
+drawable abc_scrubber_track_mtrl_alpha
+drawable abc_seekbar_thumb_material
+drawable abc_seekbar_tick_mark_material
+drawable abc_seekbar_track_material
+drawable abc_spinner_mtrl_am_alpha
+drawable abc_spinner_textfield_background_material
+drawable abc_star_black_48dp
+drawable abc_star_half_black_48dp
+drawable abc_switch_thumb_material
+drawable abc_switch_track_mtrl_alpha
+drawable abc_tab_indicator_material
+drawable abc_tab_indicator_mtrl_alpha
+drawable abc_text_cursor_material
+drawable abc_text_select_handle_left_mtrl
+drawable abc_text_select_handle_middle_mtrl
+drawable abc_text_select_handle_right_mtrl
+drawable abc_textfield_activated_mtrl_alpha
+drawable abc_textfield_default_mtrl_alpha
+drawable abc_textfield_search_activated_mtrl_alpha
+drawable abc_textfield_search_default_mtrl_alpha
+drawable abc_textfield_search_material
+drawable abc_vector_test
+drawable amu_bubble_mask
+drawable amu_bubble_shadow
+drawable autofill_inline_suggestion_chip_background
+drawable btn_checkbox_checked_mtrl
+drawable btn_checkbox_checked_to_unchecked_mtrl_animation
+drawable btn_checkbox_unchecked_mtrl
+drawable btn_checkbox_unchecked_to_checked_mtrl_animation
+drawable btn_radio_off_mtrl
+drawable btn_radio_off_to_on_mtrl_animation
+drawable btn_radio_on_mtrl
+drawable btn_radio_on_to_off_mtrl_animation
+drawable common_full_open_on_phone
+drawable common_google_signin_btn_icon_dark
+drawable common_google_signin_btn_icon_dark_disabled
+drawable common_google_signin_btn_icon_dark_focused
+drawable common_google_signin_btn_icon_dark_normal
+drawable common_google_signin_btn_icon_dark_normal_background
+drawable common_google_signin_btn_icon_dark_pressed
+drawable common_google_signin_btn_icon_disabled
+drawable common_google_signin_btn_icon_light
+drawable common_google_signin_btn_icon_light_disabled
+drawable common_google_signin_btn_icon_light_focused
+drawable common_google_signin_btn_icon_light_normal
+drawable common_google_signin_btn_icon_light_normal_background
+drawable common_google_signin_btn_icon_light_pressed
+drawable common_google_signin_btn_text_dark
+drawable common_google_signin_btn_text_dark_disabled
+drawable common_google_signin_btn_text_dark_focused
+drawable common_google_signin_btn_text_dark_normal
+drawable common_google_signin_btn_text_dark_normal_background
+drawable common_google_signin_btn_text_dark_pressed
+drawable common_google_signin_btn_text_disabled
+drawable common_google_signin_btn_text_light
+drawable common_google_signin_btn_text_light_disabled
+drawable common_google_signin_btn_text_light_focused
+drawable common_google_signin_btn_text_light_normal
+drawable common_google_signin_btn_text_light_normal_background
+drawable common_google_signin_btn_text_light_pressed
+drawable common_ic_googleplayservices
+drawable googleg_disabled_color_18
+drawable googleg_standard_color_18
+drawable notification_action_background
+drawable notification_bg
+drawable notification_bg_low
+drawable notification_bg_low_normal
+drawable notification_bg_low_pressed
+drawable notification_bg_normal
+drawable notification_bg_normal_pressed
+drawable notification_icon_background
+drawable notification_template_icon_bg
+drawable notification_template_icon_low_bg
+drawable notification_tile_bg
+drawable notify_panel_notification_icon_bg
+drawable redbox_top_border_background
+drawable test_level_drawable
+drawable tooltip_frame_dark
+drawable tooltip_frame_light
+id accessibility_action_clickable_span
+id accessibility_actions
+id accessibility_collection
+id accessibility_collection_item
+id accessibility_custom_action_0
+id accessibility_custom_action_1
+id accessibility_custom_action_10
+id accessibility_custom_action_11
+id accessibility_custom_action_12
+id accessibility_custom_action_13
+id accessibility_custom_action_14
+id accessibility_custom_action_15
+id accessibility_custom_action_16
+id accessibility_custom_action_17
+id accessibility_custom_action_18
+id accessibility_custom_action_19
+id accessibility_custom_action_2
+id accessibility_custom_action_20
+id accessibility_custom_action_21
+id accessibility_custom_action_22
+id accessibility_custom_action_23
+id accessibility_custom_action_24
+id accessibility_custom_action_25
+id accessibility_custom_action_26
+id accessibility_custom_action_27
+id accessibility_custom_action_28
+id accessibility_custom_action_29
+id accessibility_custom_action_3
+id accessibility_custom_action_30
+id accessibility_custom_action_31
+id accessibility_custom_action_4
+id accessibility_custom_action_5
+id accessibility_custom_action_6
+id accessibility_custom_action_7
+id accessibility_custom_action_8
+id accessibility_custom_action_9
+id accessibility_hint
+id accessibility_label
+id accessibility_links
+id accessibility_role
+id accessibility_state
+id accessibility_value
+id action_bar
+id action_bar_activity_content
+id action_bar_container
+id action_bar_root
+id action_bar_spinner
+id action_bar_subtitle
+id action_bar_title
+id action_container
+id action_context_bar
+id action_divider
+id action_image
+id action_menu_divider
+id action_menu_presenter
+id action_mode_bar
+id action_mode_bar_stub
+id action_mode_close_button
+id action_text
+id actions
+id activity_chooser_view_content
+id add
+id adjust_height
+id adjust_width
+id alertTitle
+id amu_text
+id async
+id auto
+id autofill_inline_suggestion_end_icon
+id autofill_inline_suggestion_start_icon
+id autofill_inline_suggestion_subtitle
+id autofill_inline_suggestion_title
+id blocking
+id buttonPanel
+id catalyst_redbox_title
+id center
+id centerCrop
+id centerInside
+id checkbox
+id checked
+id chronometer
+id content
+id contentPanel
+id custom
+id customPanel
+id dark
+id decor_content_parent
+id default_activity_button
+id dialog_button
+id edit_query
+id expand_activities_button
+id expanded_menu
+id fitBottomStart
+id fitCenter
+id fitEnd
+id fitStart
+id fitXY
+id focusCrop
+id forever
+id fps_text
+id fragment_container_view_tag
+id group_divider
+id home
+id hybrid
+id icon
+id icon_group
+id icon_only
+id image
+id info
+id italic
+id item1
+id item2
+id item3
+id item4
+id labelled_by
+id light
+id line1
+id line3
+id listMode
+id list_item
+id message
+id multiply
+id none
+id normal
+id notification_background
+id notification_main_column
+id notification_main_column_container
+id off
+id on
+id parentPanel
+id pointer_enter
+id pointer_enter_capture
+id pointer_leave
+id pointer_leave_capture
+id pointer_move
+id pointer_move_capture
+id progress_circular
+id progress_horizontal
+id radio
+id react_test_id
+id right_icon
+id right_side
+id rn_frame_file
+id rn_frame_method
+id rn_redbox_dismiss_button
+id rn_redbox_line_separator
+id rn_redbox_loading_indicator
+id rn_redbox_reload_button
+id rn_redbox_report_button
+id rn_redbox_report_label
+id rn_redbox_stack
+id satellite
+id screen
+id scrollIndicatorDown
+id scrollIndicatorUp
+id scrollView
+id search_badge
+id search_bar
+id search_button
+id search_close_btn
+id search_edit_frame
+id search_go_btn
+id search_mag_icon
+id search_plate
+id search_src_text
+id search_voice_btn
+id select_dialog_listview
+id shortcut
+id spacer
+id special_effects_controller_view_tag
+id split_action_bar
+id src_atop
+id src_in
+id src_over
+id standard
+id submenuarrow
+id submit_area
+id tabMode
+id tag_accessibility_actions
+id tag_accessibility_clickable_spans
+id tag_accessibility_heading
+id tag_accessibility_pane_title
+id tag_on_apply_window_listener
+id tag_on_receive_content_listener
+id tag_on_receive_content_mime_types
+id tag_screen_reader_focusable
+id tag_state_description
+id tag_transition_group
+id tag_unhandled_key_event_manager
+id tag_unhandled_key_listeners
+id tag_window_insets_animation_callback
+id terrain
+id text
+id text2
+id textSpacerNoButtons
+id textSpacerNoTitle
+id time
+id title
+id titleDividerNoCustom
+id title_template
+id topPanel
+id unchecked
+id uniform
+id up
+id view_tag_instance_handle
+id view_tag_native_id
+id view_tree_lifecycle_owner
+id view_tree_saved_state_registry_owner
+id view_tree_view_model_store_owner
+id visible_removing_fragment_view_tag
+id webview
+id wide
+id window
+id wrap_content
+integer abc_config_activityDefaultDur
+integer abc_config_activityShortDur
+integer cancel_button_image_alpha
+integer config_tooltipAnimTime
+integer google_play_services_version
+integer react_native_dev_server_port
+integer react_native_inspector_proxy_port
+integer status_bar_notification_info_maxnum
+interpolator btn_checkbox_checked_mtrl_animation_interpolator_0
+interpolator btn_checkbox_checked_mtrl_animation_interpolator_1
+interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_0
+interpolator btn_checkbox_unchecked_mtrl_animation_interpolator_1
+interpolator btn_radio_to_off_mtrl_animation_interpolator_0
+interpolator btn_radio_to_on_mtrl_animation_interpolator_0
+interpolator fast_out_slow_in
+layout abc_action_bar_title_item
+layout abc_action_bar_up_container
+layout abc_action_menu_item_layout
+layout abc_action_menu_layout
+layout abc_action_mode_bar
+layout abc_action_mode_close_item_material
+layout abc_activity_chooser_view
+layout abc_activity_chooser_view_list_item
+layout abc_alert_dialog_button_bar_material
+layout abc_alert_dialog_material
+layout abc_alert_dialog_title_material
+layout abc_cascading_menu_item_layout
+layout abc_dialog_title_material
+layout abc_expanded_menu_layout
+layout abc_list_menu_item_checkbox
+layout abc_list_menu_item_icon
+layout abc_list_menu_item_layout
+layout abc_list_menu_item_radio
+layout abc_popup_menu_header_item_layout
+layout abc_popup_menu_item_layout
+layout abc_screen_content_include
+layout abc_screen_simple
+layout abc_screen_simple_overlay_action_mode
+layout abc_screen_toolbar
+layout abc_search_dropdown_item_icons_2line
+layout abc_search_view
+layout abc_select_dialog_material
+layout abc_tooltip
+layout amu_info_window
+layout amu_text_bubble
+layout amu_webview
+layout autofill_inline_suggestion
+layout custom_dialog
+layout dev_loading_view
+layout fps_view
+layout notification_action
+layout notification_action_tombstone
+layout notification_template_custom_big
+layout notification_template_icon_group
+layout notification_template_part_chronometer
+layout notification_template_part_time
+layout redbox_item_frame
+layout redbox_item_title
+layout redbox_view
+layout select_dialog_item_material
+layout select_dialog_multichoice_material
+layout select_dialog_singlechoice_material
+layout support_simple_spinner_dropdown_item
+menu example_menu
+menu example_menu2
+raw amu_ballon_gx_prefix
+raw amu_basic_folder
+raw amu_basic_placemark
+raw amu_cdata
+raw amu_default_balloon
+raw amu_document_nest
+raw amu_draw_order_ground_overlay
+raw amu_extended_data
+raw amu_ground_overlay
+raw amu_ground_overlay_color
+raw amu_inline_style
+raw amu_multigeometry_placemarks
+raw amu_multiple_placemarks
+raw amu_nested_folders
+raw amu_nested_multigeometry
+raw amu_poly_style_boolean_alpha
+raw amu_poly_style_boolean_numeric
+raw amu_unknwown_folder
+raw amu_unsupported
+raw amu_visibility_ground_overlay
+string abc_action_bar_home_description
+string abc_action_bar_up_description
+string abc_action_menu_overflow_description
+string abc_action_mode_done
+string abc_activity_chooser_view_see_all
+string abc_activitychooserview_choose_application
+string abc_capital_off
+string abc_capital_on
+string abc_menu_alt_shortcut_label
+string abc_menu_ctrl_shortcut_label
+string abc_menu_delete_shortcut_label
+string abc_menu_enter_shortcut_label
+string abc_menu_function_shortcut_label
+string abc_menu_meta_shortcut_label
+string abc_menu_shift_shortcut_label
+string abc_menu_space_shortcut_label
+string abc_menu_sym_shortcut_label
+string abc_prepend_shortcut_label
+string abc_search_hint
+string abc_searchview_description_clear
+string abc_searchview_description_query
+string abc_searchview_description_search
+string abc_searchview_description_submit
+string abc_searchview_description_voice
+string abc_shareactionprovider_share_with
+string abc_shareactionprovider_share_with_application
+string abc_toolbar_collapse_description
+string alert_description
+string androidx_startup
+string catalyst_change_bundle_location
+string catalyst_copy_button
+string catalyst_debug
+string catalyst_debug_chrome
+string catalyst_debug_chrome_stop
+string catalyst_debug_connecting
+string catalyst_debug_error
+string catalyst_debug_open
+string catalyst_debug_stop
+string catalyst_devtools_open
+string catalyst_dismiss_button
+string catalyst_heap_capture
+string catalyst_hot_reloading
+string catalyst_hot_reloading_auto_disable
+string catalyst_hot_reloading_auto_enable
+string catalyst_hot_reloading_stop
+string catalyst_inspector
+string catalyst_inspector_stop
+string catalyst_loading_from_url
+string catalyst_open_flipper_error
+string catalyst_perf_monitor
+string catalyst_perf_monitor_stop
+string catalyst_reload
+string catalyst_reload_button
+string catalyst_reload_error
+string catalyst_report_button
+string catalyst_sample_profiler_disable
+string catalyst_sample_profiler_enable
+string catalyst_settings
+string catalyst_settings_title
+string combobox_description
+string common_google_play_services_enable_button
+string common_google_play_services_enable_text
+string common_google_play_services_enable_title
+string common_google_play_services_install_button
+string common_google_play_services_install_text
+string common_google_play_services_install_text_phone
+string common_google_play_services_install_text_tablet
+string common_google_play_services_install_title
+string common_google_play_services_notification_channel_name
+string common_google_play_services_notification_ticker
+string common_google_play_services_unknown_issue
+string common_google_play_services_unsupported_text
+string common_google_play_services_unsupported_title
+string common_google_play_services_update_button
+string common_google_play_services_update_text
+string common_google_play_services_update_title
+string common_google_play_services_updating_text
+string common_google_play_services_updating_title
+string common_google_play_services_wear_update_text
+string common_open_on_phone
+string common_signin_button_text
+string common_signin_button_text_long
+string header_description
+string image_description
+string imagebutton_description
+string link_description
+string menu_description
+string menubar_description
+string menuitem_description
+string progressbar_description
+string radiogroup_description
+string rn_tab_description
+string scrollbar_description
+string search_menu_title
+string spinbutton_description
+string state_busy_description
+string state_collapsed_description
+string state_expanded_description
+string state_mixed_description
+string state_off_description
+string state_on_description
+string state_unselected_description
+string status_bar_notification_info_overflow
+string summary_description
+string tablist_description
+string timer_description
+string toolbar_description
+style AlertDialog_AppCompat
+style AlertDialog_AppCompat_Light
+style Animation_AppCompat_Dialog
+style Animation_AppCompat_DropDownUp
+style Animation_AppCompat_Tooltip
+style Animation_Catalyst_LogBox
+style Animation_Catalyst_RedBox
+style Base_AlertDialog_AppCompat
+style Base_AlertDialog_AppCompat_Light
+style Base_Animation_AppCompat_Dialog
+style Base_Animation_AppCompat_DropDownUp
+style Base_Animation_AppCompat_Tooltip
+style Base_DialogWindowTitleBackground_AppCompat
+style Base_DialogWindowTitle_AppCompat
+style Base_TextAppearance_AppCompat
+style Base_TextAppearance_AppCompat_Body1
+style Base_TextAppearance_AppCompat_Body2
+style Base_TextAppearance_AppCompat_Button
+style Base_TextAppearance_AppCompat_Caption
+style Base_TextAppearance_AppCompat_Display1
+style Base_TextAppearance_AppCompat_Display2
+style Base_TextAppearance_AppCompat_Display3
+style Base_TextAppearance_AppCompat_Display4
+style Base_TextAppearance_AppCompat_Headline
+style Base_TextAppearance_AppCompat_Inverse
+style Base_TextAppearance_AppCompat_Large
+style Base_TextAppearance_AppCompat_Large_Inverse
+style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
+style Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
+style Base_TextAppearance_AppCompat_Medium
+style Base_TextAppearance_AppCompat_Medium_Inverse
+style Base_TextAppearance_AppCompat_Menu
+style Base_TextAppearance_AppCompat_SearchResult
+style Base_TextAppearance_AppCompat_SearchResult_Subtitle
+style Base_TextAppearance_AppCompat_SearchResult_Title
+style Base_TextAppearance_AppCompat_Small
+style Base_TextAppearance_AppCompat_Small_Inverse
+style Base_TextAppearance_AppCompat_Subhead
+style Base_TextAppearance_AppCompat_Subhead_Inverse
+style Base_TextAppearance_AppCompat_Title
+style Base_TextAppearance_AppCompat_Title_Inverse
+style Base_TextAppearance_AppCompat_Tooltip
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Title
+style Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
+style Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
+style Base_TextAppearance_AppCompat_Widget_ActionMode_Title
+style Base_TextAppearance_AppCompat_Widget_Button
+style Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
+style Base_TextAppearance_AppCompat_Widget_Button_Colored
+style Base_TextAppearance_AppCompat_Widget_Button_Inverse
+style Base_TextAppearance_AppCompat_Widget_DropDownItem
+style Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
+style Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
+style Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
+style Base_TextAppearance_AppCompat_Widget_Switch
+style Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
+style Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
+style Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
+style Base_TextAppearance_Widget_AppCompat_Toolbar_Title
+style Base_ThemeOverlay_AppCompat
+style Base_ThemeOverlay_AppCompat_ActionBar
+style Base_ThemeOverlay_AppCompat_Dark
+style Base_ThemeOverlay_AppCompat_Dark_ActionBar
+style Base_ThemeOverlay_AppCompat_Dialog
+style Base_ThemeOverlay_AppCompat_Dialog_Alert
+style Base_ThemeOverlay_AppCompat_Light
+style Base_Theme_AppCompat
+style Base_Theme_AppCompat_CompactMenu
+style Base_Theme_AppCompat_Dialog
+style Base_Theme_AppCompat_DialogWhenLarge
+style Base_Theme_AppCompat_Dialog_Alert
+style Base_Theme_AppCompat_Dialog_FixedSize
+style Base_Theme_AppCompat_Dialog_MinWidth
+style Base_Theme_AppCompat_Light
+style Base_Theme_AppCompat_Light_DarkActionBar
+style Base_Theme_AppCompat_Light_Dialog
+style Base_Theme_AppCompat_Light_DialogWhenLarge
+style Base_Theme_AppCompat_Light_Dialog_Alert
+style Base_Theme_AppCompat_Light_Dialog_FixedSize
+style Base_Theme_AppCompat_Light_Dialog_MinWidth
+style Base_V21_ThemeOverlay_AppCompat_Dialog
+style Base_V21_Theme_AppCompat
+style Base_V21_Theme_AppCompat_Dialog
+style Base_V21_Theme_AppCompat_Light
+style Base_V21_Theme_AppCompat_Light_Dialog
+style Base_V22_Theme_AppCompat
+style Base_V22_Theme_AppCompat_Light
+style Base_V23_Theme_AppCompat
+style Base_V23_Theme_AppCompat_Light
+style Base_V26_Theme_AppCompat
+style Base_V26_Theme_AppCompat_Light
+style Base_V26_Widget_AppCompat_Toolbar
+style Base_V28_Theme_AppCompat
+style Base_V28_Theme_AppCompat_Light
+style Base_V7_ThemeOverlay_AppCompat_Dialog
+style Base_V7_Theme_AppCompat
+style Base_V7_Theme_AppCompat_Dialog
+style Base_V7_Theme_AppCompat_Light
+style Base_V7_Theme_AppCompat_Light_Dialog
+style Base_V7_Widget_AppCompat_AutoCompleteTextView
+style Base_V7_Widget_AppCompat_EditText
+style Base_V7_Widget_AppCompat_Toolbar
+style Base_Widget_AppCompat_ActionBar
+style Base_Widget_AppCompat_ActionBar_Solid
+style Base_Widget_AppCompat_ActionBar_TabBar
+style Base_Widget_AppCompat_ActionBar_TabText
+style Base_Widget_AppCompat_ActionBar_TabView
+style Base_Widget_AppCompat_ActionButton
+style Base_Widget_AppCompat_ActionButton_CloseMode
+style Base_Widget_AppCompat_ActionButton_Overflow
+style Base_Widget_AppCompat_ActionMode
+style Base_Widget_AppCompat_ActivityChooserView
+style Base_Widget_AppCompat_AutoCompleteTextView
+style Base_Widget_AppCompat_Button
+style Base_Widget_AppCompat_ButtonBar
+style Base_Widget_AppCompat_ButtonBar_AlertDialog
+style Base_Widget_AppCompat_Button_Borderless
+style Base_Widget_AppCompat_Button_Borderless_Colored
+style Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
+style Base_Widget_AppCompat_Button_Colored
+style Base_Widget_AppCompat_Button_Small
+style Base_Widget_AppCompat_CompoundButton_CheckBox
+style Base_Widget_AppCompat_CompoundButton_RadioButton
+style Base_Widget_AppCompat_CompoundButton_Switch
+style Base_Widget_AppCompat_DrawerArrowToggle
+style Base_Widget_AppCompat_DrawerArrowToggle_Common
+style Base_Widget_AppCompat_DropDownItem_Spinner
+style Base_Widget_AppCompat_EditText
+style Base_Widget_AppCompat_ImageButton
+style Base_Widget_AppCompat_Light_ActionBar
+style Base_Widget_AppCompat_Light_ActionBar_Solid
+style Base_Widget_AppCompat_Light_ActionBar_TabBar
+style Base_Widget_AppCompat_Light_ActionBar_TabText
+style Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
+style Base_Widget_AppCompat_Light_ActionBar_TabView
+style Base_Widget_AppCompat_Light_PopupMenu
+style Base_Widget_AppCompat_Light_PopupMenu_Overflow
+style Base_Widget_AppCompat_ListMenuView
+style Base_Widget_AppCompat_ListPopupWindow
+style Base_Widget_AppCompat_ListView
+style Base_Widget_AppCompat_ListView_DropDown
+style Base_Widget_AppCompat_ListView_Menu
+style Base_Widget_AppCompat_PopupMenu
+style Base_Widget_AppCompat_PopupMenu_Overflow
+style Base_Widget_AppCompat_PopupWindow
+style Base_Widget_AppCompat_ProgressBar
+style Base_Widget_AppCompat_ProgressBar_Horizontal
+style Base_Widget_AppCompat_RatingBar
+style Base_Widget_AppCompat_RatingBar_Indicator
+style Base_Widget_AppCompat_RatingBar_Small
+style Base_Widget_AppCompat_SearchView
+style Base_Widget_AppCompat_SearchView_ActionBar
+style Base_Widget_AppCompat_SeekBar
+style Base_Widget_AppCompat_SeekBar_Discrete
+style Base_Widget_AppCompat_Spinner
+style Base_Widget_AppCompat_Spinner_Underlined
+style Base_Widget_AppCompat_TextView
+style Base_Widget_AppCompat_TextView_SpinnerItem
+style Base_Widget_AppCompat_Toolbar
+style Base_Widget_AppCompat_Toolbar_Button_Navigation
+style CalendarDatePickerDialog
+style CalendarDatePickerStyle
+style DialogAnimationFade
+style DialogAnimationSlide
+style Platform_AppCompat
+style Platform_AppCompat_Light
+style Platform_ThemeOverlay_AppCompat
+style Platform_ThemeOverlay_AppCompat_Dark
+style Platform_ThemeOverlay_AppCompat_Light
+style Platform_V21_AppCompat
+style Platform_V21_AppCompat_Light
+style Platform_V25_AppCompat
+style Platform_V25_AppCompat_Light
+style Platform_Widget_AppCompat_Spinner
+style RtlOverlay_DialogWindowTitle_AppCompat
+style RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
+style RtlOverlay_Widget_AppCompat_DialogTitle_Icon
+style RtlOverlay_Widget_AppCompat_PopupMenuItem
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
+style RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
+style RtlOverlay_Widget_AppCompat_SearchView_MagIcon
+style RtlOverlay_Widget_AppCompat_Search_DropDown
+style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
+style RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
+style RtlOverlay_Widget_AppCompat_Search_DropDown_Query
+style RtlOverlay_Widget_AppCompat_Search_DropDown_Text
+style RtlUnderlay_Widget_AppCompat_ActionButton
+style RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
+style SpinnerDatePickerDialog
+style SpinnerDatePickerStyle
+style TextAppearance_AppCompat
+style TextAppearance_AppCompat_Body1
+style TextAppearance_AppCompat_Body2
+style TextAppearance_AppCompat_Button
+style TextAppearance_AppCompat_Caption
+style TextAppearance_AppCompat_Display1
+style TextAppearance_AppCompat_Display2
+style TextAppearance_AppCompat_Display3
+style TextAppearance_AppCompat_Display4
+style TextAppearance_AppCompat_Headline
+style TextAppearance_AppCompat_Inverse
+style TextAppearance_AppCompat_Large
+style TextAppearance_AppCompat_Large_Inverse
+style TextAppearance_AppCompat_Light_SearchResult_Subtitle
+style TextAppearance_AppCompat_Light_SearchResult_Title
+style TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
+style TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
+style TextAppearance_AppCompat_Medium
+style TextAppearance_AppCompat_Medium_Inverse
+style TextAppearance_AppCompat_Menu
+style TextAppearance_AppCompat_SearchResult_Subtitle
+style TextAppearance_AppCompat_SearchResult_Title
+style TextAppearance_AppCompat_Small
+style TextAppearance_AppCompat_Small_Inverse
+style TextAppearance_AppCompat_Subhead
+style TextAppearance_AppCompat_Subhead_Inverse
+style TextAppearance_AppCompat_Title
+style TextAppearance_AppCompat_Title_Inverse
+style TextAppearance_AppCompat_Tooltip
+style TextAppearance_AppCompat_Widget_ActionBar_Menu
+style TextAppearance_AppCompat_Widget_ActionBar_Subtitle
+style TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
+style TextAppearance_AppCompat_Widget_ActionBar_Title
+style TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
+style TextAppearance_AppCompat_Widget_ActionMode_Subtitle
+style TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
+style TextAppearance_AppCompat_Widget_ActionMode_Title
+style TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
+style TextAppearance_AppCompat_Widget_Button
+style TextAppearance_AppCompat_Widget_Button_Borderless_Colored
+style TextAppearance_AppCompat_Widget_Button_Colored
+style TextAppearance_AppCompat_Widget_Button_Inverse
+style TextAppearance_AppCompat_Widget_DropDownItem
+style TextAppearance_AppCompat_Widget_PopupMenu_Header
+style TextAppearance_AppCompat_Widget_PopupMenu_Large
+style TextAppearance_AppCompat_Widget_PopupMenu_Small
+style TextAppearance_AppCompat_Widget_Switch
+style TextAppearance_AppCompat_Widget_TextView_SpinnerItem
+style TextAppearance_Compat_Notification
+style TextAppearance_Compat_Notification_Info
+style TextAppearance_Compat_Notification_Line2
+style TextAppearance_Compat_Notification_Time
+style TextAppearance_Compat_Notification_Title
+style TextAppearance_Widget_AppCompat_ExpandedMenu_Item
+style TextAppearance_Widget_AppCompat_Toolbar_Subtitle
+style TextAppearance_Widget_AppCompat_Toolbar_Title
+style Theme
+style ThemeOverlay_AppCompat
+style ThemeOverlay_AppCompat_ActionBar
+style ThemeOverlay_AppCompat_Dark
+style ThemeOverlay_AppCompat_Dark_ActionBar
+style ThemeOverlay_AppCompat_DayNight
+style ThemeOverlay_AppCompat_DayNight_ActionBar
+style ThemeOverlay_AppCompat_Dialog
+style ThemeOverlay_AppCompat_Dialog_Alert
+style ThemeOverlay_AppCompat_Light
+style Theme_AppCompat
+style Theme_AppCompat_CompactMenu
+style Theme_AppCompat_DayNight
+style Theme_AppCompat_DayNight_DarkActionBar
+style Theme_AppCompat_DayNight_Dialog
+style Theme_AppCompat_DayNight_DialogWhenLarge
+style Theme_AppCompat_DayNight_Dialog_Alert
+style Theme_AppCompat_DayNight_Dialog_MinWidth
+style Theme_AppCompat_DayNight_NoActionBar
+style Theme_AppCompat_Dialog
+style Theme_AppCompat_DialogWhenLarge
+style Theme_AppCompat_Dialog_Alert
+style Theme_AppCompat_Dialog_MinWidth
+style Theme_AppCompat_Empty
+style Theme_AppCompat_Light
+style Theme_AppCompat_Light_DarkActionBar
+style Theme_AppCompat_Light_Dialog
+style Theme_AppCompat_Light_DialogWhenLarge
+style Theme_AppCompat_Light_Dialog_Alert
+style Theme_AppCompat_Light_Dialog_MinWidth
+style Theme_AppCompat_Light_NoActionBar
+style Theme_AppCompat_NoActionBar
+style Theme_AutofillInlineSuggestion
+style Theme_Catalyst
+style Theme_Catalyst_LogBox
+style Theme_Catalyst_RedBox
+style Theme_FullScreenDialog
+style Theme_FullScreenDialogAnimatedFade
+style Theme_FullScreenDialogAnimatedSlide
+style Theme_ReactNative_AppCompat_Light
+style Theme_ReactNative_AppCompat_Light_NoActionBar_FullScreen
+style Widget_AppCompat_ActionBar
+style Widget_AppCompat_ActionBar_Solid
+style Widget_AppCompat_ActionBar_TabBar
+style Widget_AppCompat_ActionBar_TabText
+style Widget_AppCompat_ActionBar_TabView
+style Widget_AppCompat_ActionButton
+style Widget_AppCompat_ActionButton_CloseMode
+style Widget_AppCompat_ActionButton_Overflow
+style Widget_AppCompat_ActionMode
+style Widget_AppCompat_ActivityChooserView
+style Widget_AppCompat_AutoCompleteTextView
+style Widget_AppCompat_Button
+style Widget_AppCompat_ButtonBar
+style Widget_AppCompat_ButtonBar_AlertDialog
+style Widget_AppCompat_Button_Borderless
+style Widget_AppCompat_Button_Borderless_Colored
+style Widget_AppCompat_Button_ButtonBar_AlertDialog
+style Widget_AppCompat_Button_Colored
+style Widget_AppCompat_Button_Small
+style Widget_AppCompat_CompoundButton_CheckBox
+style Widget_AppCompat_CompoundButton_RadioButton
+style Widget_AppCompat_CompoundButton_Switch
+style Widget_AppCompat_DrawerArrowToggle
+style Widget_AppCompat_DropDownItem_Spinner
+style Widget_AppCompat_EditText
+style Widget_AppCompat_ImageButton
+style Widget_AppCompat_Light_ActionBar
+style Widget_AppCompat_Light_ActionBar_Solid
+style Widget_AppCompat_Light_ActionBar_Solid_Inverse
+style Widget_AppCompat_Light_ActionBar_TabBar
+style Widget_AppCompat_Light_ActionBar_TabBar_Inverse
+style Widget_AppCompat_Light_ActionBar_TabText
+style Widget_AppCompat_Light_ActionBar_TabText_Inverse
+style Widget_AppCompat_Light_ActionBar_TabView
+style Widget_AppCompat_Light_ActionBar_TabView_Inverse
+style Widget_AppCompat_Light_ActionButton
+style Widget_AppCompat_Light_ActionButton_CloseMode
+style Widget_AppCompat_Light_ActionButton_Overflow
+style Widget_AppCompat_Light_ActionMode_Inverse
+style Widget_AppCompat_Light_ActivityChooserView
+style Widget_AppCompat_Light_AutoCompleteTextView
+style Widget_AppCompat_Light_DropDownItem_Spinner
+style Widget_AppCompat_Light_ListPopupWindow
+style Widget_AppCompat_Light_ListView_DropDown
+style Widget_AppCompat_Light_PopupMenu
+style Widget_AppCompat_Light_PopupMenu_Overflow
+style Widget_AppCompat_Light_SearchView
+style Widget_AppCompat_Light_Spinner_DropDown_ActionBar
+style Widget_AppCompat_ListMenuView
+style Widget_AppCompat_ListPopupWindow
+style Widget_AppCompat_ListView
+style Widget_AppCompat_ListView_DropDown
+style Widget_AppCompat_ListView_Menu
+style Widget_AppCompat_PopupMenu
+style Widget_AppCompat_PopupMenu_Overflow
+style Widget_AppCompat_PopupWindow
+style Widget_AppCompat_ProgressBar
+style Widget_AppCompat_ProgressBar_Horizontal
+style Widget_AppCompat_RatingBar
+style Widget_AppCompat_RatingBar_Indicator
+style Widget_AppCompat_RatingBar_Small
+style Widget_AppCompat_SearchView
+style Widget_AppCompat_SearchView_ActionBar
+style Widget_AppCompat_SeekBar
+style Widget_AppCompat_SeekBar_Discrete
+style Widget_AppCompat_Spinner
+style Widget_AppCompat_Spinner_DropDown
+style Widget_AppCompat_Spinner_DropDown_ActionBar
+style Widget_AppCompat_Spinner_Underlined
+style Widget_AppCompat_TextView
+style Widget_AppCompat_TextView_SpinnerItem
+style Widget_AppCompat_Toolbar
+style Widget_AppCompat_Toolbar_Button_Navigation
+style Widget_Autofill
+style Widget_Autofill_InlineSuggestionChip
+style Widget_Autofill_InlineSuggestionEndIconStyle
+style Widget_Autofill_InlineSuggestionStartIconStyle
+style Widget_Autofill_InlineSuggestionSubtitle
+style Widget_Autofill_InlineSuggestionTitle
+style Widget_Compat_NotificationActionContainer
+style Widget_Compat_NotificationActionText
+style amu_Bubble_TextAppearance_Dark
+style amu_Bubble_TextAppearance_Light
+style amu_ClusterIcon_TextAppearance
+style redboxButton
+styleable ActionBar background backgroundSplit backgroundStacked contentInsetEnd contentInsetEndWithActions contentInsetLeft contentInsetRight contentInsetStart contentInsetStartWithNavigation customNavigationLayout displayOptions divider elevation height hideOnContentScroll homeAsUpIndicator homeLayout icon indeterminateProgressStyle itemPadding logo navigationMode popupTheme progressBarPadding progressBarStyle subtitle subtitleTextStyle title titleTextStyle
+styleable ActionBarLayout android_layout_gravity
+styleable ActionMenuItemView android_minWidth
+styleable ActionMenuView
+styleable ActionMode background backgroundSplit closeItemLayout height subtitleTextStyle titleTextStyle
+styleable ActivityChooserView expandActivityOverflowButtonDrawable initialActivityCount
+styleable AlertDialog android_layout buttonIconDimen buttonPanelSideLayout listItemLayout listLayout multiChoiceItemLayout showTitle singleChoiceItemLayout
+styleable AnimatedStateListDrawableCompat android_constantSize android_dither android_enterFadeDuration android_exitFadeDuration android_variablePadding android_visible
+styleable AnimatedStateListDrawableItem android_drawable android_id
+styleable AnimatedStateListDrawableTransition android_drawable android_fromId android_reversible android_toId
+styleable AppCompatEmojiHelper
+styleable AppCompatImageView android_src srcCompat tint tintMode
+styleable AppCompatSeekBar android_thumb tickMark tickMarkTint tickMarkTintMode
+styleable AppCompatTextHelper android_drawableBottom android_drawableEnd android_drawableLeft android_drawableRight android_drawableStart android_drawableTop android_textAppearance
+styleable AppCompatTextView android_textAppearance autoSizeMaxTextSize autoSizeMinTextSize autoSizePresetSizes autoSizeStepGranularity autoSizeTextType drawableBottomCompat drawableEndCompat drawableLeftCompat drawableRightCompat drawableStartCompat drawableTint drawableTintMode drawableTopCompat emojiCompatEnabled firstBaselineToTopHeight fontFamily fontVariationSettings lastBaselineToBottomHeight lineHeight textAllCaps textLocale
+styleable AppCompatTheme actionBarDivider actionBarItemBackground actionBarPopupTheme actionBarSize actionBarSplitStyle actionBarStyle actionBarTabBarStyle actionBarTabStyle actionBarTabTextStyle actionBarTheme actionBarWidgetTheme actionButtonStyle actionDropDownStyle actionMenuTextAppearance actionMenuTextColor actionModeBackground actionModeCloseButtonStyle actionModeCloseContentDescription actionModeCloseDrawable actionModeCopyDrawable actionModeCutDrawable actionModeFindDrawable actionModePasteDrawable actionModePopupWindowStyle actionModeSelectAllDrawable actionModeShareDrawable actionModeSplitBackground actionModeStyle actionModeTheme actionModeWebSearchDrawable actionOverflowButtonStyle actionOverflowMenuStyle activityChooserViewStyle alertDialogButtonGroupStyle alertDialogCenterButtons alertDialogStyle alertDialogTheme android_windowAnimationStyle android_windowIsFloating autoCompleteTextViewStyle borderlessButtonStyle buttonBarButtonStyle buttonBarNegativeButtonStyle buttonBarNeutralButtonStyle buttonBarPositiveButtonStyle buttonBarStyle buttonStyle buttonStyleSmall checkboxStyle checkedTextViewStyle colorAccent colorBackgroundFloating colorButtonNormal colorControlActivated colorControlHighlight colorControlNormal colorError colorPrimary colorPrimaryDark colorSwitchThumbNormal controlBackground dialogCornerRadius dialogPreferredPadding dialogTheme dividerHorizontal dividerVertical dropDownListViewStyle dropdownListPreferredItemHeight editTextBackground editTextColor editTextStyle homeAsUpIndicator imageButtonStyle listChoiceBackgroundIndicator listChoiceIndicatorMultipleAnimated listChoiceIndicatorSingleAnimated listDividerAlertDialog listMenuViewStyle listPopupWindowStyle listPreferredItemHeight listPreferredItemHeightLarge listPreferredItemHeightSmall listPreferredItemPaddingEnd listPreferredItemPaddingLeft listPreferredItemPaddingRight listPreferredItemPaddingStart panelBackground panelMenuListTheme panelMenuListWidth popupMenuStyle popupWindowStyle radioButtonStyle ratingBarStyle ratingBarStyleIndicator ratingBarStyleSmall searchViewStyle seekBarStyle selectableItemBackground selectableItemBackgroundBorderless spinnerDropDownItemStyle spinnerStyle switchStyle textAppearanceLargePopupMenu textAppearanceListItem textAppearanceListItemSecondary textAppearanceListItemSmall textAppearancePopupMenuHeader textAppearanceSearchResultSubtitle textAppearanceSearchResultTitle textAppearanceSmallPopupMenu textColorAlertDialogListItem textColorSearchUrl toolbarNavigationButtonStyle toolbarStyle tooltipForegroundColor tooltipFrameBackground viewInflaterClass windowActionBar windowActionBarOverlay windowActionModeOverlay windowFixedHeightMajor windowFixedHeightMinor windowFixedWidthMajor windowFixedWidthMinor windowMinWidthMajor windowMinWidthMinor windowNoTitle
+styleable Autofill_InlineSuggestion autofillInlineSuggestionChip autofillInlineSuggestionEndIconStyle autofillInlineSuggestionStartIconStyle autofillInlineSuggestionSubtitle autofillInlineSuggestionTitle isAutofillInlineSuggestionTheme
+styleable ButtonBarLayout allowStacking
+styleable Capability queryPatterns shortcutMatchRequired
+styleable CheckedTextView android_checkMark checkMarkCompat checkMarkTint checkMarkTintMode
+styleable ColorStateListItem alpha android_alpha android_color android_lStar lStar
+styleable CompoundButton android_button buttonCompat buttonTint buttonTintMode
+styleable DrawerArrowToggle arrowHeadLength arrowShaftLength barLength color drawableSize gapBetweenBars spinBars thickness
+styleable FontFamily fontProviderAuthority fontProviderCerts fontProviderFetchStrategy fontProviderFetchTimeout fontProviderPackage fontProviderQuery fontProviderSystemFontFamily
+styleable FontFamilyFont android_font android_fontStyle android_fontVariationSettings android_fontWeight android_ttcIndex font fontStyle fontVariationSettings fontWeight ttcIndex
+styleable Fragment android_id android_name android_tag
+styleable FragmentContainerView android_name android_tag
+styleable GenericDraweeHierarchy actualImageScaleType backgroundImage fadeDuration failureImage failureImageScaleType overlayImage placeholderImage placeholderImageScaleType pressedStateOverlayImage progressBarAutoRotateInterval progressBarImage progressBarImageScaleType retryImage retryImageScaleType roundAsCircle roundBottomEnd roundBottomLeft roundBottomRight roundBottomStart roundTopEnd roundTopLeft roundTopRight roundTopStart roundWithOverlayColor roundedCornerRadius roundingBorderColor roundingBorderPadding roundingBorderWidth viewAspectRatio
+styleable GradientColor android_centerColor android_centerX android_centerY android_endColor android_endX android_endY android_gradientRadius android_startColor android_startX android_startY android_tileMode android_type
+styleable GradientColorItem android_color android_offset
+styleable LinearLayoutCompat android_baselineAligned android_baselineAlignedChildIndex android_gravity android_orientation android_weightSum divider dividerPadding measureWithLargestChild showDividers
+styleable LinearLayoutCompat_Layout android_layout_gravity android_layout_height android_layout_weight android_layout_width
+styleable ListPopupWindow android_dropDownHorizontalOffset android_dropDownVerticalOffset
+styleable LoadingImageView circleCrop imageAspectRatio imageAspectRatioAdjust
+styleable MapAttrs ambientEnabled backgroundColor cameraBearing cameraMaxZoomPreference cameraMinZoomPreference cameraTargetLat cameraTargetLng cameraTilt cameraZoom latLngBoundsNorthEastLatitude latLngBoundsNorthEastLongitude latLngBoundsSouthWestLatitude latLngBoundsSouthWestLongitude liteMode mapId mapType uiCompass uiMapToolbar uiRotateGestures uiScrollGestures uiScrollGesturesDuringRotateOrZoom uiTiltGestures uiZoomControls uiZoomGestures useViewLifecycle zOrderOnTop
+styleable MenuGroup android_checkableBehavior android_enabled android_id android_menuCategory android_orderInCategory android_visible
+styleable MenuItem actionLayout actionProviderClass actionViewClass alphabeticModifiers android_alphabeticShortcut android_checkable android_checked android_enabled android_icon android_id android_menuCategory android_numericShortcut android_onClick android_orderInCategory android_title android_titleCondensed android_visible contentDescription iconTint iconTintMode numericModifiers showAsAction tooltipText
+styleable MenuView android_headerBackground android_horizontalDivider android_itemBackground android_itemIconDisabledAlpha android_itemTextAppearance android_verticalDivider android_windowAnimationStyle preserveIconSpacing subMenuArrow
+styleable PopupWindow android_popupAnimationStyle android_popupBackground overlapAnchor
+styleable PopupWindowBackgroundState state_above_anchor
+styleable RecycleListView paddingBottomNoButtons paddingTopNoTitle
+styleable SearchView android_focusable android_imeOptions android_inputType android_maxWidth closeIcon commitIcon defaultQueryHint goIcon iconifiedByDefault layout queryBackground queryHint searchHintIcon searchIcon submitBackground suggestionRowLayout voiceIcon
+styleable SignInButton buttonSize colorScheme scopeUris
+styleable SimpleDraweeView actualImageResource actualImageScaleType actualImageUri backgroundImage fadeDuration failureImage failureImageScaleType overlayImage placeholderImage placeholderImageScaleType pressedStateOverlayImage progressBarAutoRotateInterval progressBarImage progressBarImageScaleType retryImage retryImageScaleType roundAsCircle roundBottomEnd roundBottomLeft roundBottomRight roundBottomStart roundTopEnd roundTopLeft roundTopRight roundTopStart roundWithOverlayColor roundedCornerRadius roundingBorderColor roundingBorderPadding roundingBorderWidth viewAspectRatio
+styleable Spinner android_dropDownWidth android_entries android_popupBackground android_prompt popupTheme
+styleable StateListDrawable android_constantSize android_dither android_enterFadeDuration android_exitFadeDuration android_variablePadding android_visible
+styleable StateListDrawableItem android_drawable
+styleable SwitchCompat android_textOff android_textOn android_thumb showText splitTrack switchMinWidth switchPadding switchTextAppearance thumbTextPadding thumbTint thumbTintMode track trackTint trackTintMode
+styleable TextAppearance android_fontFamily android_shadowColor android_shadowDx android_shadowDy android_shadowRadius android_textColor android_textColorHint android_textColorLink android_textFontWeight android_textSize android_textStyle android_typeface fontFamily fontVariationSettings textAllCaps textLocale
+styleable Toolbar android_gravity android_minHeight buttonGravity collapseContentDescription collapseIcon contentInsetEnd contentInsetEndWithActions contentInsetLeft contentInsetRight contentInsetStart contentInsetStartWithNavigation logo logoDescription maxButtonHeight menu navigationContentDescription navigationIcon popupTheme subtitle subtitleTextAppearance subtitleTextColor title titleMargin titleMarginBottom titleMarginEnd titleMarginStart titleMarginTop titleMargins titleTextAppearance titleTextColor
+styleable View android_focusable android_theme paddingEnd paddingStart theme
+styleable ViewBackgroundHelper android_background backgroundTint backgroundTintMode
+styleable ViewStubCompat android_id android_inflatedId android_layout
+xml rn_dev_preferences
diff --git a/node_modules/react-native-maps/android/build/outputs/logs/manifest-merger-debug-report.txt b/node_modules/react-native-maps/android/build/outputs/logs/manifest-merger-debug-report.txt
new file mode 100644
index 0000000..c684e0e
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/outputs/logs/manifest-merger-debug-report.txt
@@ -0,0 +1,25 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:1:1-3:12
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:1:1-3:12
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:1:1-3:12
+	package
+		ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:2:5-44
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:1:11-69
+uses-sdk
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
diff --git a/node_modules/react-native-maps/android/build/outputs/logs/manifest-merger-release-report.txt b/node_modules/react-native-maps/android/build/outputs/logs/manifest-merger-release-report.txt
new file mode 100644
index 0000000..c684e0e
--- /dev/null
+++ b/node_modules/react-native-maps/android/build/outputs/logs/manifest-merger-release-report.txt
@@ -0,0 +1,25 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:1:1-3:12
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:1:1-3:12
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:1:1-3:12
+	package
+		ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:2:5-44
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml:1:11-69
+uses-sdk
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		ADDED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
+		INJECTED from /Users/mizutani/prg/ecorismap/ecorismap/node_modules/react-native-maps/android/src/main/AndroidManifest.xml
diff --git a/node_modules/react-native-maps/android/build/tmp/compileDebugJavaWithJavac/previous-compilation-data.bin b/node_modules/react-native-maps/android/build/tmp/compileDebugJavaWithJavac/previous-compilation-data.bin
new file mode 100644
index 0000000..d57db9c
Binary files /dev/null and b/node_modules/react-native-maps/android/build/tmp/compileDebugJavaWithJavac/previous-compilation-data.bin differ
diff --git a/node_modules/react-native-maps/android/build/tmp/compileReleaseJavaWithJavac/previous-compilation-data.bin b/node_modules/react-native-maps/android/build/tmp/compileReleaseJavaWithJavac/previous-compilation-data.bin
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTile.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTile.java
new file mode 100644
index 0000000..4a6eb27
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTile.java
@@ -0,0 +1,207 @@
+package com.airbnb.android.react.maps;
+
+import android.util.Log;
+
+import android.content.Context;
+
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.model.TileOverlay;
+import com.google.android.gms.maps.model.TileOverlayOptions;
+
+import java.net.MalformedURLException;
+import java.net.URL;
+
+public class AirMapPMTile extends AirMapFeature {
+  protected TileOverlayOptions tileOverlayOptions;
+  protected TileOverlay tileOverlay;
+  protected AirMapPMTileProvider tileProvider;
+
+  protected String urlTemplate;
+  protected float zIndex;
+  protected float maximumZ;
+  protected float maximumNativeZ = 100;
+  protected float minimumZ;
+  protected boolean flipY = false;
+  protected float tileSize = 256;
+  protected boolean doubleTileSize = false;
+  protected String tileCachePath;
+  protected float tileCacheMaxAge;
+  protected boolean offlineMode = false;
+  protected float opacity = 1;
+  protected Context context;
+  protected boolean customTileProviderNeeded = false;
+
+  public AirMapPMTile(Context context) {
+    super(context);
+    this.context = context;
+  }
+
+  public void setUrlTemplate(String urlTemplate) {
+    this.urlTemplate = urlTemplate;
+    if (tileProvider != null) {
+      tileProvider.setUrlTemplate(urlTemplate);
+    }
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setZIndex(float zIndex) {
+    this.zIndex = zIndex;
+    if (tileOverlay != null) {
+      tileOverlay.setZIndex(zIndex);
+    }
+  }
+
+  public void setMaximumZ(float maximumZ) {
+    this.maximumZ = maximumZ;
+    if (tileProvider != null) {
+      tileProvider.setMaximumZ((int)maximumZ);
+    }
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setMaximumNativeZ(float maximumNativeZ) {
+    this.maximumNativeZ = maximumNativeZ;
+    if (tileProvider != null) {
+      tileProvider.setMaximumNativeZ((int)maximumNativeZ);
+    }
+    setCustomTileProviderMode();
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setMinimumZ(float minimumZ) {
+    this.minimumZ = minimumZ;
+    if (tileProvider != null) {
+      tileProvider.setMinimumZ((int)minimumZ);
+    }
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setFlipY(boolean flipY) {
+    this.flipY = flipY;
+    if (tileProvider != null) {
+      tileProvider.setFlipY(flipY);
+    }
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setDoubleTileSize(boolean doubleTileSize) {
+    this.doubleTileSize = doubleTileSize;
+    if (tileProvider != null) {
+      tileProvider.setDoubleTileSize(doubleTileSize);
+    }
+    setCustomTileProviderMode();
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setTileSize(float tileSize) {
+    this.tileSize = tileSize;
+    if (tileProvider != null) {
+      tileProvider.setTileSize((int)tileSize);
+    }
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setTileCachePath(String tileCachePath) {
+    if (tileCachePath == null || tileCachePath.isEmpty()) return;
+    
+    try {
+      URL url = new URL(tileCachePath);
+      this.tileCachePath = url.getPath();
+    } catch (MalformedURLException e) {
+      this.tileCachePath = tileCachePath;
+    } catch (Exception e) {
+      return;
+    }
+
+    if (tileProvider != null) {
+      tileProvider.setTileCachePath(tileCachePath);
+    }
+    setCustomTileProviderMode();
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setTileCacheMaxAge(float tileCacheMaxAge) {
+    this.tileCacheMaxAge = tileCacheMaxAge;
+    if (tileProvider != null) {
+      tileProvider.setTileCacheMaxAge((int)tileCacheMaxAge);
+    }
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setOfflineMode(boolean offlineMode) {
+    this.offlineMode = offlineMode;
+    if (tileProvider != null) {
+      tileProvider.setOfflineMode(offlineMode);
+    }
+    if (tileOverlay != null) {
+      tileOverlay.clearTileCache();
+    }
+  }
+
+  public void setOpacity(float opacity) {
+    this.opacity = opacity;
+    if (tileOverlay != null) {
+        tileOverlay.setTransparency(1 - opacity);
+    }
+  }
+
+  public TileOverlayOptions getTileOverlayOptions() {
+    if (tileOverlayOptions == null) {
+      tileOverlayOptions = createTileOverlayOptions();
+    }
+    return tileOverlayOptions;
+  }
+
+  protected void setCustomTileProviderMode() {
+    Log.d("urlTile ", "creating new mode TileProvider");
+    this.customTileProviderNeeded = true;
+    if (tileProvider != null) {
+      tileProvider.setCustomMode();
+    }
+  } 
+
+  protected TileOverlayOptions createTileOverlayOptions() {
+    Log.d("urlTile ", "creating TileProvider");
+    TileOverlayOptions options = new TileOverlayOptions();
+    options.zIndex(zIndex);
+    options.transparency(1 - this.opacity);
+    this.tileProvider = new AirMapPMTileProvider((int)this.tileSize, this.doubleTileSize, this.urlTemplate, 
+      (int)this.maximumZ, (int)this.maximumNativeZ, (int)this.minimumZ, this.flipY, this.tileCachePath, 
+      (int)this.tileCacheMaxAge, this.offlineMode, this.context, this.customTileProviderNeeded);
+    options.tileProvider(this.tileProvider);
+    return options;
+  }
+
+  @Override
+  public Object getFeature() {
+    return tileOverlay;
+  }
+
+  @Override
+  public void addToMap(GoogleMap map) {
+    this.tileOverlay = map.addTileOverlay(getTileOverlayOptions());
+  }
+
+  @Override
+  public void removeFromMap(GoogleMap map) {
+    tileOverlay.remove();
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTileManager.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTileManager.java
new file mode 100644
index 0000000..c61300c
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTileManager.java
@@ -0,0 +1,90 @@
+package com.airbnb.android.react.maps;
+
+import android.content.Context;
+import android.util.DisplayMetrics;
+import android.util.Log;
+import android.view.WindowManager;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.uimanager.ThemedReactContext;
+import com.facebook.react.uimanager.ViewGroupManager;
+import com.facebook.react.uimanager.annotations.ReactProp;
+
+public class AirMapPMTileManager extends ViewGroupManager<AirMapPMTile> {
+
+  public AirMapPMTileManager(ReactApplicationContext reactContext) {
+    super();
+    Log.v("MainActivity", "AirMapPMTileManager");
+    DisplayMetrics metrics = new DisplayMetrics();
+    ((WindowManager) reactContext.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRealMetrics(metrics);
+  }
+
+  @Override
+  public String getName() {
+    return "AIRMapPMTile";
+  }
+
+  @Override
+  public AirMapPMTile createViewInstance(ThemedReactContext context) {
+    return new AirMapPMTile(context);
+  }
+
+  @ReactProp(name = "urlTemplate")
+  public void setUrlTemplate(AirMapPMTile view, String urlTemplate) {
+    view.setUrlTemplate(urlTemplate);
+  }
+
+  @ReactProp(name = "zIndex", defaultFloat = -1.0f)
+  public void setZIndex(AirMapPMTile view, float zIndex) {
+    view.setZIndex(zIndex);
+  }
+
+  @ReactProp(name = "minimumZ", defaultFloat = 0.0f)
+  public void setMinimumZ(AirMapPMTile view, float minimumZ) {
+    view.setMinimumZ(minimumZ);
+  }
+
+  @ReactProp(name = "maximumZ", defaultFloat = 100.0f)
+  public void setMaximumZ(AirMapPMTile view, float maximumZ) {
+    view.setMaximumZ(maximumZ);
+  }
+
+  @ReactProp(name = "maximumNativeZ", defaultFloat = 100.0f)
+  public void setMaximumNativeZ(AirMapPMTile view, float maximumNativeZ) {
+    view.setMaximumNativeZ(maximumNativeZ);
+  }
+
+  @ReactProp(name = "flipY", defaultBoolean = false)
+  public void setFlipY(AirMapPMTile view, boolean flipY) {
+    view.setFlipY(flipY);
+  }
+
+  @ReactProp(name = "tileSize", defaultFloat = 256.0f)
+  public void setTileSize(AirMapPMTile view, float tileSize) {
+    view.setTileSize(tileSize);
+  }
+
+  @ReactProp(name = "doubleTileSize", defaultBoolean = false)
+  public void setDoubleTileSize(AirMapPMTile view, boolean doubleTileSize) {
+    view.setDoubleTileSize(doubleTileSize);
+  }
+
+  @ReactProp(name = "tileCachePath")
+  public void setTileCachePath(AirMapPMTile view, String tileCachePath) {
+    view.setTileCachePath(tileCachePath);
+  }
+
+  @ReactProp(name = "tileCacheMaxAge", defaultFloat = 0.0f)
+  public void setTileCacheMaxAge(AirMapPMTile view, float tileCacheMaxAge) {
+    view.setTileCacheMaxAge(tileCacheMaxAge);
+  }
+
+  @ReactProp(name = "offlineMode", defaultBoolean = false)
+  public void setOfflineMode(AirMapPMTile view, boolean offlineMode) {
+    view.setOfflineMode(offlineMode);
+  }
+
+  @ReactProp(name = "opacity", defaultFloat = 1.0f)
+  public void setOpacity(AirMapPMTile view, float opacity) {
+    view.setOpacity(opacity);
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTileProvider.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTileProvider.java
new file mode 100644
index 0000000..21c8a47
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapPMTileProvider.java
@@ -0,0 +1,979 @@
+package com.airbnb.android.react.maps;
+
+import PMTiles.PMTiles;
+import PMTiles.RangeResponse;
+import StyleLayer.LayoutStyle;
+import StyleLayer.PaintStyle;
+import StyleLayer.StyleLayer;
+import VectorTileStyleManager.VectorTileStyleManager;
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.PointF;
+import android.graphics.Rect;
+import android.graphics.Typeface;
+import android.util.Log;
+import androidx.annotation.NonNull;
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.model.Tile;
+import com.google.android.gms.maps.model.TileOverlay;
+import com.google.android.gms.maps.model.TileOverlayOptions;
+import com.google.android.gms.maps.model.TileProvider;
+import com.google.protobuf.InvalidProtocolBufferException;
+import java.io.BufferedReader;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.lang.System;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.net.URLConnection;
+import java.nio.ByteBuffer;
+import java.nio.charset.StandardCharsets;
+import java.util.ArrayList;
+import java.util.Base64;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Objects;
+import java.util.Optional;
+import java.util.Random;
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.Future;
+import java.util.concurrent.TimeUnit;
+import vector_tile.VectorTile;
+import vector_tile.VectorTile.Tile.Feature;
+import vector_tile.VectorTile.Tile.GeomType;
+import vector_tile.VectorTile.Tile.Layer;
+import vector_tile.VectorTile.Tile.Value;
+
+public class AirMapPMTileProvider implements TileProvider {
+
+  protected static final int BUFFER_SIZE = 16 * 1024;
+  protected static final int TARGET_TILE_SIZE = 512;
+  protected String urlTemplate;
+  protected int tileSize;
+  protected boolean doubleTileSize;
+  protected int maximumZ;
+  protected int maximumNativeZ;
+  protected int minimumZ;
+  protected boolean flipY;
+  protected String tileCachePath;
+  protected int tileCacheMaxAge;
+  protected boolean offlineMode;
+  protected Context context;
+  protected boolean customMode;
+  protected PMTiles pmtiles;
+  protected VectorTileStyleManager styleManager;
+
+  public AirMapPMTileProvider(
+    int tileSizet,
+    boolean doubleTileSize,
+    String urlTemplate,
+    int maximumZ,
+    int maximumNativeZ,
+    int minimumZ,
+    boolean flipY,
+    String tileCachePath,
+    int tileCacheMaxAge,
+    boolean offlineMode,
+    Context context,
+    boolean customMode
+  ) {
+    this.tileSize = tileSizet;
+    this.doubleTileSize = doubleTileSize;
+    this.urlTemplate = urlTemplate;
+    this.maximumZ = maximumZ;
+    this.maximumNativeZ = maximumNativeZ;
+    this.minimumZ = minimumZ;
+    this.flipY = flipY;
+    this.tileCachePath = tileCachePath;
+    this.tileCacheMaxAge = tileCacheMaxAge;
+    this.offlineMode = offlineMode;
+    this.context = context;
+    this.customMode = customMode;
+    this.pmtiles = new PMTiles(urlTemplate, null, null);
+    this.styleManager = new VectorTileStyleManager(urlTemplate, tileCachePath);
+  }
+
+  @Override
+  public Tile getTile(int x, int y, int zoom) {
+    // if (!this.customMode) return getPMTile(x, y, zoom);
+
+    byte[] image = null;
+    int maximumZ = this.maximumZ > 0 ? this.maximumZ : Integer.MAX_VALUE;
+
+    if (this.tileSize == 256 && this.doubleTileSize && zoom + 1 <= this.maximumNativeZ && zoom + 1 <= maximumZ) {
+      // Log.d("urlTile", "pullTilesFromHigherZoom");
+      image = pullTilesFromHigherZoom(x, y, zoom);
+    }
+
+    if (zoom > this.maximumNativeZ) {
+      // Log.d("urlTile", "scaleLowerZoomTile");
+      image = scaleLowerZoomTile(x, y, zoom, this.maximumNativeZ);
+    }
+
+    if (image == null && zoom <= maximumZ) {
+      // Log.d("urlTile", "getTileImage");
+      image = getTileImage(x, y, zoom);
+    }
+
+    if (image == null && this.tileCachePath != null && this.offlineMode) {
+      Log.d("urlTile", "findLowerZoomTileForScaling");
+      int zoomLevelToStart = (zoom > this.maximumNativeZ) ? this.maximumNativeZ - 1 : zoom - 1;
+      int minimumZoomToSearch = this.minimumZ >= zoom - 3 ? this.minimumZ : zoom - 3;
+      for (int tryZoom = zoomLevelToStart; tryZoom >= minimumZoomToSearch; tryZoom--) {
+        image = scaleLowerZoomTile(x, y, zoom, tryZoom);
+        if (image != null) {
+          break;
+        }
+      }
+    }
+
+    return image == null ? null : new Tile(this.tileSize, this.tileSize, image);
+  }
+
+  byte[] getTileImage(int x, int y, int zoom) {
+    byte[] image = null;
+    if (this.tileCachePath != null) {
+      image = readTileImage(x, y, zoom);
+      if (image != null && !this.offlineMode) {
+        boolean needRefresh = checkForRefresh(x, y, zoom);
+        if (needRefresh) {
+          image = null;
+        }
+      }
+    }
+    if (image == null && this.tileCachePath != null) {
+      // Log.d("urlTile", "Normal fetch");
+      image = fetchTile(x, y, zoom);
+      if (image != null) {
+        boolean success = writeTileImage(image, x, y, zoom);
+      }
+    }
+    return image;
+  }
+
+  byte[] pullTilesFromHigherZoom(int x, int y, int zoom) {
+    byte[] data;
+    Bitmap image = getNewBitmap();
+    Canvas canvas = new Canvas(image);
+    Paint paint = new Paint();
+
+    x = x * 2;
+    y = y * 2;
+    byte[] leftTop = getTileImage(x, y, zoom + 1);
+    byte[] leftBottom = getTileImage(x, y + 1, zoom + 1);
+    byte[] rightTop = getTileImage(x + 1, y, zoom + 1);
+    byte[] rightBottom = getTileImage(x + 1, y + 1, zoom + 1);
+
+    if (leftTop == null && leftBottom == null && rightTop == null && rightBottom == null) {
+      return null;
+    }
+
+    Bitmap bitmap;
+    if (leftTop != null) {
+      bitmap = BitmapFactory.decodeByteArray(leftTop, 0, leftTop.length);
+      canvas.drawBitmap(bitmap, 0, 0, paint);
+      bitmap.recycle();
+    }
+    if (leftBottom != null) {
+      bitmap = BitmapFactory.decodeByteArray(leftBottom, 0, leftBottom.length);
+      canvas.drawBitmap(bitmap, 0, 256, paint);
+      bitmap.recycle();
+    }
+    if (rightTop != null) {
+      bitmap = BitmapFactory.decodeByteArray(rightTop, 0, rightTop.length);
+      canvas.drawBitmap(bitmap, 256, 0, paint);
+      bitmap.recycle();
+    }
+    if (rightBottom != null) {
+      bitmap = BitmapFactory.decodeByteArray(rightBottom, 0, rightBottom.length);
+      canvas.drawBitmap(bitmap, 256, 256, paint);
+      bitmap.recycle();
+    }
+    data = bitmapToByteArray(image);
+    image.recycle();
+    return data;
+  }
+
+  Bitmap getNewBitmap() {
+    Bitmap image = Bitmap.createBitmap(TARGET_TILE_SIZE, TARGET_TILE_SIZE, Bitmap.Config.ARGB_8888);
+    image.eraseColor(Color.TRANSPARENT);
+    return image;
+  }
+
+  byte[] bitmapToByteArray(Bitmap bm) {
+    ByteArrayOutputStream bos = new ByteArrayOutputStream();
+    bm.compress(Bitmap.CompressFormat.PNG, 100, bos);
+
+    byte[] data = bos.toByteArray();
+    try {
+      bos.close();
+    } catch (Exception e) {
+      // e.printStackTrace();
+    }
+    return data;
+  }
+
+  byte[] scaleLowerZoomTile(int x, int y, int zoom, int maximumZoom) {
+    int overZoomLevel = zoom - maximumZoom;
+    int zoomFactor = 1 << overZoomLevel;
+
+    int xParent = x >> overZoomLevel;
+    int yParent = y >> overZoomLevel;
+    int zoomParent = zoom - overZoomLevel;
+
+    int xOffset = x % zoomFactor;
+    int yOffset = y % zoomFactor;
+    byte[] data;
+
+    Bitmap image = getNewBitmap();
+    Canvas canvas = new Canvas(image);
+    Paint paint = new Paint();
+    data = getTileImage(xParent, yParent, zoomParent);
+
+    if (data == null) return null;
+    Bitmap sourceImage;
+
+    sourceImage = BitmapFactory.decodeByteArray(data, 0, data.length);
+    int subTileSize = this.tileSize / zoomFactor;
+
+    Rect sourceRect = new Rect(
+      xOffset * subTileSize,
+      yOffset * subTileSize,
+      xOffset * subTileSize + subTileSize,
+      yOffset * subTileSize + subTileSize
+    );
+    Rect targetRect = new Rect(0, 0, TARGET_TILE_SIZE, TARGET_TILE_SIZE);
+    canvas.drawBitmap(sourceImage, sourceRect, targetRect, paint);
+    sourceImage.recycle();
+    data = bitmapToByteArray(image);
+
+    image.recycle();
+    return data;
+  }
+
+  boolean checkForRefresh(int x, int y, int zoom) {
+    String fileName = getTileFilename(x, y, zoom);
+    File file = new File(fileName);
+    long lastModified = file.lastModified();
+    long now = System.currentTimeMillis();
+
+    if ((now - lastModified) / 1000 > this.tileCacheMaxAge) {
+      return true;
+    }
+    return false;
+  }
+
+  void setColorByCategory(Paint paint, String categoryC) {
+    switch (categoryC) {
+      case "28":
+        paint.setColor(Color.CYAN);
+        break;
+      case "26":
+        paint.setColor(Color.GRAY);
+        break;
+      default:
+        paint.setColor(Color.WHITE);
+        break;
+    }
+  }
+
+  // メンバ変数として、colorMappingを定義
+  private HashMap<String, Integer> colorMapping = new HashMap<>();
+
+  // getColorToUse メソッドの定義
+  public int getColorToUse(Map<String, String> attributes, String key) {
+    String valueToUse = attributes.containsKey(key) ? (String) attributes.get(key) : "";
+
+    // すでに colorMapping で色が割り当てられている場合は、その色を使う
+    if (colorMapping.containsKey(valueToUse)) {
+      return colorMapping.get(valueToUse);
+    }
+
+    // ランダムな色を生成
+    Random rand = new Random();
+    float red = rand.nextInt(256) / 255.0f;
+    float green = rand.nextInt(256) / 255.0f;
+    float blue = rand.nextInt(256) / 255.0f;
+
+    int randomColor = Color.argb(255, (int) (red * 255), (int) (green * 255), (int) (blue * 255));
+
+    // valueToUseに基づいて色を選択
+    if ("28".equals(valueToUse)) {
+      randomColor = Color.argb(255, 135, 206, 250); // R: 0.53*255, G: 0.81*255, B: 0.98*255
+    }
+
+    // colorMapping に保存
+    colorMapping.put(valueToUse, randomColor);
+
+    return randomColor;
+  }
+
+  public HashMap<String, String> getFeatureAttributes(VectorTile.Tile.Layer layer, VectorTile.Tile.Feature feature) {
+    HashMap<String, String> attributeDict = new HashMap<>();
+    List<Integer> tagsArray = feature.getTagsList();
+    int tagsCount = tagsArray.size();
+
+    for (int i = 0; i < tagsCount; i += 2) {
+      int keyIndex = tagsArray.get(i);
+      int valueIndex = tagsArray.get(i + 1);
+
+      String key = layer.getKeys(keyIndex);
+      VectorTile.Tile.Value valueObj = layer.getValues(valueIndex);
+      String valueStr = "";
+
+      if (valueObj.hasStringValue()) {
+        valueStr = valueObj.getStringValue();
+      } else if (valueObj.hasIntValue()) {
+        valueStr = String.valueOf(valueObj.getIntValue());
+      } else if (valueObj.hasFloatValue()) {
+        valueStr = String.valueOf(valueObj.getFloatValue());
+      }
+      // 他の型についても同様に処理
+
+      attributeDict.put(key, valueStr);
+    }
+
+    return attributeDict;
+  }
+
+  public class PointData {
+
+    public float x;
+    public float y;
+
+    public PointData(float x, float y) {
+      this.x = x;
+      this.y = y;
+    }
+  }
+
+  public class PolygonData {
+
+    public Path path;
+    public float centerX;
+    public float centerY;
+
+    public PolygonData(Path path, float centerX, float centerY) {
+      this.path = path;
+      this.centerX = centerX;
+      this.centerY = centerY;
+    }
+  }
+
+  private List<PointData> createMultiPointData(List<Integer> geometryArray) {
+    List<PointData> points = new ArrayList<>();
+    int index = 0;
+    float cursorX = 0;
+    float cursorY = 0;
+    float scaleFactor = 512.0f / 4096.0f;
+    while (index < geometryArray.size()) {
+      int commandInteger = geometryArray.get(index++);
+      int commandId = commandInteger & 0x7;
+      int commandCount = commandInteger >> 3;
+
+      for (int i = 0; i < commandCount; ++i) {
+        int dx = ((geometryArray.get(index++) >> 1) ^ (-(geometryArray.get(index - 1) & 1)));
+        int dy = ((geometryArray.get(index++) >> 1) ^ (-(geometryArray.get(index - 1) & 1)));
+        cursorX += dx;
+        cursorY += dy;
+
+        float scaledX = cursorX * scaleFactor;
+        float scaledY = cursorY * scaleFactor;
+
+        if (commandId == 1) { // MoveTo
+          points.add(new PointData(scaledX, scaledY));
+        }
+      }
+    }
+    return points;
+  }
+
+  public class LineData {
+
+    public Path path;
+    public float centerX;
+    public float centerY;
+
+    public LineData(Path path, float centerX, float centerY) {
+      this.path = path;
+      this.centerX = centerX;
+      this.centerY = centerY;
+    }
+  }
+
+  private LineData createLinePath(List<Integer> geometryArray) {
+    Path path = new Path();
+    List<PointF> points = new ArrayList<>();
+    float[] lengths = new float[geometryArray.size() / 2]; // Approximate allocation
+    int lengthIndex = 0;
+    int index = 0;
+    float cursorX = 0;
+    float cursorY = 0;
+    float totalLength = 0;
+    float scaleFactor = 512.0f / 4096.0f;
+
+    while (index < geometryArray.size()) {
+      int commandInteger = geometryArray.get(index++);
+      int commandId = commandInteger & 0x7;
+      int commandCount = commandInteger >> 3;
+
+      for (int i = 0; i < commandCount; ++i) {
+        int dx = ((geometryArray.get(index++) >> 1) ^ (-(geometryArray.get(index - 1) & 1)));
+        int dy = ((geometryArray.get(index++) >> 1) ^ (-(geometryArray.get(index - 1) & 1)));
+        cursorX += dx;
+        cursorY += dy;
+
+        float scaledX = cursorX * scaleFactor;
+        float scaledY = cursorY * scaleFactor;
+
+        if (commandId == 2) { // LineTo
+          path.lineTo(scaledX, scaledY);
+          PointF lastPoint = points.isEmpty() ? new PointF(0, 0) : points.get(points.size() - 1);
+          float segmentLength = (float) Math.sqrt(
+            Math.pow(scaledX - lastPoint.x, 2) + Math.pow(scaledY - lastPoint.y, 2)
+          );
+          totalLength += segmentLength;
+          lengths[lengthIndex++] = totalLength;
+        } else if (commandId == 1) { // MoveTo
+          path.moveTo(scaledX, scaledY);
+        }
+        points.add(new PointF(scaledX, scaledY));
+      }
+    }
+
+    // Find the midpoint along the length of the line
+    float midLength = totalLength / 2;
+    PointF labelPoint = new PointF();
+    for (int i = 1; i < lengthIndex; i++) {
+      if (lengths[i] >= midLength) {
+        float ratio = (midLength - lengths[i - 1]) / (lengths[i] - lengths[i - 1]);
+        labelPoint.x = points.get(i - 1).x + ratio * (points.get(i).x - points.get(i - 1).x);
+        labelPoint.y = points.get(i - 1).y + ratio * (points.get(i).y - points.get(i - 1).y);
+        break;
+      }
+    }
+    return new LineData(path, labelPoint.x, labelPoint.y);
+  }
+
+  private PolygonData createPolygonPath(List<Integer> geometryArray) {
+    Path path = new Path();
+    path.setFillType(Path.FillType.EVEN_ODD);
+    float totalX = 0;
+    float totalY = 0;
+    int pointCount = 0;
+    int index = 0;
+    float cursorX = 0;
+    float cursorY = 0;
+    float scaleFactor = 512.0f / 4096.0f; // タイルのサイズ / extent
+
+    while (index < geometryArray.size()) {
+      if (index >= geometryArray.size()) {
+        // Array index out of bounds, handle the error
+        break;
+      }
+
+      int commandInteger = geometryArray.get(index++);
+      int commandId = commandInteger & 0x7; // lower 3 bits
+      int commandCount = commandInteger >> 3; // higher bits
+
+      for (int i = 0; i < commandCount; ++i) {
+        if (index + 1 >= geometryArray.size()) {
+          // Array index out of bounds, handle the error
+          break;
+        }
+
+        int dx = ((geometryArray.get(index++) >> 1) ^ (-(geometryArray.get(index - 1) & 1)));
+        int dy = ((geometryArray.get(index++) >> 1) ^ (-(geometryArray.get(index - 1) & 1)));
+        cursorX += dx;
+        cursorY += dy;
+
+        float scaledX = cursorX * scaleFactor;
+        float scaledY = cursorY * scaleFactor;
+
+        if (commandId == 1) { // MoveTo
+          path.moveTo(scaledX, scaledY);
+        } else if (commandId == 2) { // LineTo
+          path.lineTo(scaledX, scaledY);
+        }
+
+        totalX += scaledX;
+        totalY += scaledY;
+        pointCount++;
+      }
+
+      if (commandId == 7) { // ClosePath
+        path.close();
+      }
+    }
+
+    float centerX = totalX / pointCount;
+    float centerY = totalY / pointCount;
+
+    return new PolygonData(path, centerX, centerY);
+  }
+
+  public void applyStyle(Canvas canvas, StyleLayer styleLayer, VectorSource source) {
+    String type = styleLayer.type;
+
+    if ("circle".equals(type)) {
+      Paint circlePaint = new Paint();
+
+      for (FeatureData feature : source.features) {
+        if (!(feature.geometry instanceof List<?>)) return;
+        Map<String, String> attributes = feature.attributes;
+        String circleColor = styleLayer.paint.circleColor;
+        circlePaint.setColor(Color.parseColor(circleColor));
+        circlePaint.setStyle(Paint.Style.FILL);
+        List<PointData> points = (List<PointData>) feature.geometry;
+        for (PointData point : points) {
+          float scaledX = point.x;
+          float scaledY = point.y;
+          canvas.drawCircle(scaledX, scaledY, 5, circlePaint);
+        }
+      }
+    } else if ("line".equals(type)) {
+      System.out.println("!!applyStyle: " + source.name);
+      Paint linePaint = new Paint();
+      for (FeatureData feature : source.features) {
+        Map<String, String> attributes = feature.attributes;
+        Path path;
+        if (feature.geometry instanceof LineData) {
+          LineData line = (LineData) feature.geometry;
+          path = line.path;
+        } else if (feature.geometry instanceof PolygonData) {
+          PolygonData polygon = (PolygonData) feature.geometry;
+          path = polygon.path;
+        } else {
+          return;
+        }
+
+        String lineColor = styleLayer.paint.lineColor;
+        float lineWidth = styleLayer.paint.lineWidth;
+
+        linePaint.setColor(Color.parseColor(lineColor));
+        linePaint.setStyle(Paint.Style.STROKE);
+        linePaint.setStrokeWidth(lineWidth);
+        canvas.drawPath(path, linePaint);
+      }
+    } else if ("fill".equals(type)) {
+      Paint fillPaint = new Paint();
+      Paint strokePaint = new Paint();
+      for (FeatureData feature : source.features) {
+        if (!(feature.geometry instanceof PolygonData)) return;
+        PolygonData polygon = (PolygonData) feature.geometry;
+        String fillColor = styleLayer.paint.fillColor;
+        String lineColor = styleLayer.paint.lineColor;
+
+        fillPaint.setColor(Color.parseColor(fillColor));
+        fillPaint.setStyle(Paint.Style.FILL);
+
+        strokePaint.setColor(Color.parseColor(lineColor));
+        strokePaint.setStyle(Paint.Style.STROKE);
+        strokePaint.setStrokeWidth(2);
+
+        // Draw the path
+        canvas.drawPath(polygon.path, fillPaint); // 塗りつぶし
+        canvas.drawPath(polygon.path, strokePaint); // ストローク
+      }
+    } else if ("symbol".equals(type)) {
+      Paint textStrokePaint = new Paint();
+      Paint textFillPaint = new Paint();
+
+      for (FeatureData feature : source.features) {
+        Map<String, String> attributes = feature.attributes;
+
+        float X = 0;
+        float Y = 0;
+        if ((feature.geometry instanceof List<?>)) {
+          List<PointData> multiPoints = (List<PointData>) feature.geometry;
+          X = multiPoints.get(0).x;
+          Y = multiPoints.get(0).y;
+        } else if ((feature.geometry instanceof LineData)) {
+          LineData line = (LineData) feature.geometry;
+          X = line.centerX;
+          Y = line.centerY;
+        } else if ((feature.geometry instanceof PolygonData)) {
+          PolygonData polygon = (PolygonData) feature.geometry;
+          X = polygon.centerX;
+          Y = polygon.centerY;
+        }
+
+        int labelSize = styleLayer.layout.textSize;
+        String labelHaloColor = styleLayer.paint.textHaloColor;
+        float labelHaloWidth = styleLayer.paint.textHaloWidth;
+        String labelField = styleLayer.layout.textField.get(1);
+        if (attributes == null) continue;
+        String label = attributes.getOrDefault(labelField, "");
+        //String label = labelField;
+        String labelColor = styleLayer.paint.textColor;
+
+        textStrokePaint.setColor(Color.parseColor(labelHaloColor)); // 縁取りの色は白です。
+        textStrokePaint.setTextSize(labelSize);
+        textStrokePaint.setStyle(Paint.Style.STROKE);
+        textStrokePaint.setStrokeWidth(labelHaloWidth); // 縁取りの太さを2に設定
+        textStrokePaint.setTextAlign(Paint.Align.CENTER);
+
+        textFillPaint.setColor(Color.parseColor(labelColor));
+        textFillPaint.setTextSize(labelSize);
+        textFillPaint.setStyle(Paint.Style.FILL);
+        textFillPaint.setTextAlign(Paint.Align.CENTER);
+
+        canvas.drawText(label, X, Y, textStrokePaint);
+        canvas.drawText(label, X, Y, textFillPaint);
+      }
+    } else {
+      return;
+    }
+  }
+
+  public class VectorSource {
+
+    public String name;
+    public List<FeatureData> features;
+
+    public VectorSource(String name, List<FeatureData> features) {
+      this.name = name;
+      this.features = features;
+    }
+  }
+
+  public class FeatureData {
+
+    public Map<String, String> attributes;
+    public Object geometry;
+
+    public FeatureData(Map<String, String> attributes, Object geometry) {
+      this.attributes = attributes;
+      this.geometry = geometry;
+    }
+  }
+
+  public VectorSource getVectorSource(String layerName, List<VectorSource> sources) {
+    for (VectorSource source : sources) {
+      if (source.name.equals(layerName)) {
+        return source;
+      }
+    }
+    return null; // or throw new NoSuchElementException("No VectorSource found with name: " + layerName);
+  }
+
+  public Tile getPMTile2(int x, int y, int zoom) {
+    try {
+      byte[] pbfData = null;
+      if (this.tileCachePath != null) {
+        pbfData = readPbfData(x, y, zoom);
+        if (pbfData != null && !this.offlineMode) {
+          boolean needRefresh = checkForRefresh(x, y, zoom);
+          if (needRefresh) {
+            pbfData = null;
+          }
+        }
+      }
+      if (pbfData == null) {
+        if (this.offlineMode) return null;
+        CompletableFuture<Optional<RangeResponse>> futureTileData = pmtiles.getZxy(zoom, x, y);
+        Optional<RangeResponse> optionalRangeResponse = futureTileData.get();
+
+        if (!optionalRangeResponse.isPresent()) return null;
+        RangeResponse rangeResponse = optionalRangeResponse.get();
+        pbfData = rangeResponse.data.array();
+
+        if (pbfData != null) {
+          boolean success = writePbfData(pbfData, x, y, zoom);
+        }
+      }
+
+      List<VectorSource> sources = new ArrayList<>(); // Initialize sources list
+      try {
+        VectorTile.Tile decodedTile = VectorTile.Tile.parseFrom(pbfData);
+        for (VectorTile.Tile.Layer layer : decodedTile.getLayersList()) {
+          List<FeatureData> features = new ArrayList<>();
+          for (VectorTile.Tile.Feature feature : layer.getFeaturesList()) {
+            Map<String, String> attributes = getFeatureAttributes(layer, feature);
+            Object geometry = null;
+            if (feature.getType() == VectorTile.Tile.GeomType.POINT) {
+              geometry = createMultiPointData(feature.getGeometryList());
+            } else if (feature.getType() == VectorTile.Tile.GeomType.LINESTRING) {
+              geometry = createLinePath(feature.getGeometryList());
+            } else if (feature.getType() == VectorTile.Tile.GeomType.POLYGON) { // ポリゴンのみを処理
+              geometry = createPolygonPath(feature.getGeometryList());
+            }
+            if (geometry != null) {
+              FeatureData featureData = new FeatureData(attributes, geometry);
+              features.add(featureData);
+            }
+          }
+          if (features.size() > 0) {
+            System.out.println("!!create source: " + layer.getName());
+            VectorSource newSource = new VectorSource(layer.getName(), features);
+            sources.add(newSource);
+          }
+        }
+      } catch (InvalidProtocolBufferException e) {
+        e.printStackTrace();
+        System.err.println("!!create source error: " + e.getMessage());
+        // エラーハンドリングのロジック
+      }
+      Bitmap image = Bitmap.createBitmap(tileSize, tileSize, Bitmap.Config.ARGB_8888);
+      image.eraseColor(Color.TRANSPARENT);
+      Canvas canvas = new Canvas(image);
+      for (StyleLayer styleLayer : styleManager.getStyleLayers()) {
+        VectorSource source = getVectorSource(styleLayer.sourceLayer, sources);
+        if (source == null) continue;
+        if (styleLayer.minzoom > zoom || styleLayer.maxzoom < zoom) continue;
+        applyStyle(canvas, styleLayer, source);
+      }
+      byte[] tileImage = bitmapToByteArray(image);
+      image.recycle();
+      return new Tile(tileSize, tileSize, tileImage);
+    } catch (Exception e) {
+      // CompletableFuture#get()の例外処理
+      //e.printStackTrace();
+      System.err.println("!!An error occurred: " + e.getMessage());
+      return null;
+    }
+  }
+
+  //ラスター用
+  public Tile getPMTile(int x, int y, int zoom) {
+    CompletableFuture<Optional<RangeResponse>> futureTileData = pmtiles.getZxy(zoom, x, y);
+
+    try {
+      Optional<RangeResponse> optionalRangeResponse = futureTileData.get();
+
+      if (optionalRangeResponse.isPresent()) {
+        RangeResponse rangeResponse = optionalRangeResponse.get();
+        byte[] tileData = rangeResponse.data.array();
+
+        return new Tile(tileSize, tileSize, tileData);
+      } else {
+        return null;
+      }
+    } catch (InterruptedException | ExecutionException e) {
+      // CompletableFuture#get()の例外処理
+      e.printStackTrace();
+      return null;
+    }
+  }
+
+  byte[] fetchTile(int x, int y, int zoom) {
+    Tile tile = getPMTile2(x, y, zoom);
+    if (Objects.isNull(tile)) {
+      // Log.d("urlTileA:NO_TILE", getTileFilename(x, y, zoom));
+      return null;
+    }
+    return tile.data;
+  }
+
+  byte[] readPbfData(int x, int y, int zoom) {
+    String fileName = getPbfFilename(x, y, zoom); // このメソッドは実装による
+    if (fileName == null) {
+      return null;
+    }
+
+    File file = new File(fileName);
+
+    try {
+      StringBuilder stringBuilder = new StringBuilder();
+      try (
+        BufferedReader reader = new BufferedReader(
+          new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8)
+        )
+      ) {
+        String line;
+        while ((line = reader.readLine()) != null) {
+          stringBuilder.append(line);
+        }
+      }
+
+      // ここでBase64デコード
+      byte[] decodedData = Base64.getDecoder().decode(stringBuilder.toString());
+      return decodedData;
+    } catch (IOException e) {
+      e.printStackTrace();
+      return null;
+    }
+  }
+
+  byte[] readTileImage(int x, int y, int zoom) {
+    InputStream in = null;
+    ByteArrayOutputStream buffer = null;
+    String fileName = getTileFilename(x, y, zoom);
+    if (fileName == null) {
+      return null;
+    }
+
+    File file = new File(fileName);
+
+    try {
+      in = new FileInputStream(file);
+      buffer = new ByteArrayOutputStream();
+
+      int nRead;
+      byte[] data = new byte[BUFFER_SIZE];
+
+      while ((nRead = in.read(data, 0, BUFFER_SIZE)) != -1) {
+        buffer.write(data, 0, nRead);
+      }
+      buffer.flush();
+
+      if (this.tileCacheMaxAge == 0) {
+        file.setLastModified(System.currentTimeMillis());
+      }
+
+      return buffer.toByteArray();
+    } catch (IOException e) {
+      e.printStackTrace();
+      return null;
+    } catch (OutOfMemoryError e) {
+      e.printStackTrace();
+      return null;
+    } finally {
+      if (in != null) try {
+        in.close();
+      } catch (Exception ignored) {}
+      if (buffer != null) try {
+        buffer.close();
+      } catch (Exception ignored) {}
+    }
+  }
+
+  boolean writePbfData(byte[] pbf, int x, int y, int zoom) {
+    OutputStream out = null;
+    String fileName = getPbfFilename(x, y, zoom); // このメソッドは実装による
+    if (fileName == null) {
+      return false;
+    }
+
+    try {
+      // バイトデータをBase64でエンコード
+      String base64Image = Base64.getEncoder().encodeToString(pbf);
+
+      File file = new File(fileName);
+      file.getParentFile().mkdirs();
+      out = new FileOutputStream(file);
+
+      // Base64文字列をバイト配列に変換してファイルに書き出し
+      out.write(base64Image.getBytes());
+
+      return true;
+    } catch (IOException e) {
+      e.printStackTrace();
+      return false;
+    } finally {
+      if (out != null) try {
+        out.close();
+      } catch (Exception ignored) {}
+    }
+  }
+
+  boolean writeTileImage(byte[] image, int x, int y, int zoom) {
+    OutputStream out = null;
+    String fileName = getTileFilename(x, y, zoom);
+    if (fileName == null) {
+      return false;
+    }
+
+    try {
+      File file = new File(fileName);
+      file.getParentFile().mkdirs();
+      out = new FileOutputStream(file);
+      out.write(image);
+
+      return true;
+    } catch (IOException e) {
+      e.printStackTrace();
+      return false;
+    } catch (OutOfMemoryError e) {
+      e.printStackTrace();
+      return false;
+    } finally {
+      if (out != null) try {
+        out.close();
+      } catch (Exception ignored) {}
+    }
+  }
+
+  String getPbfFilename(int x, int y, int zoom) {
+    if (this.tileCachePath == null) {
+      return null;
+    }
+    String s =
+      this.tileCachePath +
+      '/' +
+      Integer.toString(zoom) +
+      "/" +
+      Integer.toString(x) +
+      "/" +
+      Integer.toString(y) +
+      ".pbf";
+    return s;
+  }
+
+  String getTileFilename(int x, int y, int zoom) {
+    if (this.tileCachePath == null) {
+      return null;
+    }
+    String s =
+      this.tileCachePath + '/' + Integer.toString(zoom) + "/" + Integer.toString(x) + "/" + Integer.toString(y);
+    return s;
+  }
+
+  public void setUrlTemplate(String urlTemplate) {
+    this.urlTemplate = urlTemplate;
+  }
+
+  public void setTileSize(int tileSize) {
+    this.tileSize = tileSize;
+  }
+
+  public void setDoubleTileSize(boolean doubleTileSize) {
+    this.doubleTileSize = doubleTileSize;
+  }
+
+  public void setMaximumZ(int maximumZ) {
+    this.maximumZ = maximumZ;
+  }
+
+  public void setMaximumNativeZ(int maximumNativeZ) {
+    this.maximumNativeZ = maximumNativeZ;
+  }
+
+  public void setMinimumZ(int minimumZ) {
+    this.minimumZ = minimumZ;
+  }
+
+  public void setFlipY(boolean flipY) {
+    this.flipY = flipY;
+  }
+
+  public void setTileCachePath(String tileCachePath) {
+    this.tileCachePath = tileCachePath;
+  }
+
+  public void setTileCacheMaxAge(int tileCacheMaxAge) {
+    this.tileCacheMaxAge = tileCacheMaxAge;
+  }
+
+  public void setOfflineMode(boolean offlineMode) {
+    this.offlineMode = offlineMode;
+  }
+
+  public void setCustomMode() {
+    this.customMode = customMode;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapTileProvider.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapTileProvider.java
index 4f7acba..682425b 100644
--- a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapTileProvider.java
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapTileProvider.java
@@ -1,49 +1,51 @@
 package com.airbnb.android.react.maps;
 
 import android.content.Context;
-
-import android.util.Log;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.Future;
-import java.util.List;
-
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Rect;
-
-import androidx.work.OneTimeWorkRequest;
-import androidx.work.WorkManager;
-import androidx.work.Data;
+import android.util.Log;
+import androidx.annotation.NonNull;
 import androidx.work.Constraints;
-import androidx.work.NetworkType;
+import androidx.work.Data;
 import androidx.work.ExistingWorkPolicy;
+import androidx.work.NetworkType;
+import androidx.work.OneTimeWorkRequest;
 import androidx.work.Operation;
 import androidx.work.WorkInfo;
-
+import androidx.work.WorkManager;
+import androidx.work.WorkRequest;
+import androidx.work.Worker;
+import androidx.work.WorkerParameters;
+import com.google.android.gms.maps.GoogleMap;
 import com.google.android.gms.maps.model.Tile;
+import com.google.android.gms.maps.model.TileOverlay;
+import com.google.android.gms.maps.model.TileOverlayOptions;
 import com.google.android.gms.maps.model.TileProvider;
 import com.google.android.gms.maps.model.UrlTileProvider;
-
-import java.lang.System;
-
 import java.io.ByteArrayOutputStream;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
+import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
-import java.io.IOException;
-
+import java.lang.System;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLConnection;
+import java.util.List;
+import java.util.Objects;
+import java.util.concurrent.Future;
+import java.util.concurrent.TimeUnit;
 
 public class AirMapTileProvider implements TileProvider {
 
-	class AIRMapUrlTileProvider extends UrlTileProvider {
+  class AIRMapUrlTileProvider extends UrlTileProvider {
+
     private String urlTemplate;
 
     public AIRMapUrlTileProvider(int width, int height, String urlTemplate) {
@@ -53,23 +55,22 @@ public class AirMapTileProvider implements TileProvider {
 
     @Override
     public URL getTileUrl(int x, int y, int zoom) {
-
-      if (AirMapTileProvider.this.flipY) {
+      if (AirMapTileProvider.this.flipY == true) {
         y = (1 << zoom) - y - 1;
       }
 
-      String s = this.urlTemplate
-          .replace("{x}", Integer.toString(x))
+      String s =
+        this.urlTemplate.replace("{x}", Integer.toString(x))
           .replace("{y}", Integer.toString(y))
           .replace("{z}", Integer.toString(zoom));
-      URL url;
+      URL url = null;
 
-      if(AirMapTileProvider.this.maximumZ > 0 && zoom > AirMapTileProvider.this.maximumZ) {
-        return null;
+      if (AirMapTileProvider.this.maximumZ > 0 && zoom > AirMapTileProvider.this.maximumZ) {
+        return url;
       }
 
-      if(AirMapTileProvider.this.minimumZ > 0 && zoom < AirMapTileProvider.this.minimumZ) {
-        return null;
+      if (AirMapTileProvider.this.minimumZ > 0 && zoom < AirMapTileProvider.this.minimumZ) {
+        return url;
       }
 
       try {
@@ -85,147 +86,111 @@ public class AirMapTileProvider implements TileProvider {
     }
   }
 
-	protected static final int BUFFER_SIZE = 16 * 1024;
-	protected static final int TARGET_TILE_SIZE = 512;
-	protected UrlTileProvider tileProvider;
-	protected String urlTemplate;
-	protected int tileSize;
+  protected static final int BUFFER_SIZE = 16 * 1024;
+  protected static final int TARGET_TILE_SIZE = 512;
+  protected UrlTileProvider tileProvider;
+  protected String urlTemplate;
+  protected int tileSize;
   protected boolean doubleTileSize;
-	protected int maximumZ;
+  protected int maximumZ;
   protected int maximumNativeZ;
   protected int minimumZ;
   protected boolean flipY;
-	protected String tileCachePath;
-	protected int tileCacheMaxAge;
+  protected String tileCachePath;
+  protected int tileCacheMaxAge;
   protected boolean offlineMode;
-	protected Context context;
-	protected boolean customMode;
-
-	public AirMapTileProvider(int tileSizet, boolean doubleTileSize, String urlTemplate, 
-    int maximumZ, int maximumNativeZ, int minimumZ, boolean flipY, String tileCachePath, 
-    int tileCacheMaxAge, boolean offlineMode, Context context, boolean customMode) {
-		this.tileProvider = new AIRMapUrlTileProvider(tileSizet, tileSizet, urlTemplate);
-
-		this.tileSize = tileSizet;
+  protected Context context;
+  protected boolean customMode;
+
+  public AirMapTileProvider(
+    int tileSizet,
+    boolean doubleTileSize,
+    String urlTemplate,
+    int maximumZ,
+    int maximumNativeZ,
+    int minimumZ,
+    boolean flipY,
+    String tileCachePath,
+    int tileCacheMaxAge,
+    boolean offlineMode,
+    Context context,
+    boolean customMode
+  ) {
+    this.tileProvider = new AIRMapUrlTileProvider(tileSizet, tileSizet, urlTemplate);
+
+    this.tileSize = tileSizet;
     this.doubleTileSize = doubleTileSize;
-		this.urlTemplate = urlTemplate;
-		this.maximumZ = maximumZ;
+    this.urlTemplate = urlTemplate;
+    this.maximumZ = maximumZ;
     this.maximumNativeZ = maximumNativeZ;
-		this.minimumZ = minimumZ;
-		this.flipY = flipY;
-		this.tileCachePath = tileCachePath;
-		this.tileCacheMaxAge = tileCacheMaxAge;
+    this.minimumZ = minimumZ;
+    this.flipY = flipY;
+    this.tileCachePath = tileCachePath;
+    this.tileCacheMaxAge = tileCacheMaxAge;
     this.offlineMode = offlineMode;
-		this.context = context;
-		this.customMode = customMode;
-	}
+    this.context = context;
+    this.customMode = customMode;
+  }
 
-	@Override
-	public Tile getTile(int x, int y, int zoom) {
-		if (!this.customMode) return this.tileProvider.getTile(x, y, zoom);
+  @Override
+  public Tile getTile(int x, int y, int zoom) {
+    if (!this.customMode) return this.tileProvider.getTile(x, y, zoom);
 
-		byte[] image = null;
-		int maximumZ = this.maximumZ > 0 ? this.maximumZ : Integer.MAX_VALUE;
+    byte[] image = null;
+    int maximumZ = this.maximumZ > 0 ? this.maximumZ : Integer.MAX_VALUE;
 		
-		if (this.tileSize == 256 && this.doubleTileSize && zoom + 1 <= this.maximumNativeZ && zoom + 1 <= maximumZ) {
-      Log.d("urlTile", "pullTilesFromHigherZoom");
-			image = pullTilesFromHigherZoom(x, y, zoom);      
-		} 
+    if (this.tileSize == 256 && this.doubleTileSize && zoom + 1 <= this.maximumNativeZ && zoom + 1 <= maximumZ) {
+      // Log.d("urlTile", "pullTilesFromHigherZoom");
+      image = pullTilesFromHigherZoom(x, y, zoom);
+    }
 
     if (zoom > this.maximumNativeZ) {
-      Log.d("urlTile", "scaleLowerZoomTile");
-			image = scaleLowerZoomTile(x, y, zoom, this.maximumNativeZ);
-		}
+      // Log.d("urlTile", "scaleLowerZoomTile");
+      image = scaleLowerZoomTile(x, y, zoom, this.maximumNativeZ);
+    }
 
     if (image == null && zoom <= maximumZ) {
-      Log.d("urlTile", "getTileImage");
-			image = getTileImage(x, y, zoom);
-		}
+      // Log.d("urlTile", "getTileImage");
+      image = getTileImage(x, y, zoom);
+    }
 
     if (image == null && this.tileCachePath != null && this.offlineMode) {
       Log.d("urlTile", "findLowerZoomTileForScaling");
       int zoomLevelToStart = (zoom > this.maximumNativeZ) ? this.maximumNativeZ - 1 : zoom - 1; 
-      int minimumZoomToSearch = Math.max(this.minimumZ, zoom - 3);
+      int minimumZoomToSearch = this.minimumZ >= zoom - 3 ? this.minimumZ : zoom - 3;
       for (int tryZoom = zoomLevelToStart; tryZoom >= minimumZoomToSearch; tryZoom--) {
-  			image = scaleLowerZoomTile(x, y, zoom, tryZoom);
-	  		if (image != null) {
-		  		break;
-			  }
+        image = scaleLowerZoomTile(x, y, zoom, tryZoom);
+        if (image != null) {
+          break;
+        }
+      }
+    }
+
+    return image == null ? null : new Tile(this.tileSize, this.tileSize, image);
+  }
+
+  byte[] getTileImage(int x, int y, int zoom) {
+    byte[] image = null;
+    if (this.tileCachePath != null) {
+      image = readTileImage(x, y, zoom);
+      if (image != null && !this.offlineMode) {
+        boolean needRefresh = checkForRefresh(x, y, zoom);
+        if (needRefresh) {
+          image = null;
+        }
+      }
+    }
+    if (image == null && !this.offlineMode && this.tileCachePath != null) {
+      // Log.d("urlTile", "Normal fetch");
+      image = fetchTile(x, y, zoom);
+      if (image != null) {
+        boolean success = writeTileImage(image, x, y, zoom);
       }
-		}
-
-		return image == null ? null : new Tile(this.tileSize, this.tileSize, image);
-	}
-
-	byte[] getTileImage(int x, int y, int zoom) {
-		byte[] image = null;
-
-		if (this.tileCachePath != null) {
-			image = readTileImage(x, y, zoom);
-			if (image != null) {
-				Log.d("urlTile", "tile cache HIT for " + zoom +
-					"/" + x + "/" + y);
-			} else {
-				Log.d("urlTile", "tile cache MISS for " + zoom +
-        	"/" + x + "/" + y);
-			}
-			if (image != null && !this.offlineMode) {
-				checkForRefresh(x, y, zoom);
-			}
-		}
-
-		if (image == null && !this.offlineMode && this.tileCachePath != null) {
-			String fileName = getTileFilename(x, y, zoom);
-			Constraints constraints = new Constraints.Builder()
-				.setRequiredNetworkType(NetworkType.CONNECTED)
-				.build();
-			OneTimeWorkRequest tileRefreshWorkRequest = new OneTimeWorkRequest.Builder(AirMapTileWorker.class)
-				.setConstraints(constraints)
-				.addTag(fileName)
-				.setInputData(
-					new Data.Builder()
-						.putString("url", getTileUrl(x, y, zoom).toString())
-						.putString("filename", fileName)
-						.putInt("maxAge", -1)
-						.build()
-					)
-				.build();
-			WorkManager workManager = WorkManager.getInstance(this.context.getApplicationContext());
-			Operation fetchOperation = workManager
-				.enqueueUniqueWork(fileName, ExistingWorkPolicy.KEEP, tileRefreshWorkRequest);
-			Future<Operation.State.SUCCESS> operationFuture = fetchOperation.getResult();
-			try {
-				operationFuture.get(1L, TimeUnit.SECONDS);
-				Thread.sleep(500);
-				Future<List<WorkInfo>> fetchFuture = workManager.getWorkInfosByTag(fileName);
-				List<WorkInfo> workInfo = fetchFuture.get(1L, TimeUnit.SECONDS);
-				Log.d("urlTile: ", workInfo.get(0).toString());
-				if (this.tileCachePath != null) {
-					image = readTileImage(x, y, zoom);
-					if (image != null) {
-						Log.d("urlTile","tile cache fetch HIT for " + zoom +
-							"/" + x + "/" + y);
-					} else {
-							Log.d("urlTile","tile cache fetch MISS for " + zoom +
-								"/" + x + "/" + y);
-					}
-				}
-			} catch (Exception e) {
-			  e.printStackTrace();
-			}
-		} else if (image == null && !this.offlineMode) {
-			Log.d("urlTile", "Normal fetch");
-			image = fetchTile(x, y, zoom);
-			if (image == null) {
-				Log.d("urlTile", "tile fetch TIMEOUT / FAIL for " + zoom +
-					"/" + x + "/" + y);
-			}
-		}
-
-		return image;
-	}
-
-	byte[] pullTilesFromHigherZoom(int x, int y, int zoom) {
+    }
+    return image;
+  }
+
+  byte[] pullTilesFromHigherZoom(int x, int y, int zoom) {
     byte[] data;
     Bitmap image = getNewBitmap();
     Canvas canvas = new Canvas(image);
@@ -238,28 +203,31 @@ public class AirMapTileProvider implements TileProvider {
     byte[] rightTop = getTileImage(x + 1, y, zoom + 1);
     byte[] rightBottom = getTileImage(x + 1, y + 1, zoom + 1);
 
-    if (leftTop == null || leftBottom == null || rightTop == null || rightBottom == null) {
+    if (leftTop == null && leftBottom == null && rightTop == null && rightBottom == null) {
       return null;
     }
 
     Bitmap bitmap;
-
-    bitmap = BitmapFactory.decodeByteArray(leftTop, 0, leftTop.length);
-    canvas.drawBitmap(bitmap, 0, 0, paint);
-    bitmap.recycle();
-    
-    bitmap = BitmapFactory.decodeByteArray(leftBottom, 0, leftBottom.length);
-    canvas.drawBitmap(bitmap, 0, 256, paint);
-    bitmap.recycle();
-    
-    bitmap = BitmapFactory.decodeByteArray(rightTop, 0, rightTop.length);
-    canvas.drawBitmap(bitmap, 256, 0, paint);
-    bitmap.recycle();
-  
-    bitmap = BitmapFactory.decodeByteArray(rightBottom, 0, rightBottom.length);
-    canvas.drawBitmap(bitmap, 256, 256, paint);
-    bitmap.recycle();
-    
+    if (leftTop != null) {
+      bitmap = BitmapFactory.decodeByteArray(leftTop, 0, leftTop.length);
+      canvas.drawBitmap(bitmap, 0, 0, paint);
+      bitmap.recycle();
+    }
+    if (leftBottom != null) {
+      bitmap = BitmapFactory.decodeByteArray(leftBottom, 0, leftBottom.length);
+      canvas.drawBitmap(bitmap, 0, 256, paint);
+      bitmap.recycle();
+    }
+    if (rightTop != null) {
+      bitmap = BitmapFactory.decodeByteArray(rightTop, 0, rightTop.length);
+      canvas.drawBitmap(bitmap, 256, 0, paint);
+      bitmap.recycle();
+    }
+    if (rightBottom != null) {
+      bitmap = BitmapFactory.decodeByteArray(rightBottom, 0, rightBottom.length);
+      canvas.drawBitmap(bitmap, 256, 256, paint);
+      bitmap.recycle();
+    }
     data = bitmapToByteArray(image);
     image.recycle();
     return data;
@@ -279,12 +247,12 @@ public class AirMapTileProvider implements TileProvider {
     try {
       bos.close();
     } catch (Exception e) {
-      e.printStackTrace();
+      // e.printStackTrace();
     }
     return data;
   }
 
-	byte[] scaleLowerZoomTile(int x, int y, int zoom, int maximumZoom) {
+  byte[] scaleLowerZoomTile(int x, int y, int zoom, int maximumZoom) {
     int overZoomLevel = zoom - maximumZoom;
     int zoomFactor = 1 << overZoomLevel;
     
@@ -294,197 +262,182 @@ public class AirMapTileProvider implements TileProvider {
     
     int xOffset = x % zoomFactor;
     int yOffset = y % zoomFactor;
-
     byte[] data;
+
     Bitmap image = getNewBitmap();
     Canvas canvas = new Canvas(image);
     Paint paint = new Paint();
+    data = getTileImage(xParent, yParent, zoomParent);
 
-		data = getTileImage(xParent, yParent, zoomParent);
     if (data == null) return null;
-    
     Bitmap sourceImage;
-    sourceImage = BitmapFactory.decodeByteArray(data, 0, data.length);
 
+    sourceImage = BitmapFactory.decodeByteArray(data, 0, data.length);
     int subTileSize = this.tileSize / zoomFactor;
-    Rect sourceRect = new Rect(xOffset * subTileSize, yOffset * subTileSize, xOffset * subTileSize + subTileSize , yOffset * subTileSize + subTileSize);
-    Rect targetRect = new Rect(0,0,TARGET_TILE_SIZE, TARGET_TILE_SIZE);
+
+    Rect sourceRect = new Rect(
+      xOffset * subTileSize,
+      yOffset * subTileSize,
+      xOffset * subTileSize + subTileSize,
+      yOffset * subTileSize + subTileSize
+    );
+    Rect targetRect = new Rect(0, 0, TARGET_TILE_SIZE, TARGET_TILE_SIZE);
     canvas.drawBitmap(sourceImage, sourceRect, targetRect, paint);
     sourceImage.recycle();
-
     data = bitmapToByteArray(image);
+
     image.recycle();
     return data;
-	} 
-
-	void checkForRefresh(int x, int y, int zoom) {
-		String fileName =  getTileFilename(x, y, zoom);
-		File file = new File(fileName);
-		long lastModified = file.lastModified();
-		long now = System.currentTimeMillis();
-
-		if ((now - lastModified) / 1000 > this.tileCacheMaxAge) {
-      Log.d("urlTile", "Refreshing");
-			Constraints constraints = new Constraints.Builder()
-				.setRequiredNetworkType(NetworkType.CONNECTED)
-				.build();
-			OneTimeWorkRequest tileRefreshWorkRequest = new OneTimeWorkRequest.Builder(AirMapTileWorker.class)
-				.setConstraints(constraints)
-				.addTag(fileName)
-				.setInputData(
-					new Data.Builder()
-						.putString("url", getTileUrl(x, y, zoom).toString())
-						.putString("filename", fileName)
-						.putInt("maxAge", this.tileCacheMaxAge)
-						.build()
-					)
-				.build();
-			WorkManager.getInstance(this.context.getApplicationContext())
-			.enqueueUniqueWork(fileName, ExistingWorkPolicy.KEEP, tileRefreshWorkRequest);
-		}
-	}
-
-	byte[] fetchTile(int x, int y, int zoom) {
-		URL url = getTileUrl(x, y, zoom);
-		ByteArrayOutputStream buffer = null;
-		InputStream in = null;
-
-		try {
-			URLConnection conn = url.openConnection();
-			in = conn.getInputStream();
-			buffer = new ByteArrayOutputStream();
-
-			int nRead;
-			byte[] data = new byte[BUFFER_SIZE];
-
-			while ((nRead = in.read(data, 0, BUFFER_SIZE)) != -1) {
-				buffer.write(data, 0, nRead);
-			}
-			buffer.flush();
-
-			return buffer.toByteArray();
-		} catch (IOException | OutOfMemoryError e) {
-			e.printStackTrace();
-			return null;
-		} finally {
-			if (in != null) try { in.close(); } catch (Exception ignored) {}
-			if (buffer != null) try { buffer.close(); } catch (Exception ignored) {}
-		}
-	}
-	
-	byte[] readTileImage(int x, int y, int zoom) {
-		InputStream in = null;
-		ByteArrayOutputStream buffer = null;
-		String fileName = getTileFilename(x, y, zoom);
-		if (fileName == null) {
-			return null;
-		}
-
-		File file = new File(fileName);
-
-		try {
-			in = new FileInputStream(file);
-			buffer = new ByteArrayOutputStream();
-
-			int nRead;
-			byte[] data = new byte[BUFFER_SIZE];
-
-			while ((nRead = in.read(data, 0, BUFFER_SIZE)) != -1) {
-				buffer.write(data, 0, nRead);
-			}
-			buffer.flush();
-
-			if (this.tileCacheMaxAge == 0) {
-				file.setLastModified(System.currentTimeMillis());
-			}
-
-			return buffer.toByteArray();
-		} catch (IOException | OutOfMemoryError e) {
-			e.printStackTrace();
-			return null;
-		} finally {
-			if (in != null) try { in.close(); } catch (Exception ignored) {}
-			if (buffer != null) try { buffer.close(); } catch (Exception ignored) {}
-		}
-	}
-
-	boolean writeTileImage(byte[] image, int x, int y, int zoom) {
-		OutputStream out = null;
-		String fileName = getTileFilename(x, y, zoom);
-		if (fileName == null) {
-			return false;
-		}
-
-		try {
-			File file = new File(fileName);
-			file.getParentFile().mkdirs();
-			out = new FileOutputStream(file);
-			out.write(image);
-
-			return true;
-		} catch (IOException | OutOfMemoryError e) {
-			e.printStackTrace();
-			return false;
-		} finally {
-			if (out != null) try { out.close(); } catch (Exception ignored) {}
-		}
-	}
-
-	String getTileFilename(int x, int y, int zoom) {
-		if (this.tileCachePath == null) {
-			return null;
-		}
-		return this.tileCachePath + '/' + zoom +
-			"/" + x + "/" + y;
-	}
-	
-	protected URL getTileUrl(int x, int y, int zoom) {
-		return this.tileProvider.getTileUrl(x, y, zoom);
-	}
-	
-	public void setUrlTemplate(String urlTemplate) {
-		this.urlTemplate = urlTemplate;
-	}
-
-	public void setTileSize(int tileSize) {
-		if (this.tileSize != tileSize) {
-			this.tileProvider = new AIRMapUrlTileProvider(tileSize, tileSize, urlTemplate);
-		}
-		this.tileSize = tileSize;
-	}
+  }
+
+  boolean checkForRefresh(int x, int y, int zoom) {
+    String fileName = getTileFilename(x, y, zoom);
+    File file = new File(fileName);
+    long lastModified = file.lastModified();
+    long now = System.currentTimeMillis();
+
+    if ((now - lastModified) / 1000 > this.tileCacheMaxAge) {
+      return true;
+    }
+    return false;
+  }
+
+  byte[] fetchTile(int x, int y, int zoom) {
+    Tile tile = this.tileProvider.getTile(x, y, zoom);
+    if (Objects.isNull(tile)) {
+      // Log.d("urlTileA:NO_TILE", getTileFilename(x, y, zoom));
+      return null;
+    }
+    return tile.data;
+  }
+
+  byte[] readTileImage(int x, int y, int zoom) {
+    InputStream in = null;
+    ByteArrayOutputStream buffer = null;
+    String fileName = getTileFilename(x, y, zoom);
+    if (fileName == null) {
+      return null;
+    }
+
+    File file = new File(fileName);
+
+    try {
+      in = new FileInputStream(file);
+      buffer = new ByteArrayOutputStream();
+
+      int nRead;
+      byte[] data = new byte[BUFFER_SIZE];
+
+      while ((nRead = in.read(data, 0, BUFFER_SIZE)) != -1) {
+        buffer.write(data, 0, nRead);
+      }
+      buffer.flush();
+
+      if (this.tileCacheMaxAge == 0) {
+        file.setLastModified(System.currentTimeMillis());
+      }
+
+      return buffer.toByteArray();
+    } catch (IOException e) {
+      e.printStackTrace();
+      return null;
+    } catch (OutOfMemoryError e) {
+      e.printStackTrace();
+      return null;
+    } finally {
+      if (in != null) try {
+        in.close();
+      } catch (Exception ignored) {}
+      if (buffer != null) try {
+        buffer.close();
+      } catch (Exception ignored) {}
+    }
+  }
+
+  boolean writeTileImage(byte[] image, int x, int y, int zoom) {
+    OutputStream out = null;
+    String fileName = getTileFilename(x, y, zoom);
+    if (fileName == null) {
+      return false;
+    }
+
+    try {
+      File file = new File(fileName);
+      file.getParentFile().mkdirs();
+      out = new FileOutputStream(file);
+      out.write(image);
+
+      return true;
+    } catch (IOException e) {
+      e.printStackTrace();
+      return false;
+    } catch (OutOfMemoryError e) {
+      e.printStackTrace();
+      return false;
+    } finally {
+      if (out != null) try {
+        out.close();
+      } catch (Exception ignored) {}
+    }
+  }
+
+  String getTileFilename(int x, int y, int zoom) {
+    if (this.tileCachePath == null) {
+      return null;
+    }
+    String s =
+      this.tileCachePath + '/' + Integer.toString(zoom) + "/" + Integer.toString(x) + "/" + Integer.toString(y);
+    return s;
+  }
+
+  protected URL getTileUrl(int x, int y, int zoom) {
+    return this.tileProvider.getTileUrl(x, y, zoom);
+  }
+
+  public void setUrlTemplate(String urlTemplate) {
+    this.urlTemplate = urlTemplate;
+  }
+
+  public void setTileSize(int tileSize) {
+    if (this.tileSize != tileSize) {
+      this.tileProvider = new AIRMapUrlTileProvider(tileSize, tileSize, urlTemplate);
+    }
+    this.tileSize = tileSize;
+  }
 
   public void setDoubleTileSize(boolean doubleTileSize) {
-		this.doubleTileSize = doubleTileSize;
-	}
+    this.doubleTileSize = doubleTileSize;
+  }
 
-	public void setMaximumZ(int maximumZ) {
-		this.maximumZ = maximumZ;
-	}
+  public void setMaximumZ(int maximumZ) {
+    this.maximumZ = maximumZ;
+  }
 
   public void setMaximumNativeZ(int maximumNativeZ) {
-		this.maximumNativeZ = maximumNativeZ;
-	}
+    this.maximumNativeZ = maximumNativeZ;
+  }
 
-	public void setMinimumZ(int minimumZ) {
-		this.minimumZ = minimumZ;
-	}
+  public void setMinimumZ(int minimumZ) {
+    this.minimumZ = minimumZ;
+  }
 
-	public void setFlipY(boolean flipY) {
-		this.flipY = flipY;
-	}
+  public void setFlipY(boolean flipY) {
+    this.flipY = flipY;
+  }
 
-	public void setTileCachePath(String tileCachePath) {
-		this.tileCachePath = tileCachePath;
-	}
+  public void setTileCachePath(String tileCachePath) {
+    this.tileCachePath = tileCachePath;
+  }
 
-	public void setTileCacheMaxAge(int tileCacheMaxAge) {
-		this.tileCacheMaxAge = tileCacheMaxAge;
-	}
+  public void setTileCacheMaxAge(int tileCacheMaxAge) {
+    this.tileCacheMaxAge = tileCacheMaxAge;
+  }
 
   public void setOfflineMode(boolean offlineMode) {
-		this.offlineMode = offlineMode;
-	}
+    this.offlineMode = offlineMode;
+  }
 
-	public void setCustomMode() {
-	}
+  public void setCustomMode() {
+    this.customMode = customMode;
+  }
 }
\ No newline at end of file
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapTileWorker.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapTileWorker.java
deleted file mode 100644
index 8f2b387..0000000
--- a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapTileWorker.java
+++ /dev/null
@@ -1,115 +0,0 @@
-package com.airbnb.android.react.maps;
-
-import android.content.Context;
-
-import android.util.Log;
-
-import androidx.annotation.NonNull;
-import androidx.work.Worker;
-import androidx.work.WorkerParameters;
-
-import java.io.ByteArrayOutputStream;
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.io.IOException;
-
-import java.net.MalformedURLException;
-import java.net.URL;
- 
-public class AirMapTileWorker extends Worker {
-	private static final int BUFFER_SIZE = 16 * 1024;
-
-	public AirMapTileWorker(
-			@NonNull Context context,
-			@NonNull WorkerParameters params) {
-			super(context, params);
-	}
-
-	@Override
-	public Result doWork() {
-		byte[] image;
-		URL url;
-    String fileName = getInputData().getString("filename");
-
-    try {
-      int tileCacheMaxAge = getInputData().getInt("maxAge", 0);
-      if (tileCacheMaxAge >= 0) {
-        File file = new File(fileName);
-	    	long lastModified = file.lastModified();
-        long now = System.currentTimeMillis();
-        if ((now - lastModified) / 1000 < tileCacheMaxAge) return Result.failure();
-      }
-    } catch (Error e) {
-      return Result.failure();
-    }
-
-		try {
-      url = new URL(getInputData().getString("url"));
-    } catch (MalformedURLException e) {
-      throw new AssertionError(e);
-    }
-
-		image = fetchTile(url);
-		if (image != null) {
-			boolean success = writeTileImage(image, fileName);
-			if (!success) {
-				return Result.failure();
-			}
-    } else {
-			return Result.retry();
-		}
-
-		// Indicate whether the work finished successfully with the Result
-    Log.d("urlTile", "Worker fetched " + fileName);
-		return Result.success();
-	}
-
-	private byte[] fetchTile(URL url) {
-      ByteArrayOutputStream buffer = null;
-      InputStream in = null;
-
-      try {
-        in = url.openStream();
-        buffer = new ByteArrayOutputStream();
-
-        int nRead;
-        byte[] data = new byte[BUFFER_SIZE];
-
-        while ((nRead = in.read(data, 0, BUFFER_SIZE)) != -1) {
-          buffer.write(data, 0, nRead);
-        }
-        buffer.flush();
-
-        return buffer.toByteArray();
-      } catch (IOException | OutOfMemoryError e) {
-        e.printStackTrace();
-        return null;
-      } finally {
-        if (in != null) try { in.close(); } catch (Exception ignored) {}
-        if (buffer != null) try { buffer.close(); } catch (Exception ignored) {}
-      }
-    }
-
-	private boolean writeTileImage(byte[] image, String fileName) {
-      OutputStream out = null;
-      if (fileName == null) {
-        return false;
-      }
-
-      try {
-        File file = new File(fileName);
-        file.getParentFile().mkdirs();
-        out = new FileOutputStream(file);
-        out.write(image);
-
-        return true;
-      } catch (IOException | OutOfMemoryError e) {
-        e.printStackTrace();
-        return false;
-      } finally {
-        if (out != null) try { out.close(); } catch (Exception ignored) {}
-      }
-  }
-}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapView.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapView.java
index 077127d..66ba471 100644
--- a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapView.java
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/AirMapView.java
@@ -706,6 +706,10 @@ public class AirMapView extends MapView implements GoogleMap.InfoWindowAdapter,
       AirMapUrlTile urlTileView = (AirMapUrlTile) child;
       urlTileView.addToMap(map);
       features.add(index, urlTileView);
+    } else if (child instanceof AirMapPMTile) {
+      AirMapPMTile urlTileView = (AirMapPMTile) child;
+      urlTileView.addToMap(map);
+      features.add(index, urlTileView);
     } else if (child instanceof AirMapWMSTile) {
       AirMapWMSTile urlTileView = (AirMapWMSTile) child;
       urlTileView.addToMap(map);
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/MapsPackage.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/MapsPackage.java
index 2f140b3..cd376c4 100644
--- a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/MapsPackage.java
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/MapsPackage.java
@@ -40,6 +40,7 @@ public class MapsPackage implements ReactPackage {
     AirMapManager mapManager = new AirMapManager(reactContext);
     AirMapLiteManager mapLiteManager = new AirMapLiteManager(reactContext);
     AirMapUrlTileManager urlTileManager = new AirMapUrlTileManager(reactContext);
+    AirMapPMTileManager pmTileManager = new AirMapPMTileManager(reactContext);
     AirMapWMSTileManager gsUrlTileManager = new AirMapWMSTileManager(reactContext);
     AirMapLocalTileManager localTileManager = new AirMapLocalTileManager(reactContext);
     AirMapOverlayManager overlayManager = new AirMapOverlayManager(reactContext);
@@ -56,6 +57,7 @@ public class MapsPackage implements ReactPackage {
         mapManager,
         mapLiteManager,
         urlTileManager,
+        pmTileManager,
         gsUrlTileManager,
         localTileManager,
         overlayManager,
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/BufferPosition.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/BufferPosition.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/BufferPosition.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/BufferPosition.java
new file mode 100644
index 0000000..bbebbd1
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/BufferPosition.java
@@ -0,0 +1,14 @@
+package PMTiles;
+
+import java.nio.ByteBuffer;
+
+public class BufferPosition {
+
+  public ByteBuffer buf;
+  public int pos;
+
+  public BufferPosition(ByteBuffer buf, int pos) {
+    this.buf = buf;
+    this.pos = pos;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Cache.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Cache.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Cache.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Cache.java
new file mode 100644
index 0000000..0f12b7d
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Cache.java
@@ -0,0 +1,25 @@
+package PMTiles;
+
+import java.nio.ByteBuffer;
+import java.util.List;
+import java.util.concurrent.CompletableFuture;
+
+public interface Cache {
+  CompletableFuture<Header> getHeader(Source source, String currentEtag);
+
+  CompletableFuture<List<Entry>> getDirectory(
+    Source source,
+    long offset,
+    long length,
+    Header header
+  );
+
+  CompletableFuture<ByteBuffer> getArrayBuffer(
+    Source source,
+    long offset,
+    long length,
+    Header header
+  );
+
+  CompletableFuture<Void> invalidate(Source source, String currentEtag);
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Compression.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Compression.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Compression.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Compression.java
new file mode 100644
index 0000000..4d5b2bc
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Compression.java
@@ -0,0 +1,19 @@
+package PMTiles;
+
+public enum Compression {
+  Unknown(0),
+  None(1),
+  Gzip(2),
+  Brotli(3),
+  Zstd(4);
+
+  private final int value;
+
+  Compression(int value) {
+    this.value = value;
+  }
+
+  public int getValue() {
+    return value;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Decompress.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Decompress.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Decompress.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Decompress.java
new file mode 100644
index 0000000..893dd63
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Decompress.java
@@ -0,0 +1,43 @@
+package PMTiles;
+
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.nio.ByteBuffer;
+import java.util.zip.GZIPInputStream;
+
+public class Decompress {
+
+  public static ByteBuffer decompress(ByteBuffer data, int compression)
+    throws IOException {
+    if (compression == 1 || compression == 0) {
+      return data;
+    } else if (compression == 2) {
+      return decompressGzip(data);
+    } else {
+      throw new IllegalArgumentException("Compression method not supported");
+    }
+  }
+
+  private static ByteBuffer decompressGzip(ByteBuffer data) throws IOException {
+    //System.out.println("Decompressing GZIP");
+    //System.out.println("Data length: " + data);
+    byte[] inputData = new byte[data.remaining()];
+    data.get(inputData);
+
+    try (
+      ByteArrayInputStream bais = new ByteArrayInputStream(inputData);
+      GZIPInputStream gzipInputStream = new GZIPInputStream(bais);
+      ByteArrayOutputStream baos = new ByteArrayOutputStream()
+    ) {
+      byte[] buffer = new byte[4096];
+      int bytesRead;
+
+      while ((bytesRead = gzipInputStream.read(buffer)) != -1) {
+        baos.write(buffer, 0, bytesRead);
+      }
+
+      return ByteBuffer.wrap(baos.toByteArray());
+    }
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/DecompressFunc.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/DecompressFunc.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/DecompressFunc.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/DecompressFunc.java
new file mode 100644
index 0000000..a8b53c0
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/DecompressFunc.java
@@ -0,0 +1,7 @@
+package PMTiles;
+
+import java.nio.ByteBuffer;
+
+public interface DecompressFunc {
+  ByteBuffer decompress(ByteBuffer buf, int compression);
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Entry.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Entry.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Entry.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Entry.java
new file mode 100644
index 0000000..65bf0e7
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Entry.java
@@ -0,0 +1,65 @@
+package PMTiles;
+
+public class Entry {
+
+  public long tileId;
+  public long offset;
+  public int length;
+  public int runLength;
+
+  public Entry(long tileId, long offset, int length, int runLength) {
+    this.tileId = tileId;
+    this.offset = offset;
+    this.length = length;
+    this.runLength = runLength;
+  }
+
+  // Getter and Setter methods
+  public long getTileId() {
+    return tileId;
+  }
+
+  public void setTileId(long tileId) {
+    this.tileId = tileId;
+  }
+
+  public long getOffset() {
+    return offset;
+  }
+
+  public void setOffset(long offset) {
+    this.offset = offset;
+  }
+
+  public int getLength() {
+    return length;
+  }
+
+  public void setLength(int length) {
+    this.length = length;
+  }
+
+  public int getRunLength() {
+    return runLength;
+  }
+
+  public void setRunLength(int runLength) {
+    this.runLength = runLength;
+  }
+
+  @Override
+  public String toString() {
+    return (
+      "Entry{" +
+      "tileId=" +
+      tileId +
+      ", offset=" +
+      offset +
+      ", length=" +
+      length +
+      ", runLength=" +
+      runLength +
+      '}'
+    );
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/EtagMismatch.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/EtagMismatch.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/EtagMismatch.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/EtagMismatch.java
new file mode 100644
index 0000000..0884c9a
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/EtagMismatch.java
@@ -0,0 +1,12 @@
+package PMTiles;
+
+public class EtagMismatch extends RuntimeException {
+
+  public EtagMismatch() {
+    super();
+  }
+
+  public EtagMismatch(String message) {
+    super(message);
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/FetchSource.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/FetchSource.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/FetchSource.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/FetchSource.java
new file mode 100644
index 0000000..560eb7d
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/FetchSource.java
@@ -0,0 +1,62 @@
+package PMTiles;
+
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.net.URLConnection;
+import java.nio.ByteBuffer;
+import java.util.concurrent.CompletableFuture;
+
+public class FetchSource implements Source {
+
+  private final String url;
+
+  public FetchSource(String url) {
+    this.url = url;
+  }
+
+  public String getKey() {
+    return this.url;
+  }
+
+  public CompletableFuture<RangeResponse> getBytes(long offset, long length) {
+    return CompletableFuture.supplyAsync(() -> {
+      try {
+        URL urlObj = new URL(this.url);
+        URLConnection connection = urlObj.openConnection();
+        connection.setConnectTimeout(10 * 1000);
+        connection.setReadTimeout(10 * 1000);
+        String rangeHeader = "bytes=" + offset + "-" + (offset + length - 1);
+        connection.setRequestProperty("Range", rangeHeader);
+
+        int responseCode = ((HttpURLConnection) connection).getResponseCode();
+        if (responseCode >= 300) {
+          throw new RuntimeException("Bad response code: " + responseCode);
+        }
+
+        try (InputStream in = connection.getInputStream(); ByteArrayOutputStream out = new ByteArrayOutputStream()) {
+          byte[] buffer = new byte[1024];
+          int bytesRead;
+
+          while ((bytesRead = in.read(buffer)) != -1) {
+            out.write(buffer, 0, bytesRead);
+          }
+
+          byte[] responseBody = out.toByteArray();
+          ByteBuffer data = ByteBuffer.wrap(responseBody);
+
+          String etag = connection.getHeaderField("ETag");
+          String cacheControl = connection.getHeaderField("Cache-Control");
+          String expires = connection.getHeaderField("Expires");
+
+          return new RangeResponse(data, etag, cacheControl, expires);
+        }
+      } catch (IOException e) {
+        System.out.println("Error: " + e.getMessage());
+        return null;
+      }
+    });
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Header.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Header.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Header.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Header.java
new file mode 100644
index 0000000..3dbccc2
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Header.java
@@ -0,0 +1,239 @@
+package PMTiles;
+
+public class Header {
+
+  private int specVersion;
+  private long rootDirectoryOffset;
+  private long rootDirectoryLength;
+  private long jsonMetadataOffset;
+  private long jsonMetadataLength;
+  private long leafDirectoryOffset;
+  private long leafDirectoryLength;
+  private long tileDataOffset;
+  private long tileDataLength;
+  private long numAddressedTiles;
+  private long numTileEntries;
+  private long numTileContents;
+  private boolean clustered;
+  private int internalCompression;
+  private int tileCompression;
+  private int tileType;
+  private int minZoom;
+  private int maxZoom;
+  private double minLon;
+  private double minLat;
+  private double maxLon;
+  private double maxLat;
+  private int centerZoom;
+  private double centerLon;
+  private double centerLat;
+  private String etag;
+
+  public int getSpecVersion() {
+    return specVersion;
+  }
+
+  public void setSpecVersion(int specVersion) {
+    this.specVersion = specVersion;
+  }
+
+  public long getRootDirectoryOffset() {
+    return rootDirectoryOffset;
+  }
+
+  public void setRootDirectoryOffset(long rootDirectoryOffset) {
+    this.rootDirectoryOffset = rootDirectoryOffset;
+  }
+
+  public long getRootDirectoryLength() {
+    return rootDirectoryLength;
+  }
+
+  public void setRootDirectoryLength(long rootDirectoryLength) {
+    this.rootDirectoryLength = rootDirectoryLength;
+  }
+
+  public long getJsonMetadataOffset() {
+    return jsonMetadataOffset;
+  }
+
+  public void setJsonMetadataOffset(long jsonMetadataOffset) {
+    this.jsonMetadataOffset = jsonMetadataOffset;
+  }
+
+  public long getJsonMetadataLength() {
+    return jsonMetadataLength;
+  }
+
+  public void setJsonMetadataLength(long jsonMetadataLength) {
+    this.jsonMetadataLength = jsonMetadataLength;
+  }
+
+  public long getLeafDirectoryOffset() {
+    return leafDirectoryOffset;
+  }
+
+  public void setLeafDirectoryOffset(long leafDirectoryOffset) {
+    this.leafDirectoryOffset = leafDirectoryOffset;
+  }
+
+  public long getLeafDirectoryLength() {
+    return leafDirectoryLength;
+  }
+
+  public void setLeafDirectoryLength(long leafDirectoryLength) {
+    this.leafDirectoryLength = leafDirectoryLength;
+  }
+
+  public long getTileDataOffset() {
+    return tileDataOffset;
+  }
+
+  public void setTileDataOffset(long tileDataOffset) {
+    this.tileDataOffset = tileDataOffset;
+  }
+
+  public long getTileDataLength() {
+    return tileDataLength;
+  }
+
+  public void setTileDataLength(long tileDataLength) {
+    this.tileDataLength = tileDataLength;
+  }
+
+  public long getNumAddressedTiles() {
+    return numAddressedTiles;
+  }
+
+  public void setNumAddressedTiles(long numAddressedTiles) {
+    this.numAddressedTiles = numAddressedTiles;
+  }
+
+  public long getNumTileEntries() {
+    return numTileEntries;
+  }
+
+  public void setNumTileEntries(long numTileEntries) {
+    this.numTileEntries = numTileEntries;
+  }
+
+  public long getNumTileContents() {
+    return numTileContents;
+  }
+
+  public void setNumTileContents(long numTileContents) {
+    this.numTileContents = numTileContents;
+  }
+
+  public boolean isClustered() {
+    return clustered;
+  }
+
+  public void setClustered(boolean clustered) {
+    this.clustered = clustered;
+  }
+
+  public int getInternalCompression() {
+    return internalCompression;
+  }
+
+  public void setInternalCompression(int internalCompression) {
+    this.internalCompression = internalCompression;
+  }
+
+  public int getTileCompression() {
+    return tileCompression;
+  }
+
+  public void setTileCompression(int tileCompression) {
+    this.tileCompression = tileCompression;
+  }
+
+  public int getTileType() {
+    return tileType;
+  }
+
+  public void setTileType(int tileType) {
+    this.tileType = tileType;
+  }
+
+  public int getMinZoom() {
+    return minZoom;
+  }
+
+  public void setMinZoom(int minZoom) {
+    this.minZoom = minZoom;
+  }
+
+  public int getMaxZoom() {
+    return maxZoom;
+  }
+
+  public void setMaxZoom(int maxZoom) {
+    this.maxZoom = maxZoom;
+  }
+
+  public double getMinLon() {
+    return minLon;
+  }
+
+  public void setMinLon(double minLon) {
+    this.minLon = minLon;
+  }
+
+  public double getMinLat() {
+    return minLat;
+  }
+
+  public void setMinLat(double minLat) {
+    this.minLat = minLat;
+  }
+
+  public double getMaxLon() {
+    return maxLon;
+  }
+
+  public void setMaxLon(double maxLon) {
+    this.maxLon = maxLon;
+  }
+
+  public double getMaxLat() {
+    return maxLat;
+  }
+
+  public void setMaxLat(double maxLat) {
+    this.maxLat = maxLat;
+  }
+
+  public int getCenterZoom() {
+    return centerZoom;
+  }
+
+  public void setCenterZoom(int centerZoom) {
+    this.centerZoom = centerZoom;
+  }
+
+  public double getCenterLon() {
+    return centerLon;
+  }
+
+  public void setCenterLon(double centerLon) {
+    this.centerLon = centerLon;
+  }
+
+  public double getCenterLat() {
+    return centerLat;
+  }
+
+  public void setCenterLat(double centerLat) {
+    this.centerLat = centerLat;
+  }
+
+  public String getEtag() {
+    return etag;
+  }
+
+  public void setEtag(String etag) {
+    this.etag = etag;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTiles.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTiles.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTiles.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTiles.java
new file mode 100644
index 0000000..d6b421d
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTiles.java
@@ -0,0 +1,170 @@
+package PMTiles;
+
+import android.util.Log;
+import java.io.IOException;
+import java.lang.InterruptedException;
+import java.nio.ByteBuffer;
+import java.nio.charset.CharacterCodingException;
+import java.nio.charset.Charset;
+import java.nio.charset.CharsetDecoder;
+import java.nio.charset.CodingErrorAction;
+import java.nio.charset.StandardCharsets;
+import java.util.List;
+import java.util.Optional;
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.atomic.AtomicReference;
+import java.util.function.Function;
+
+public class PMTiles {
+
+  private final Source source;
+  private final Cache cache;
+  private final DecompressFunc decompress;
+
+  public PMTiles(Object source, Cache cache, DecompressFunc decompress) {
+    if (source instanceof String) {
+      this.source = new FetchSource((String) source);
+    } else {
+      this.source = (Source) source;
+    }
+    if (decompress != null) {
+      this.decompress = decompress;
+    } else {
+      this.decompress =
+        (data, compression) -> {
+          try {
+            return Decompress.decompress(data, compression);
+          } catch (IOException e) {
+            throw new RuntimeException("Decompression failed", e);
+          }
+        };
+    }
+    if (cache != null) {
+      this.cache = cache;
+    } else {
+      this.cache = new SharedPromiseCache(100, true, this.decompress);
+    }
+  }
+
+  public CompletableFuture<Header> getHeader() {
+    return cache.getHeader(source, null);
+  }
+
+  public CompletableFuture<Optional<RangeResponse>> getZxyAttempt(int z, int x, int y) {
+    long tileId = PMTilesUtils.zxyToTileId(z, x, y);
+    Log.v("MainActivity", "tileId: " + tileId + " " + z + " " + x + " " + y);
+    //System.out.println("tileId: " + tileId + " " + z + " " + x + " " + y);
+    CompletableFuture<Header> headerFuture = cache.getHeader(source, null);
+
+    return headerFuture.thenCompose(header -> {
+      if (z < header.getMinZoom() || z > header.getMaxZoom()) {
+        return CompletableFuture.completedFuture(Optional.empty());
+      }
+
+      long directoryOffset = header.getRootDirectoryOffset();
+      long directoryLength = header.getRootDirectoryLength();
+      //   System.out.println("directoryOffset: " + directoryOffset);
+      //   System.out.println("directoryLength: " + directoryLength);
+      Optional<RangeResponse> r = searchDirectoryForTile(tileId, header, directoryOffset, directoryLength);
+      return CompletableFuture.completedFuture(r);
+    });
+  }
+
+  private Optional<RangeResponse> searchDirectoryForTile(
+    long tileId,
+    Header header,
+    long directoryOffset,
+    long directoryLength
+  ) {
+    //System.out.println("searchDirectoryForTile: " + tileId);
+    for (int depth = 0; depth <= 3; depth++) {
+      //System.out.println("depth: " + depth);
+      List<Entry> directory = cache.getDirectory(source, directoryOffset, directoryLength, header).join(); // Assuming getDirectory returns CompletableFuture<Directory>
+      //System.out.println("directory: " + directory);
+      Entry entry = PMTilesUtils.findTile(directory, tileId);
+
+      if (entry != null) {
+        if (entry.getRunLength() > 0) {
+          RangeResponse resp = source
+            .getBytes(header.getTileDataOffset() + entry.getOffset(), entry.getLength())
+            .join(); // Assuming getBytes returns CompletableFuture<Resp>
+
+          if (header.getEtag() != null && !header.getEtag().equals(resp.etag)) {
+            throw new EtagMismatch(resp.etag);
+          }
+
+          RangeResponse rangeResponse = new RangeResponse(
+            this.decompress.decompress(resp.data, header.getTileCompression()), // Assuming decompress returns byte[]
+            null,
+            resp.cacheControl,
+            resp.expires
+          );
+          //System.out.println("found entry: " + entry);
+          return Optional.of(rangeResponse);
+        } else {
+          directoryOffset = header.getLeafDirectoryOffset() + entry.getOffset();
+          directoryLength = entry.getLength();
+          //System.out.println("next directoryOffset: " + directoryOffset);
+        }
+      } else {
+        return Optional.empty();
+      }
+    }
+    throw new RuntimeException("Maximum directory depth exceeded");
+  }
+
+  public CompletableFuture<Optional<RangeResponse>> getZxy(int z, int x, int y) {
+    return getZxyAttempt(z, x, y)
+      .exceptionally(ex -> {
+        if (ex.getCause() instanceof EtagMismatch) {
+          cache.invalidate(source, ex.getMessage());
+          return getZxyAttempt(z, x, y).join();
+        } else {
+          System.out.println("Exception: " + ex);
+          throw new RuntimeException(ex);
+        }
+      });
+  }
+
+  public CompletableFuture<Object> getMetadataAttempt() {
+    return cache
+      .getHeader(source, null)
+      .thenApply(header -> {
+        RangeResponse resp;
+        try {
+          resp = source.getBytes(header.getJsonMetadataOffset(), header.getJsonMetadataLength()).get();
+        } catch (InterruptedException | ExecutionException e) {
+          throw new RuntimeException(e);
+        }
+
+        if (header.getEtag() != null && !header.getEtag().equals(resp.etag)) {
+          return CompletableFuture.failedFuture(new EtagMismatch(resp.etag));
+        }
+
+        ByteBuffer decompressed = this.decompress.decompress(resp.data, header.getInternalCompression());
+        CharsetDecoder decoder = Charset
+          .forName("UTF-8")
+          .newDecoder()
+          .onMalformedInput(CodingErrorAction.REPORT)
+          .onUnmappableCharacter(CodingErrorAction.REPORT);
+        try {
+          return decoder.decode(decompressed).toString();
+        } catch (CharacterCodingException e) {
+          throw new RuntimeException(e);
+        }
+      });
+  }
+
+  public CompletableFuture<Object> getMetadata() {
+    return getMetadataAttempt()
+      .exceptionally(ex -> {
+        if (ex.getCause() instanceof EtagMismatch) {
+          cache.invalidate(source, ex.getMessage());
+          return getMetadataAttempt().join();
+        } else {
+          throw new RuntimeException(ex);
+        }
+      });
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTilesUtils.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTilesUtils.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTilesUtils.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTilesUtils.java
new file mode 100644
index 0000000..b3d2a44
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/PMTilesUtils.java
@@ -0,0 +1,396 @@
+package PMTiles;
+
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.util.AbstractMap.SimpleEntry;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.Optional;
+import java.util.concurrent.CompletableFuture;
+
+class PMTilesUtils {
+
+  static final int HEADER_SIZE_BYTES = 127;
+
+  public static Header bytesToHeader(ByteBuffer bytes, String etag) {
+    bytes.order(ByteOrder.LITTLE_ENDIAN);
+    // for (int i = 0; i < bytes.limit(); i++) {
+    //   System.out.printf("%X ", bytes.get(i));
+    // }
+    int specVersion = bytes.get(7);
+    //System.out.println("specVersion: " + specVersion);
+    if (specVersion > 3) {
+      throw new RuntimeException(
+        "Archive is spec version " + specVersion + " but this library supports up to spec version 3"
+      );
+    }
+
+    Header header = new Header();
+    header.setSpecVersion(specVersion);
+    header.setRootDirectoryOffset(getUint64(bytes, 8));
+    header.setRootDirectoryLength(getUint64(bytes, 16));
+    header.setJsonMetadataOffset(getUint64(bytes, 24));
+    header.setJsonMetadataLength(getUint64(bytes, 32));
+    header.setLeafDirectoryOffset(getUint64(bytes, 40));
+    header.setLeafDirectoryLength(getUint64(bytes, 48));
+    header.setTileDataOffset(getUint64(bytes, 56));
+    header.setTileDataLength(getUint64(bytes, 64));
+    header.setNumAddressedTiles(getUint64(bytes, 72));
+    header.setNumTileEntries(getUint64(bytes, 80));
+    header.setNumTileContents(getUint64(bytes, 88));
+    header.setClustered(bytes.get(96) == 1);
+    header.setInternalCompression(bytes.get(97));
+    header.setTileCompression(bytes.get(98));
+    header.setTileType(bytes.get(99));
+    header.setMinZoom(bytes.get(100));
+    header.setMaxZoom(bytes.get(101));
+    header.setMinLon(bytes.getInt(102) / 10000000.0);
+    header.setMinLat(bytes.getInt(106) / 10000000.0);
+    header.setMaxLon(bytes.getInt(110) / 10000000.0);
+    header.setMaxLat(bytes.getInt(114) / 10000000.0);
+    header.setCenterZoom(bytes.get(118));
+    header.setCenterLon(bytes.getInt(119) / 10000000.0);
+    header.setCenterLat(bytes.getInt(123) / 10000000.0);
+    header.setEtag(etag);
+
+    return header;
+  }
+
+  private static long getUint64(ByteBuffer buffer, int offset) {
+    long wh = (long) buffer.getInt(offset + 4) & 0xFFFFFFFFL;
+    long wl = (long) buffer.getInt(offset + 0) & 0xFFFFFFFFL;
+    return wh * (long) Math.pow(2, 32) + wl;
+  }
+
+  static long toNum(int low, int high) {
+    long result = (((long) high) << 32) | (((long) low) & 0xffffffffL);
+    //System.out.println("toNum: " + low + " " + high + " " + result);
+    return result;
+  }
+
+  static long readVarintRemainder(int l, BufferPosition p) {
+    ByteBuffer buf = p.buf;
+    int h, b;
+    b = buf.get(p.pos++) & 0xFF;
+    h = (b & 0x70) >> 4;
+    if (b < 0x80) return toNum(l, h);
+    b = buf.get(p.pos++) & 0xFF;
+    h |= (b & 0x7f) << 3;
+    if (b < 0x80) return toNum(l, h);
+    b = buf.get(p.pos++) & 0xFF;
+    h |= (b & 0x7f) << 10;
+    if (b < 0x80) return toNum(l, h);
+    b = buf.get(p.pos++) & 0xFF;
+    h |= (b & 0x7f) << 17;
+    if (b < 0x80) return toNum(l, h);
+    b = buf.get(p.pos++) & 0xFF;
+    h |= (b & 0x7f) << 24;
+    if (b < 0x80) return toNum(l, h);
+    b = buf.get(p.pos++) & 0xFF;
+    h |= (b & 0x01) << 31;
+    if (b < 0x80) return toNum(l, h);
+    throw new RuntimeException("Expected varint not more than 10 bytes");
+  }
+
+  static long readVarint(BufferPosition p) {
+    ByteBuffer buf = p.buf;
+    int val, b;
+
+    b = buf.get(p.pos++) & 0xFF;
+    val = b & 0x7f;
+    if (b < 0x80) return val;
+    b = buf.get(p.pos++) & 0xFF;
+    val |= (b & 0x7f) << 7;
+    if (b < 0x80) return val;
+    b = buf.get(p.pos++) & 0xFF;
+    val |= (b & 0x7f) << 14;
+    if (b < 0x80) return val;
+    b = buf.get(p.pos++) & 0xFF;
+    val |= (b & 0x7f) << 21;
+    if (b < 0x80) return val;
+    b = buf.get(p.pos) & 0xFF;
+    val |= (b & 0x0f) << 28;
+    //System.out.println("readVarintRemainder: " + val);
+    //System.out.println("p pos: " + p.pos);
+    return readVarintRemainder(val, p);
+  }
+
+  public static List<Entry> deserializeIndex(ByteBuffer buffer) {
+    BufferPosition p = new BufferPosition(buffer, 0);
+    //System.out.println("buffer length (capacity): " + p.buf.capacity());
+    int numEntries = (int) readVarint(p);
+    //System.out.println("numEntries: " + numEntries);
+    List<Entry> entries = new ArrayList<>();
+    // System.out.println("buffer position: " + p.pos);
+    // for (int i = 0; i < p.buf.limit(); i++) {
+    //   System.out.printf("%d ", p.buf.get(i) & 0xFF);
+    // }
+    long lastId = 0;
+    for (int i = 0; i < numEntries; i++) {
+      long v = readVarint(p);
+      //System.out.println("tileId:" + (lastId + v));
+      entries.add(new Entry(lastId + v, 0, 0, 1));
+      lastId += v;
+    }
+
+    for (int i = 0; i < numEntries; i++) {
+      entries.get(i).runLength = (int) readVarint(p);
+    }
+
+    for (int i = 0; i < numEntries; i++) {
+      entries.get(i).length = (int) readVarint(p);
+    }
+
+    for (int i = 0; i < numEntries; i++) {
+      int v = (int) readVarint(p);
+      if (v == 0 && i > 0) {
+        entries.get(i).offset = entries.get(i - 1).offset + entries.get(i - 1).length;
+      } else {
+        entries.get(i).offset = v - 1;
+      }
+      //System.out.println("tileId:" + entries.get(i).tileId);
+      //System.out.println("runLength:" + entries.get(i).runLength);
+    }
+
+    return entries;
+  }
+
+  public static CompletableFuture<SimpleEntry<Header, Optional<RootDirData>>> getHeaderAndRoot(
+    Source source,
+    boolean prefetch,
+    String currentEtag
+  ) {
+    try {
+      //System.out.println("Fetching header from " + source.getKey());
+      RangeResponse resp = source.getBytes(0, 16384).get();
+
+      //System.out.println(resp);
+      ByteBuffer buffer = resp.data;
+      buffer.order(ByteOrder.LITTLE_ENDIAN);
+
+      if (buffer.getShort(0) != 0x4d50) {
+        throw new RuntimeException("Wrong magic number for PMTiles archive");
+      }
+
+      ByteBuffer headerData = (ByteBuffer) buffer.slice().limit(HEADER_SIZE_BYTES);
+      String respEtag = resp.etag;
+      if (currentEtag != null && !resp.etag.equals(currentEtag)) {
+        System.err.println(
+          "ETag conflict detected; your HTTP server might not support content-based ETag headers. ETags disabled for " +
+          source.getKey()
+        );
+        respEtag = null;
+      }
+      // System.out.println("respEtag: " + respEtag);
+      Header header = bytesToHeader(headerData, respEtag);
+      //System.out.println("header: " + header);
+      if (prefetch) {
+        //System.out.println(header.getRootDirectoryOffset());
+        int rootDirOffset = (int) header.getRootDirectoryOffset();
+        int rootDirLength = (int) header.getRootDirectoryLength();
+        //System.out.println("rootDirOffset: " + rootDirOffset);
+        //System.out.println("rootDirLength: " + rootDirLength);
+        ByteBuffer rootDirData = (ByteBuffer) buffer.position(rootDirOffset);
+        rootDirData = (ByteBuffer) rootDirData.slice().limit(rootDirLength);
+
+        String dirKey =
+          source.getKey() +
+          "|" +
+          (header.getEtag() != null ? header.getEtag() : "") +
+          "|" +
+          rootDirOffset +
+          "|" +
+          rootDirLength;
+
+        ByteBuffer deserialized = Decompress.decompress(rootDirData, header.getInternalCompression());
+        //deserialized.order(ByteOrder.LITTLE_ENDIAN);
+        // for (int i = 0; i < deserialized.limit(); i++) {
+        //   System.out.printf("%d ", deserialized.get(i) & 0xFF);
+        // }
+        List<Entry> rootDir = deserializeIndex(deserialized);
+        //System.out.println("dirKey: " + dirKey);
+        //System.out.println("rootDirSize: " + rootDir.size());
+        //System.out.println("rootDir: " + rootDir);
+
+        return CompletableFuture.completedFuture(
+          new SimpleEntry<>(header, Optional.of(new RootDirData(dirKey, rootDir.size(), rootDir)))
+        );
+      }
+
+      return CompletableFuture.completedFuture(new SimpleEntry<>(header, Optional.empty()));
+    } catch (Exception e) {
+      e.printStackTrace();
+      return null;
+    }
+  }
+
+  public static CompletableFuture<List<Entry>> getDirectory(
+    Source source,
+    DecompressFunc decompress,
+    long offset,
+    long length,
+    Header header
+  ) {
+    //System.out.println("offset: " + offset);
+    //System.out.println("length: " + length);
+    return source
+      .getBytes(offset, length)
+      .thenApply(resp -> {
+        if (header.getEtag() != null && !header.getEtag().equals(resp.etag)) {
+          throw new EtagMismatch(resp.etag);
+        }
+
+        return decompress.decompress(resp.data, header.getInternalCompression());
+      })
+      .thenApply(data -> {
+        List<Entry> directory = deserializeIndex(data);
+        if (directory.isEmpty()) {
+          throw new RuntimeException("Empty directory is invalid");
+        }
+
+        return directory;
+      });
+  }
+
+  private static final long[] tzValues = {
+    0,
+    1,
+    5,
+    21,
+    85,
+    341,
+    1365,
+    5461,
+    21845,
+    87381,
+    349525,
+    1398101,
+    5592405,
+    22369621,
+    89478485,
+    357913941,
+    1431655765,
+    5726623061L,
+    22906492245L,
+    91625968981L,
+    366503875925L,
+    1466015503701L,
+    5864062014805L,
+    23456248059221L,
+    93824992236885L,
+    375299968947541L,
+    1501199875790165L,
+  };
+
+  public static void rotate(long n, long[] xy, long rx, long ry) {
+    if (ry == 0) {
+      if (rx == 1) {
+        xy[0] = n - 1 - xy[0];
+        xy[1] = n - 1 - xy[1];
+      }
+      long t = xy[0];
+      xy[0] = xy[1];
+      xy[1] = t;
+    }
+  }
+
+  public static int[] idOnLevel(int z, long pos) {
+    int n = (int) Math.pow(2, z);
+    long rx = pos;
+    long ry = pos;
+    long t = pos;
+    long[] xy = { 0, 0 };
+    long s = 1;
+    while (s < n) {
+      rx = 1 & (t / 2);
+      ry = 1 & (t ^ rx);
+      rotate(s, xy, rx, ry);
+      xy[0] += s * rx;
+      xy[1] += s * ry;
+      t = t / 4;
+      s *= 2;
+    }
+    return new int[] { z, (int) xy[0], (int) xy[1] };
+  }
+
+  public static long zxyToTileId(int z, int x, int y) {
+    if (z > 26) {
+      throw new Error("Tile zoom level exceeds max safe number limit (26)");
+    }
+    if (x > Math.pow(2, z) - 1 || y > Math.pow(2, z) - 1) {
+      throw new Error("tile x/y outside zoom level bounds");
+    }
+
+    long acc = tzValues[z];
+    long n = (long) Math.pow(2, z);
+    long rx = 0;
+    long ry = 0;
+    long d = 0;
+    long[] xy = { x, y };
+    long s = n / 2;
+    while (s > 0) {
+      rx = (xy[0] & s) > 0 ? 1 : 0;
+      ry = (xy[1] & s) > 0 ? 1 : 0;
+      d += s * s * ((3 * rx) ^ ry);
+      rotate(s, xy, rx, ry);
+      s = s / 2;
+    }
+    return acc + d;
+  }
+
+  public static int[] tileIdToZxy(long i) {
+    long acc = 0;
+    int z;
+
+    for (z = 0; z < 27; z++) {
+      long num_tiles = (long) Math.pow(2, z) * (long) Math.pow(2, z);
+      if (acc + num_tiles > i) {
+        return idOnLevel(z, i - acc);
+      }
+      acc += num_tiles;
+    }
+
+    throw new Error("Tile zoom level exceeds max safe number limit (26)");
+  }
+
+  public static Entry findTile(List<Entry> entries, long tileId) {
+    int m = 0;
+    int n = entries.size() - 1;
+    //System.out.println("entries.size() = " + entries.size());
+    //System.out.println("tileId = " + tileId);
+    while (m <= n) {
+      int k = (n + m) >> 1;
+      //System.out.println("k = " + k);
+      //System.out.println("entries.get(k).tileId = " + entries.get(k).tileId);
+      // System.out.println(
+      //   "entries.get(k).runLength = " + entries.get(k).runLength
+      // );
+      // System.out.println("entries.get(k).offset = " + entries.get(k).offset);
+
+      int cmp = Long.compare(tileId, entries.get(k).tileId);
+      if (cmp > 0) {
+        m = k + 1;
+      } else if (cmp < 0) {
+        n = k - 1;
+      } else {
+        //System.out.println("found");
+        return entries.get(k);
+      }
+    }
+    //System.out.println("n = " + n);
+    // System.out.println(
+    //   "entries.get(n).runLength = " + entries.get(n).runLength
+    // );
+    // at this point, m > n
+    if (n >= 0) {
+      if (entries.get(n).runLength == 0) {
+        return entries.get(n);
+      }
+      if (tileId - entries.get(n).tileId < entries.get(n).runLength) {
+        return entries.get(n);
+      }
+    }
+    return null;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RangeResponse.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RangeResponse.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RangeResponse.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RangeResponse.java
new file mode 100644
index 0000000..d55aba9
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RangeResponse.java
@@ -0,0 +1,23 @@
+package PMTiles;
+
+import java.nio.ByteBuffer;
+
+public class RangeResponse {
+
+  public ByteBuffer data;
+  public String etag;
+  public String cacheControl;
+  public String expires;
+
+  public RangeResponse(
+    ByteBuffer data,
+    String etag,
+    String cacheControl,
+    String expires
+  ) {
+    this.data = data;
+    this.etag = etag;
+    this.cacheControl = cacheControl;
+    this.expires = expires;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RootDirData.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RootDirData.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RootDirData.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RootDirData.java
new file mode 100644
index 0000000..e5d1e83
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/RootDirData.java
@@ -0,0 +1,28 @@
+package PMTiles;
+
+import java.util.List;
+
+public class RootDirData {
+
+  private String dirKey;
+  private int length;
+  private List<Entry> entries;
+
+  public RootDirData(String dirKey, int length, List<Entry> entries) {
+    this.dirKey = dirKey;
+    this.length = length;
+    this.entries = entries;
+  }
+
+  public String getDirKey() {
+    return dirKey;
+  }
+
+  public int getLength() {
+    return length;
+  }
+
+  public List<Entry> getEntries() {
+    return entries;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/SharedPromiseCache.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/SharedPromiseCache.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/SharedPromiseCache.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/SharedPromiseCache.java
new file mode 100644
index 0000000..a8efe6a
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/SharedPromiseCache.java
@@ -0,0 +1,185 @@
+package PMTiles;
+
+import java.nio.ByteBuffer;
+import java.nio.ByteOrder;
+import java.util.AbstractMap.SimpleEntry;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Optional;
+import java.util.concurrent.CompletableFuture;
+
+class SharedPromiseCacheValue<T> {
+
+  private long lastUsed;
+  private CompletableFuture<T> data;
+
+  public SharedPromiseCacheValue(long lastUsed, CompletableFuture<T> data) {
+    this.lastUsed = lastUsed;
+    this.data = data;
+  }
+
+  public long getLastUsed() {
+    return lastUsed;
+  }
+
+  public void setLastUsed(long lastUsed) {
+    this.lastUsed = lastUsed;
+  }
+
+  public CompletableFuture<T> getData() {
+    return data;
+  }
+
+  public void setData(CompletableFuture<T> data) {
+    this.data = data;
+  }
+}
+
+public class SharedPromiseCache implements Cache {
+
+  private final Map<String, SharedPromiseCacheValue> cache;
+  private final int maxCacheEntries;
+  private long counter;
+  private final boolean prefetch;
+  private final DecompressFunc decompress;
+
+  public SharedPromiseCache(
+    int maxCacheEntries,
+    boolean prefetch,
+    DecompressFunc decompress
+  ) {
+    this.cache = new HashMap<String, SharedPromiseCacheValue>();
+    this.maxCacheEntries = maxCacheEntries;
+    this.counter = 1;
+    this.prefetch = prefetch;
+    this.decompress = decompress;
+  }
+
+  public CompletableFuture<Header> getHeader(
+    Source source,
+    String currentEtag
+  ) {
+    String cacheKey = source.getKey();
+    if (cache.containsKey(cacheKey)) {
+      cache.get(cacheKey).setLastUsed(counter++);
+      return (CompletableFuture<Header>) cache.get(cacheKey).getData();
+    }
+
+    CompletableFuture<Header> promise = PMTilesUtils
+      .getHeaderAndRoot(source, prefetch, currentEtag)
+      .thenApply(res -> {
+        if (res.getValue() != null) {
+          Optional<RootDirData> rootDirDataOpt = res.getValue();
+
+          cache.put(
+            rootDirDataOpt.get().getDirKey(),
+            new SharedPromiseCacheValue(
+              counter++,
+              CompletableFuture.completedFuture(
+                rootDirDataOpt.get().getEntries()
+              )
+            )
+          );
+        }
+        prune();
+        return res.getKey();
+      });
+
+    cache.put(cacheKey, new SharedPromiseCacheValue(counter++, promise));
+
+    return promise;
+  }
+
+  public CompletableFuture<List<Entry>> getDirectory(
+    Source source,
+    long offset,
+    long length,
+    Header header
+  ) {
+    String cacheKey =
+      source.getKey() +
+      "|" +
+      (header.getEtag() != null ? header.getEtag() : "") +
+      "|" +
+      offset +
+      "|" +
+      length;
+    //System.out.println("getDirectory: " + cacheKey);
+    if (cache.containsKey(cacheKey)) {
+      //System.out.println("getDirectory: " + cacheKey + " - cache hit");
+      cache.get(cacheKey).setLastUsed(counter++);
+      return (CompletableFuture<List<Entry>>) cache.get(cacheKey).getData();
+    }
+
+    CompletableFuture<List<Entry>> promise = PMTilesUtils.getDirectory(
+      source,
+      decompress,
+      offset,
+      length,
+      header
+    );
+
+    //System.out.println("getDirectory: " + cacheKey);
+    cache.put(cacheKey, new SharedPromiseCacheValue(counter++, promise));
+    prune();
+    //System.out.println("cache" + cache);
+    return promise;
+  }
+
+  public CompletableFuture<ByteBuffer> getArrayBuffer(
+    Source source,
+    long offset,
+    long length,
+    Header header
+  ) {
+    String cacheKey =
+      source.getKey() +
+      "|" +
+      (header.getEtag() != null ? header.getEtag() : "") +
+      "|" +
+      offset +
+      "|" +
+      length;
+    if (cache.containsKey(cacheKey)) {
+      cache.get(cacheKey).setLastUsed(counter++);
+      return (CompletableFuture<ByteBuffer>) cache.get(cacheKey).getData();
+    }
+
+    CompletableFuture<ByteBuffer> promise = source
+      .getBytes(offset, length)
+      .thenApply(resp -> {
+        if (header.getEtag() != null && !header.getEtag().equals(resp.etag)) {
+          throw new EtagMismatch(resp.etag);
+        }
+        prune();
+        return resp.data;
+      });
+
+    cache.put(cacheKey, new SharedPromiseCacheValue(counter++, promise));
+    return promise;
+  }
+
+  private void prune() {
+    if (cache.size() >= maxCacheEntries) {
+      long minUsed = Long.MAX_VALUE;
+      String minKey = null;
+      for (Map.Entry<String, SharedPromiseCacheValue> entry : cache.entrySet()) {
+        if (entry.getValue().getLastUsed() < minUsed) {
+          minUsed = entry.getValue().getLastUsed();
+          minKey = entry.getKey();
+        }
+      }
+      if (minKey != null) {
+        cache.remove(minKey);
+      }
+    }
+  }
+
+  public CompletableFuture<Void> invalidate(Source source, String currentEtag) {
+    cache.remove(source.getKey());
+    return getHeader(source, currentEtag).thenAccept(header -> {});
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/SharedPromiseCacheValue.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/SharedPromiseCacheValue.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Source.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Source.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Source.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Source.java
new file mode 100644
index 0000000..59075aa
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/Source.java
@@ -0,0 +1,9 @@
+package PMTiles;
+
+import java.util.concurrent.CompletableFuture;
+
+public interface Source {
+  CompletableFuture<RangeResponse> getBytes(long offset, long length);
+
+  String getKey();
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/TileType.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/TileType.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/TileType.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/TileType.java
new file mode 100644
index 0000000..744a96a
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/PMTiles/TileType.java
@@ -0,0 +1,19 @@
+package PMTiles;
+
+public enum TileType {
+  Unknown(0),
+  Mvt(1),
+  Png(2),
+  Jpeg(3),
+  Webp(4);
+
+  private final int value;
+
+  TileType(int value) {
+    this.value = value;
+  }
+
+  public int getValue() {
+    return value;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/LayoutStyle.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/LayoutStyle.java
new file mode 100644
index 0000000..b43d333
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/LayoutStyle.java
@@ -0,0 +1,17 @@
+package StyleLayer;
+
+import com.google.gson.annotations.SerializedName;
+import java.util.List;
+
+public class LayoutStyle {
+
+  @SerializedName("text-field")
+  public List<String> textField;
+
+  @SerializedName("text-size")
+  public int textSize;
+
+  @SerializedName("text-font")
+  public List<String> textFont;
+  // 他のlayout属性もこちらに追加
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/PaintStyle.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/PaintStyle.java
new file mode 100644
index 0000000..0f2638d
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/PaintStyle.java
@@ -0,0 +1,28 @@
+package StyleLayer;
+
+import com.google.gson.annotations.SerializedName;
+
+public class PaintStyle {
+
+  @SerializedName("fill-color")
+  public String fillColor;
+
+  @SerializedName("line-color")
+  public String lineColor;
+
+  @SerializedName("line-width")
+  public float lineWidth;
+
+  @SerializedName("circle-color")
+  public String circleColor;
+
+  @SerializedName("text-color")
+  public String textColor;
+
+  @SerializedName("text-halo-color")
+  public String textHaloColor;
+
+  @SerializedName("text-halo-width")
+  public float textHaloWidth;
+  // 他のpaint属性もこちらに追加
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/StyleLayer.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/StyleLayer.java
new file mode 100644
index 0000000..5675b38
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/StyleLayer.java
@@ -0,0 +1,30 @@
+package StyleLayer;
+
+import StyleLayer.LayoutStyle;
+import StyleLayer.PaintStyle;
+import com.google.gson.Gson;
+import com.google.gson.annotations.SerializedName;
+import java.util.Map;
+
+public class StyleLayer {
+
+  public String id;
+  public String type;
+  public String source;
+
+  @SerializedName("source-layer")
+  public String sourceLayer;
+
+  public int minzoom;
+  public int maxzoom;
+
+  public PaintStyle paint; // Map<String, Object> の代わりに
+  public LayoutStyle layout; // Map<String, Object> の代わりに
+
+  @Override
+  public String toString() {
+    // Gson オブジェクトを使ってオブジェクトを JSON 形式の文字列に変換
+    Gson gson = new Gson();
+    return gson.toJson(this);
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/VectorTileStyleManager.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/VectorTileStyleManager.java
new file mode 100644
index 0000000..5d5ec2d
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/VectorStyle/VectorTileStyleManager.java
@@ -0,0 +1,110 @@
+package VectorTileStyleManager;
+
+import StyleLayer.StyleLayer;
+import com.google.gson.Gson;
+import com.google.gson.reflect.TypeToken;
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.lang.reflect.Type;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.nio.file.FileAlreadyExistsException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import java.nio.file.Paths;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.CompletableFuture;
+
+public class VectorTileStyleManager {
+
+  private String urlTemplate;
+  private String localPath;
+
+  private List<StyleLayer> styleLayers; // ダウンロードしたスタイル情報を保存
+
+  public VectorTileStyleManager(String urlTemplate, String tileCachePath) {
+    this.urlTemplate = changeExtensionToJson(urlTemplate);
+    if (tileCachePath != null) {
+      this.localPath = tileCachePath + "/style.json";
+    }
+
+    loadStyleAsync()
+      .thenAccept(style -> {
+        Gson gson = new Gson();
+        Type listType = new TypeToken<List<StyleLayer>>() {}.getType();
+        this.styleLayers = gson.fromJson(style, listType);
+
+        System.out.println("loadedStyle: " + this.styleLayers);
+        // 他の処理（例えばスタイルの適用など）
+      })
+      .exceptionally(e -> {
+        System.out.println("Error loading style: " + e.getMessage());
+        return null;
+      });
+  }
+
+  public CompletableFuture<String> loadStyleAsync() {
+    return CompletableFuture.supplyAsync(() -> {
+      Path path = Paths.get(localPath);
+      if (Files.exists(path)) {
+        try {
+          return new String(Files.readAllBytes(path));
+        } catch (IOException e) {
+          throw new RuntimeException("Failed to read local file", e);
+        }
+      } else {
+        try {
+          return downloadAndSaveStyle();
+        } catch (IOException e) {
+          throw new RuntimeException("Failed to download and save style", e);
+        }
+      }
+    });
+  }
+
+  private String changeExtensionToJson(String url) {
+    return url.replaceAll("\\.[^.]+$", ".json");
+  }
+
+  public String downloadAndSaveStyle() throws IOException {
+    String style = downloadStyleJson(urlTemplate);
+    try {
+      Files.write(Paths.get(localPath), style.getBytes());
+    } catch (FileAlreadyExistsException e) {
+      // ファイルがすでに存在する場合の処理（オプション）
+    }
+    return style;
+  }
+
+  private String downloadStyleJson(String url) {
+    StringBuilder response = new StringBuilder();
+    try {
+      URL obj = new URL(url);
+      HttpURLConnection con = (HttpURLConnection) obj.openConnection();
+      con.setRequestMethod("GET");
+      int responseCode = con.getResponseCode();
+
+      if (responseCode == HttpURLConnection.HTTP_OK) {
+        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
+        String inputLine;
+        while ((inputLine = in.readLine()) != null) {
+          response.append(inputLine);
+        }
+        in.close();
+      } else {
+        throw new RuntimeException("Bad response code: " + responseCode);
+      }
+    } catch (IOException e) {
+      throw new RuntimeException("Failed to download style JSON", e);
+    }
+
+    return response.toString();
+  }
+
+  public List<StyleLayer> getStyleLayers() {
+    return this.styleLayers;
+  }
+}
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$1.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$1.class
new file mode 100644
index 0000000..c9b5f0c
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$1.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Builder.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Builder.class
new file mode 100644
index 0000000..1914f0f
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Builder.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature$1.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature$1.class
new file mode 100644
index 0000000..01c38fa
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature$1.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature$Builder.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature$Builder.class
new file mode 100644
index 0000000..9261091
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature$Builder.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature.class
new file mode 100644
index 0000000..6cf5fb5
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Feature.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$FeatureOrBuilder.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$FeatureOrBuilder.class
new file mode 100644
index 0000000..ec11bed
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$FeatureOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$GeomType$1.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$GeomType$1.class
new file mode 100644
index 0000000..a372f7c
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$GeomType$1.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$GeomType.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$GeomType.class
new file mode 100644
index 0000000..59d9bdf
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$GeomType.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer$1.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer$1.class
new file mode 100644
index 0000000..f170a0f
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer$1.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer$Builder.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer$Builder.class
new file mode 100644
index 0000000..6d749f7
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer$Builder.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer.class
new file mode 100644
index 0000000..cf5fa55
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Layer.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$LayerOrBuilder.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$LayerOrBuilder.class
new file mode 100644
index 0000000..edf68e2
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$LayerOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value$1.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value$1.class
new file mode 100644
index 0000000..0511575
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value$1.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value$Builder.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value$Builder.class
new file mode 100644
index 0000000..67566a2
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value$Builder.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value.class
new file mode 100644
index 0000000..5c13030
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$Value.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$ValueOrBuilder.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$ValueOrBuilder.class
new file mode 100644
index 0000000..b64964f
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile$ValueOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile.class
new file mode 100644
index 0000000..a020f4d
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$Tile.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$TileOrBuilder.class b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$TileOrBuilder.class
new file mode 100644
index 0000000..25d0a56
Binary files /dev/null and b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile$TileOrBuilder.class differ
diff --git a/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile.java b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile.java
new file mode 100644
index 0000000..d513f40
--- /dev/null
+++ b/node_modules/react-native-maps/android/src/main/java/com/airbnb/android/react/maps/vector_tile/VectorTile.java
@@ -0,0 +1,5763 @@
+// Generated by the protocol buffer compiler.  DO NOT EDIT!
+// source: vector_tile.proto
+
+package vector_tile;
+
+public final class VectorTile {
+  private VectorTile() {}
+  public static void registerAllExtensions(
+      com.google.protobuf.ExtensionRegistryLite registry) {
+  }
+
+  public static void registerAllExtensions(
+      com.google.protobuf.ExtensionRegistry registry) {
+    registerAllExtensions(
+        (com.google.protobuf.ExtensionRegistryLite) registry);
+  }
+  public interface TileOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:vector_tile.Tile)
+      com.google.protobuf.GeneratedMessageV3.
+          ExtendableMessageOrBuilder<Tile> {
+
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    java.util.List<vector_tile.VectorTile.Tile.Layer> 
+        getLayersList();
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    vector_tile.VectorTile.Tile.Layer getLayers(int index);
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    int getLayersCount();
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    java.util.List<? extends vector_tile.VectorTile.Tile.LayerOrBuilder> 
+        getLayersOrBuilderList();
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    vector_tile.VectorTile.Tile.LayerOrBuilder getLayersOrBuilder(
+        int index);
+  }
+  /**
+   * Protobuf type {@code vector_tile.Tile}
+   */
+  public static final class Tile extends
+      com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
+        Tile> implements
+      // @@protoc_insertion_point(message_implements:vector_tile.Tile)
+      TileOrBuilder {
+  private static final long serialVersionUID = 0L;
+    // Use Tile.newBuilder() to construct.
+    private Tile(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<vector_tile.VectorTile.Tile, ?> builder) {
+      super(builder);
+    }
+    private Tile() {
+      layers_ = java.util.Collections.emptyList();
+    }
+
+    @java.lang.Override
+    @SuppressWarnings({"unused"})
+    protected java.lang.Object newInstance(
+        UnusedPrivateParameter unused) {
+      return new Tile();
+    }
+
+    public static final com.google.protobuf.Descriptors.Descriptor
+        getDescriptor() {
+      return vector_tile.VectorTile.internal_static_vector_tile_Tile_descriptor;
+    }
+
+    @java.lang.Override
+    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+        internalGetFieldAccessorTable() {
+      return vector_tile.VectorTile.internal_static_vector_tile_Tile_fieldAccessorTable
+          .ensureFieldAccessorsInitialized(
+              vector_tile.VectorTile.Tile.class, vector_tile.VectorTile.Tile.Builder.class);
+    }
+
+    /**
+     * <pre>
+     * GeomType is described in section 4.3.4 of the specification
+     * </pre>
+     *
+     * Protobuf enum {@code vector_tile.Tile.GeomType}
+     */
+    public enum GeomType
+        implements com.google.protobuf.ProtocolMessageEnum {
+      /**
+       * <code>UNKNOWN = 0;</code>
+       */
+      UNKNOWN(0),
+      /**
+       * <code>POINT = 1;</code>
+       */
+      POINT(1),
+      /**
+       * <code>LINESTRING = 2;</code>
+       */
+      LINESTRING(2),
+      /**
+       * <code>POLYGON = 3;</code>
+       */
+      POLYGON(3),
+      ;
+
+      /**
+       * <code>UNKNOWN = 0;</code>
+       */
+      public static final int UNKNOWN_VALUE = 0;
+      /**
+       * <code>POINT = 1;</code>
+       */
+      public static final int POINT_VALUE = 1;
+      /**
+       * <code>LINESTRING = 2;</code>
+       */
+      public static final int LINESTRING_VALUE = 2;
+      /**
+       * <code>POLYGON = 3;</code>
+       */
+      public static final int POLYGON_VALUE = 3;
+
+
+      public final int getNumber() {
+        return value;
+      }
+
+      /**
+       * @param value The numeric wire value of the corresponding enum entry.
+       * @return The enum associated with the given numeric wire value.
+       * @deprecated Use {@link #forNumber(int)} instead.
+       */
+      @java.lang.Deprecated
+      public static GeomType valueOf(int value) {
+        return forNumber(value);
+      }
+
+      /**
+       * @param value The numeric wire value of the corresponding enum entry.
+       * @return The enum associated with the given numeric wire value.
+       */
+      public static GeomType forNumber(int value) {
+        switch (value) {
+          case 0: return UNKNOWN;
+          case 1: return POINT;
+          case 2: return LINESTRING;
+          case 3: return POLYGON;
+          default: return null;
+        }
+      }
+
+      public static com.google.protobuf.Internal.EnumLiteMap<GeomType>
+          internalGetValueMap() {
+        return internalValueMap;
+      }
+      private static final com.google.protobuf.Internal.EnumLiteMap<
+          GeomType> internalValueMap =
+            new com.google.protobuf.Internal.EnumLiteMap<GeomType>() {
+              public GeomType findValueByNumber(int number) {
+                return GeomType.forNumber(number);
+              }
+            };
+
+      public final com.google.protobuf.Descriptors.EnumValueDescriptor
+          getValueDescriptor() {
+        return getDescriptor().getValues().get(ordinal());
+      }
+      public final com.google.protobuf.Descriptors.EnumDescriptor
+          getDescriptorForType() {
+        return getDescriptor();
+      }
+      public static final com.google.protobuf.Descriptors.EnumDescriptor
+          getDescriptor() {
+        return vector_tile.VectorTile.Tile.getDescriptor().getEnumTypes().get(0);
+      }
+
+      private static final GeomType[] VALUES = values();
+
+      public static GeomType valueOf(
+          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
+        if (desc.getType() != getDescriptor()) {
+          throw new java.lang.IllegalArgumentException(
+            "EnumValueDescriptor is not for this type.");
+        }
+        return VALUES[desc.getIndex()];
+      }
+
+      private final int value;
+
+      private GeomType(int value) {
+        this.value = value;
+      }
+
+      // @@protoc_insertion_point(enum_scope:vector_tile.Tile.GeomType)
+    }
+
+    public interface ValueOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:vector_tile.Tile.Value)
+        com.google.protobuf.GeneratedMessageV3.
+            ExtendableMessageOrBuilder<Value> {
+
+      /**
+       * <pre>
+       * Exactly one of these values must be present in a valid message
+       * </pre>
+       *
+       * <code>optional string string_value = 1;</code>
+       * @return Whether the stringValue field is set.
+       */
+      boolean hasStringValue();
+      /**
+       * <pre>
+       * Exactly one of these values must be present in a valid message
+       * </pre>
+       *
+       * <code>optional string string_value = 1;</code>
+       * @return The stringValue.
+       */
+      java.lang.String getStringValue();
+      /**
+       * <pre>
+       * Exactly one of these values must be present in a valid message
+       * </pre>
+       *
+       * <code>optional string string_value = 1;</code>
+       * @return The bytes for stringValue.
+       */
+      com.google.protobuf.ByteString
+          getStringValueBytes();
+
+      /**
+       * <code>optional float float_value = 2;</code>
+       * @return Whether the floatValue field is set.
+       */
+      boolean hasFloatValue();
+      /**
+       * <code>optional float float_value = 2;</code>
+       * @return The floatValue.
+       */
+      float getFloatValue();
+
+      /**
+       * <code>optional double double_value = 3;</code>
+       * @return Whether the doubleValue field is set.
+       */
+      boolean hasDoubleValue();
+      /**
+       * <code>optional double double_value = 3;</code>
+       * @return The doubleValue.
+       */
+      double getDoubleValue();
+
+      /**
+       * <code>optional int64 int_value = 4;</code>
+       * @return Whether the intValue field is set.
+       */
+      boolean hasIntValue();
+      /**
+       * <code>optional int64 int_value = 4;</code>
+       * @return The intValue.
+       */
+      long getIntValue();
+
+      /**
+       * <code>optional uint64 uint_value = 5;</code>
+       * @return Whether the uintValue field is set.
+       */
+      boolean hasUintValue();
+      /**
+       * <code>optional uint64 uint_value = 5;</code>
+       * @return The uintValue.
+       */
+      long getUintValue();
+
+      /**
+       * <code>optional sint64 sint_value = 6;</code>
+       * @return Whether the sintValue field is set.
+       */
+      boolean hasSintValue();
+      /**
+       * <code>optional sint64 sint_value = 6;</code>
+       * @return The sintValue.
+       */
+      long getSintValue();
+
+      /**
+       * <code>optional bool bool_value = 7;</code>
+       * @return Whether the boolValue field is set.
+       */
+      boolean hasBoolValue();
+      /**
+       * <code>optional bool bool_value = 7;</code>
+       * @return The boolValue.
+       */
+      boolean getBoolValue();
+    }
+    /**
+     * <pre>
+     * Variant type encoding
+     * The use of values is described in section 4.1 of the specification
+     * </pre>
+     *
+     * Protobuf type {@code vector_tile.Tile.Value}
+     */
+    public static final class Value extends
+        com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
+          Value> implements
+        // @@protoc_insertion_point(message_implements:vector_tile.Tile.Value)
+        ValueOrBuilder {
+    private static final long serialVersionUID = 0L;
+      // Use Value.newBuilder() to construct.
+      private Value(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<vector_tile.VectorTile.Tile.Value, ?> builder) {
+        super(builder);
+      }
+      private Value() {
+        stringValue_ = "";
+      }
+
+      @java.lang.Override
+      @SuppressWarnings({"unused"})
+      protected java.lang.Object newInstance(
+          UnusedPrivateParameter unused) {
+        return new Value();
+      }
+
+      public static final com.google.protobuf.Descriptors.Descriptor
+          getDescriptor() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_descriptor;
+      }
+
+      @java.lang.Override
+      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+          internalGetFieldAccessorTable() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_fieldAccessorTable
+            .ensureFieldAccessorsInitialized(
+                vector_tile.VectorTile.Tile.Value.class, vector_tile.VectorTile.Tile.Value.Builder.class);
+      }
+
+      private int bitField0_;
+      public static final int STRING_VALUE_FIELD_NUMBER = 1;
+      @SuppressWarnings("serial")
+      private volatile java.lang.Object stringValue_ = "";
+      /**
+       * <pre>
+       * Exactly one of these values must be present in a valid message
+       * </pre>
+       *
+       * <code>optional string string_value = 1;</code>
+       * @return Whether the stringValue field is set.
+       */
+      @java.lang.Override
+      public boolean hasStringValue() {
+        return ((bitField0_ & 0x00000001) != 0);
+      }
+      /**
+       * <pre>
+       * Exactly one of these values must be present in a valid message
+       * </pre>
+       *
+       * <code>optional string string_value = 1;</code>
+       * @return The stringValue.
+       */
+      @java.lang.Override
+      public java.lang.String getStringValue() {
+        java.lang.Object ref = stringValue_;
+        if (ref instanceof java.lang.String) {
+          return (java.lang.String) ref;
+        } else {
+          com.google.protobuf.ByteString bs = 
+              (com.google.protobuf.ByteString) ref;
+          java.lang.String s = bs.toStringUtf8();
+          if (bs.isValidUtf8()) {
+            stringValue_ = s;
+          }
+          return s;
+        }
+      }
+      /**
+       * <pre>
+       * Exactly one of these values must be present in a valid message
+       * </pre>
+       *
+       * <code>optional string string_value = 1;</code>
+       * @return The bytes for stringValue.
+       */
+      @java.lang.Override
+      public com.google.protobuf.ByteString
+          getStringValueBytes() {
+        java.lang.Object ref = stringValue_;
+        if (ref instanceof java.lang.String) {
+          com.google.protobuf.ByteString b = 
+              com.google.protobuf.ByteString.copyFromUtf8(
+                  (java.lang.String) ref);
+          stringValue_ = b;
+          return b;
+        } else {
+          return (com.google.protobuf.ByteString) ref;
+        }
+      }
+
+      public static final int FLOAT_VALUE_FIELD_NUMBER = 2;
+      private float floatValue_ = 0F;
+      /**
+       * <code>optional float float_value = 2;</code>
+       * @return Whether the floatValue field is set.
+       */
+      @java.lang.Override
+      public boolean hasFloatValue() {
+        return ((bitField0_ & 0x00000002) != 0);
+      }
+      /**
+       * <code>optional float float_value = 2;</code>
+       * @return The floatValue.
+       */
+      @java.lang.Override
+      public float getFloatValue() {
+        return floatValue_;
+      }
+
+      public static final int DOUBLE_VALUE_FIELD_NUMBER = 3;
+      private double doubleValue_ = 0D;
+      /**
+       * <code>optional double double_value = 3;</code>
+       * @return Whether the doubleValue field is set.
+       */
+      @java.lang.Override
+      public boolean hasDoubleValue() {
+        return ((bitField0_ & 0x00000004) != 0);
+      }
+      /**
+       * <code>optional double double_value = 3;</code>
+       * @return The doubleValue.
+       */
+      @java.lang.Override
+      public double getDoubleValue() {
+        return doubleValue_;
+      }
+
+      public static final int INT_VALUE_FIELD_NUMBER = 4;
+      private long intValue_ = 0L;
+      /**
+       * <code>optional int64 int_value = 4;</code>
+       * @return Whether the intValue field is set.
+       */
+      @java.lang.Override
+      public boolean hasIntValue() {
+        return ((bitField0_ & 0x00000008) != 0);
+      }
+      /**
+       * <code>optional int64 int_value = 4;</code>
+       * @return The intValue.
+       */
+      @java.lang.Override
+      public long getIntValue() {
+        return intValue_;
+      }
+
+      public static final int UINT_VALUE_FIELD_NUMBER = 5;
+      private long uintValue_ = 0L;
+      /**
+       * <code>optional uint64 uint_value = 5;</code>
+       * @return Whether the uintValue field is set.
+       */
+      @java.lang.Override
+      public boolean hasUintValue() {
+        return ((bitField0_ & 0x00000010) != 0);
+      }
+      /**
+       * <code>optional uint64 uint_value = 5;</code>
+       * @return The uintValue.
+       */
+      @java.lang.Override
+      public long getUintValue() {
+        return uintValue_;
+      }
+
+      public static final int SINT_VALUE_FIELD_NUMBER = 6;
+      private long sintValue_ = 0L;
+      /**
+       * <code>optional sint64 sint_value = 6;</code>
+       * @return Whether the sintValue field is set.
+       */
+      @java.lang.Override
+      public boolean hasSintValue() {
+        return ((bitField0_ & 0x00000020) != 0);
+      }
+      /**
+       * <code>optional sint64 sint_value = 6;</code>
+       * @return The sintValue.
+       */
+      @java.lang.Override
+      public long getSintValue() {
+        return sintValue_;
+      }
+
+      public static final int BOOL_VALUE_FIELD_NUMBER = 7;
+      private boolean boolValue_ = false;
+      /**
+       * <code>optional bool bool_value = 7;</code>
+       * @return Whether the boolValue field is set.
+       */
+      @java.lang.Override
+      public boolean hasBoolValue() {
+        return ((bitField0_ & 0x00000040) != 0);
+      }
+      /**
+       * <code>optional bool bool_value = 7;</code>
+       * @return The boolValue.
+       */
+      @java.lang.Override
+      public boolean getBoolValue() {
+        return boolValue_;
+      }
+
+      private byte memoizedIsInitialized = -1;
+      @java.lang.Override
+      public final boolean isInitialized() {
+        byte isInitialized = memoizedIsInitialized;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
+
+        if (!extensionsAreInitialized()) {
+          memoizedIsInitialized = 0;
+          return false;
+        }
+        memoizedIsInitialized = 1;
+        return true;
+      }
+
+      @java.lang.Override
+      public void writeTo(com.google.protobuf.CodedOutputStream output)
+                          throws java.io.IOException {
+        com.google.protobuf.GeneratedMessageV3
+          .ExtendableMessage<vector_tile.VectorTile.Tile.Value>.ExtensionWriter
+            extensionWriter = newExtensionWriter();
+        if (((bitField0_ & 0x00000001) != 0)) {
+          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, stringValue_);
+        }
+        if (((bitField0_ & 0x00000002) != 0)) {
+          output.writeFloat(2, floatValue_);
+        }
+        if (((bitField0_ & 0x00000004) != 0)) {
+          output.writeDouble(3, doubleValue_);
+        }
+        if (((bitField0_ & 0x00000008) != 0)) {
+          output.writeInt64(4, intValue_);
+        }
+        if (((bitField0_ & 0x00000010) != 0)) {
+          output.writeUInt64(5, uintValue_);
+        }
+        if (((bitField0_ & 0x00000020) != 0)) {
+          output.writeSInt64(6, sintValue_);
+        }
+        if (((bitField0_ & 0x00000040) != 0)) {
+          output.writeBool(7, boolValue_);
+        }
+        extensionWriter.writeUntil(536870912, output);
+        getUnknownFields().writeTo(output);
+      }
+
+      @java.lang.Override
+      public int getSerializedSize() {
+        int size = memoizedSize;
+        if (size != -1) return size;
+
+        size = 0;
+        if (((bitField0_ & 0x00000001) != 0)) {
+          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, stringValue_);
+        }
+        if (((bitField0_ & 0x00000002) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeFloatSize(2, floatValue_);
+        }
+        if (((bitField0_ & 0x00000004) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeDoubleSize(3, doubleValue_);
+        }
+        if (((bitField0_ & 0x00000008) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeInt64Size(4, intValue_);
+        }
+        if (((bitField0_ & 0x00000010) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeUInt64Size(5, uintValue_);
+        }
+        if (((bitField0_ & 0x00000020) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeSInt64Size(6, sintValue_);
+        }
+        if (((bitField0_ & 0x00000040) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeBoolSize(7, boolValue_);
+        }
+        size += extensionsSerializedSize();
+        size += getUnknownFields().getSerializedSize();
+        memoizedSize = size;
+        return size;
+      }
+
+      @java.lang.Override
+      public boolean equals(final java.lang.Object obj) {
+        if (obj == this) {
+         return true;
+        }
+        if (!(obj instanceof vector_tile.VectorTile.Tile.Value)) {
+          return super.equals(obj);
+        }
+        vector_tile.VectorTile.Tile.Value other = (vector_tile.VectorTile.Tile.Value) obj;
+
+        if (hasStringValue() != other.hasStringValue()) return false;
+        if (hasStringValue()) {
+          if (!getStringValue()
+              .equals(other.getStringValue())) return false;
+        }
+        if (hasFloatValue() != other.hasFloatValue()) return false;
+        if (hasFloatValue()) {
+          if (java.lang.Float.floatToIntBits(getFloatValue())
+              != java.lang.Float.floatToIntBits(
+                  other.getFloatValue())) return false;
+        }
+        if (hasDoubleValue() != other.hasDoubleValue()) return false;
+        if (hasDoubleValue()) {
+          if (java.lang.Double.doubleToLongBits(getDoubleValue())
+              != java.lang.Double.doubleToLongBits(
+                  other.getDoubleValue())) return false;
+        }
+        if (hasIntValue() != other.hasIntValue()) return false;
+        if (hasIntValue()) {
+          if (getIntValue()
+              != other.getIntValue()) return false;
+        }
+        if (hasUintValue() != other.hasUintValue()) return false;
+        if (hasUintValue()) {
+          if (getUintValue()
+              != other.getUintValue()) return false;
+        }
+        if (hasSintValue() != other.hasSintValue()) return false;
+        if (hasSintValue()) {
+          if (getSintValue()
+              != other.getSintValue()) return false;
+        }
+        if (hasBoolValue() != other.hasBoolValue()) return false;
+        if (hasBoolValue()) {
+          if (getBoolValue()
+              != other.getBoolValue()) return false;
+        }
+        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
+        if (!getExtensionFields().equals(other.getExtensionFields()))
+          return false;
+        return true;
+      }
+
+      @java.lang.Override
+      public int hashCode() {
+        if (memoizedHashCode != 0) {
+          return memoizedHashCode;
+        }
+        int hash = 41;
+        hash = (19 * hash) + getDescriptor().hashCode();
+        if (hasStringValue()) {
+          hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
+          hash = (53 * hash) + getStringValue().hashCode();
+        }
+        if (hasFloatValue()) {
+          hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
+          hash = (53 * hash) + java.lang.Float.floatToIntBits(
+              getFloatValue());
+        }
+        if (hasDoubleValue()) {
+          hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
+          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
+              java.lang.Double.doubleToLongBits(getDoubleValue()));
+        }
+        if (hasIntValue()) {
+          hash = (37 * hash) + INT_VALUE_FIELD_NUMBER;
+          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
+              getIntValue());
+        }
+        if (hasUintValue()) {
+          hash = (37 * hash) + UINT_VALUE_FIELD_NUMBER;
+          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
+              getUintValue());
+        }
+        if (hasSintValue()) {
+          hash = (37 * hash) + SINT_VALUE_FIELD_NUMBER;
+          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
+              getSintValue());
+        }
+        if (hasBoolValue()) {
+          hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
+          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
+              getBoolValue());
+        }
+        hash = hashFields(hash, getExtensionFields());
+        hash = (29 * hash) + getUnknownFields().hashCode();
+        memoizedHashCode = hash;
+        return hash;
+      }
+
+      public static vector_tile.VectorTile.Tile.Value parseFrom(
+          java.nio.ByteBuffer data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(
+          java.nio.ByteBuffer data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(
+          com.google.protobuf.ByteString data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(
+          com.google.protobuf.ByteString data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(byte[] data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(
+          byte[] data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(java.io.InputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(
+          java.io.InputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input, extensionRegistry);
+      }
+
+      public static vector_tile.VectorTile.Tile.Value parseDelimitedFrom(java.io.InputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseDelimitedWithIOException(PARSER, input);
+      }
+
+      public static vector_tile.VectorTile.Tile.Value parseDelimitedFrom(
+          java.io.InputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(
+          com.google.protobuf.CodedInputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input);
+      }
+      public static vector_tile.VectorTile.Tile.Value parseFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input, extensionRegistry);
+      }
+
+      @java.lang.Override
+      public Builder newBuilderForType() { return newBuilder(); }
+      public static Builder newBuilder() {
+        return DEFAULT_INSTANCE.toBuilder();
+      }
+      public static Builder newBuilder(vector_tile.VectorTile.Tile.Value prototype) {
+        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
+      }
+      @java.lang.Override
+      public Builder toBuilder() {
+        return this == DEFAULT_INSTANCE
+            ? new Builder() : new Builder().mergeFrom(this);
+      }
+
+      @java.lang.Override
+      protected Builder newBuilderForType(
+          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
+        Builder builder = new Builder(parent);
+        return builder;
+      }
+      /**
+       * <pre>
+       * Variant type encoding
+       * The use of values is described in section 4.1 of the specification
+       * </pre>
+       *
+       * Protobuf type {@code vector_tile.Tile.Value}
+       */
+      public static final class Builder extends
+          com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
+            vector_tile.VectorTile.Tile.Value, Builder> implements
+          // @@protoc_insertion_point(builder_implements:vector_tile.Tile.Value)
+          vector_tile.VectorTile.Tile.ValueOrBuilder {
+        public static final com.google.protobuf.Descriptors.Descriptor
+            getDescriptor() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_descriptor;
+        }
+
+        @java.lang.Override
+        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+            internalGetFieldAccessorTable() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_fieldAccessorTable
+              .ensureFieldAccessorsInitialized(
+                  vector_tile.VectorTile.Tile.Value.class, vector_tile.VectorTile.Tile.Value.Builder.class);
+        }
+
+        // Construct using vector_tile.VectorTile.Tile.Value.newBuilder()
+        private Builder() {
+
+        }
+
+        private Builder(
+            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
+          super(parent);
+
+        }
+        @java.lang.Override
+        public Builder clear() {
+          super.clear();
+          bitField0_ = 0;
+          stringValue_ = "";
+          floatValue_ = 0F;
+          doubleValue_ = 0D;
+          intValue_ = 0L;
+          uintValue_ = 0L;
+          sintValue_ = 0L;
+          boolValue_ = false;
+          return this;
+        }
+
+        @java.lang.Override
+        public com.google.protobuf.Descriptors.Descriptor
+            getDescriptorForType() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Value_descriptor;
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Value getDefaultInstanceForType() {
+          return vector_tile.VectorTile.Tile.Value.getDefaultInstance();
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Value build() {
+          vector_tile.VectorTile.Tile.Value result = buildPartial();
+          if (!result.isInitialized()) {
+            throw newUninitializedMessageException(result);
+          }
+          return result;
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Value buildPartial() {
+          vector_tile.VectorTile.Tile.Value result = new vector_tile.VectorTile.Tile.Value(this);
+          if (bitField0_ != 0) { buildPartial0(result); }
+          onBuilt();
+          return result;
+        }
+
+        private void buildPartial0(vector_tile.VectorTile.Tile.Value result) {
+          int from_bitField0_ = bitField0_;
+          int to_bitField0_ = 0;
+          if (((from_bitField0_ & 0x00000001) != 0)) {
+            result.stringValue_ = stringValue_;
+            to_bitField0_ |= 0x00000001;
+          }
+          if (((from_bitField0_ & 0x00000002) != 0)) {
+            result.floatValue_ = floatValue_;
+            to_bitField0_ |= 0x00000002;
+          }
+          if (((from_bitField0_ & 0x00000004) != 0)) {
+            result.doubleValue_ = doubleValue_;
+            to_bitField0_ |= 0x00000004;
+          }
+          if (((from_bitField0_ & 0x00000008) != 0)) {
+            result.intValue_ = intValue_;
+            to_bitField0_ |= 0x00000008;
+          }
+          if (((from_bitField0_ & 0x00000010) != 0)) {
+            result.uintValue_ = uintValue_;
+            to_bitField0_ |= 0x00000010;
+          }
+          if (((from_bitField0_ & 0x00000020) != 0)) {
+            result.sintValue_ = sintValue_;
+            to_bitField0_ |= 0x00000020;
+          }
+          if (((from_bitField0_ & 0x00000040) != 0)) {
+            result.boolValue_ = boolValue_;
+            to_bitField0_ |= 0x00000040;
+          }
+          result.bitField0_ |= to_bitField0_;
+        }
+
+        @java.lang.Override
+        public Builder clone() {
+          return super.clone();
+        }
+        @java.lang.Override
+        public Builder setField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            java.lang.Object value) {
+          return super.setField(field, value);
+        }
+        @java.lang.Override
+        public Builder clearField(
+            com.google.protobuf.Descriptors.FieldDescriptor field) {
+          return super.clearField(field);
+        }
+        @java.lang.Override
+        public Builder clearOneof(
+            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
+          return super.clearOneof(oneof);
+        }
+        @java.lang.Override
+        public Builder setRepeatedField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            int index, java.lang.Object value) {
+          return super.setRepeatedField(field, index, value);
+        }
+        @java.lang.Override
+        public Builder addRepeatedField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            java.lang.Object value) {
+          return super.addRepeatedField(field, value);
+        }
+        @java.lang.Override
+        public <Type> Builder setExtension(
+            com.google.protobuf.GeneratedMessage.GeneratedExtension<
+                vector_tile.VectorTile.Tile.Value, Type> extension,
+            Type value) {
+          return super.setExtension(extension, value);
+        }
+        @java.lang.Override
+        public <Type> Builder setExtension(
+            com.google.protobuf.GeneratedMessage.GeneratedExtension<
+                vector_tile.VectorTile.Tile.Value, java.util.List<Type>> extension,
+            int index, Type value) {
+          return super.setExtension(extension, index, value);
+        }
+        @java.lang.Override
+        public <Type> Builder addExtension(
+            com.google.protobuf.GeneratedMessage.GeneratedExtension<
+                vector_tile.VectorTile.Tile.Value, java.util.List<Type>> extension,
+            Type value) {
+          return super.addExtension(extension, value);
+        }
+        @java.lang.Override
+        public <T> Builder clearExtension(
+            com.google.protobuf.GeneratedMessage.GeneratedExtension<
+                vector_tile.VectorTile.Tile.Value, T> extension) {
+          return super.clearExtension(extension);
+        }
+        @java.lang.Override
+        public Builder mergeFrom(com.google.protobuf.Message other) {
+          if (other instanceof vector_tile.VectorTile.Tile.Value) {
+            return mergeFrom((vector_tile.VectorTile.Tile.Value)other);
+          } else {
+            super.mergeFrom(other);
+            return this;
+          }
+        }
+
+        public Builder mergeFrom(vector_tile.VectorTile.Tile.Value other) {
+          if (other == vector_tile.VectorTile.Tile.Value.getDefaultInstance()) return this;
+          if (other.hasStringValue()) {
+            stringValue_ = other.stringValue_;
+            bitField0_ |= 0x00000001;
+            onChanged();
+          }
+          if (other.hasFloatValue()) {
+            setFloatValue(other.getFloatValue());
+          }
+          if (other.hasDoubleValue()) {
+            setDoubleValue(other.getDoubleValue());
+          }
+          if (other.hasIntValue()) {
+            setIntValue(other.getIntValue());
+          }
+          if (other.hasUintValue()) {
+            setUintValue(other.getUintValue());
+          }
+          if (other.hasSintValue()) {
+            setSintValue(other.getSintValue());
+          }
+          if (other.hasBoolValue()) {
+            setBoolValue(other.getBoolValue());
+          }
+          this.mergeExtensionFields(other);
+          this.mergeUnknownFields(other.getUnknownFields());
+          onChanged();
+          return this;
+        }
+
+        @java.lang.Override
+        public final boolean isInitialized() {
+          if (!extensionsAreInitialized()) {
+            return false;
+          }
+          return true;
+        }
+
+        @java.lang.Override
+        public Builder mergeFrom(
+            com.google.protobuf.CodedInputStream input,
+            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+            throws java.io.IOException {
+          if (extensionRegistry == null) {
+            throw new java.lang.NullPointerException();
+          }
+          try {
+            boolean done = false;
+            while (!done) {
+              int tag = input.readTag();
+              switch (tag) {
+                case 0:
+                  done = true;
+                  break;
+                case 10: {
+                  stringValue_ = input.readBytes();
+                  bitField0_ |= 0x00000001;
+                  break;
+                } // case 10
+                case 21: {
+                  floatValue_ = input.readFloat();
+                  bitField0_ |= 0x00000002;
+                  break;
+                } // case 21
+                case 25: {
+                  doubleValue_ = input.readDouble();
+                  bitField0_ |= 0x00000004;
+                  break;
+                } // case 25
+                case 32: {
+                  intValue_ = input.readInt64();
+                  bitField0_ |= 0x00000008;
+                  break;
+                } // case 32
+                case 40: {
+                  uintValue_ = input.readUInt64();
+                  bitField0_ |= 0x00000010;
+                  break;
+                } // case 40
+                case 48: {
+                  sintValue_ = input.readSInt64();
+                  bitField0_ |= 0x00000020;
+                  break;
+                } // case 48
+                case 56: {
+                  boolValue_ = input.readBool();
+                  bitField0_ |= 0x00000040;
+                  break;
+                } // case 56
+                default: {
+                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
+                    done = true; // was an endgroup tag
+                  }
+                  break;
+                } // default:
+              } // switch (tag)
+            } // while (!done)
+          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+            throw e.unwrapIOException();
+          } finally {
+            onChanged();
+          } // finally
+          return this;
+        }
+        private int bitField0_;
+
+        private java.lang.Object stringValue_ = "";
+        /**
+         * <pre>
+         * Exactly one of these values must be present in a valid message
+         * </pre>
+         *
+         * <code>optional string string_value = 1;</code>
+         * @return Whether the stringValue field is set.
+         */
+        public boolean hasStringValue() {
+          return ((bitField0_ & 0x00000001) != 0);
+        }
+        /**
+         * <pre>
+         * Exactly one of these values must be present in a valid message
+         * </pre>
+         *
+         * <code>optional string string_value = 1;</code>
+         * @return The stringValue.
+         */
+        public java.lang.String getStringValue() {
+          java.lang.Object ref = stringValue_;
+          if (!(ref instanceof java.lang.String)) {
+            com.google.protobuf.ByteString bs =
+                (com.google.protobuf.ByteString) ref;
+            java.lang.String s = bs.toStringUtf8();
+            if (bs.isValidUtf8()) {
+              stringValue_ = s;
+            }
+            return s;
+          } else {
+            return (java.lang.String) ref;
+          }
+        }
+        /**
+         * <pre>
+         * Exactly one of these values must be present in a valid message
+         * </pre>
+         *
+         * <code>optional string string_value = 1;</code>
+         * @return The bytes for stringValue.
+         */
+        public com.google.protobuf.ByteString
+            getStringValueBytes() {
+          java.lang.Object ref = stringValue_;
+          if (ref instanceof String) {
+            com.google.protobuf.ByteString b = 
+                com.google.protobuf.ByteString.copyFromUtf8(
+                    (java.lang.String) ref);
+            stringValue_ = b;
+            return b;
+          } else {
+            return (com.google.protobuf.ByteString) ref;
+          }
+        }
+        /**
+         * <pre>
+         * Exactly one of these values must be present in a valid message
+         * </pre>
+         *
+         * <code>optional string string_value = 1;</code>
+         * @param value The stringValue to set.
+         * @return This builder for chaining.
+         */
+        public Builder setStringValue(
+            java.lang.String value) {
+          if (value == null) { throw new NullPointerException(); }
+          stringValue_ = value;
+          bitField0_ |= 0x00000001;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Exactly one of these values must be present in a valid message
+         * </pre>
+         *
+         * <code>optional string string_value = 1;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearStringValue() {
+          stringValue_ = getDefaultInstance().getStringValue();
+          bitField0_ = (bitField0_ & ~0x00000001);
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Exactly one of these values must be present in a valid message
+         * </pre>
+         *
+         * <code>optional string string_value = 1;</code>
+         * @param value The bytes for stringValue to set.
+         * @return This builder for chaining.
+         */
+        public Builder setStringValueBytes(
+            com.google.protobuf.ByteString value) {
+          if (value == null) { throw new NullPointerException(); }
+          stringValue_ = value;
+          bitField0_ |= 0x00000001;
+          onChanged();
+          return this;
+        }
+
+        private float floatValue_ ;
+        /**
+         * <code>optional float float_value = 2;</code>
+         * @return Whether the floatValue field is set.
+         */
+        @java.lang.Override
+        public boolean hasFloatValue() {
+          return ((bitField0_ & 0x00000002) != 0);
+        }
+        /**
+         * <code>optional float float_value = 2;</code>
+         * @return The floatValue.
+         */
+        @java.lang.Override
+        public float getFloatValue() {
+          return floatValue_;
+        }
+        /**
+         * <code>optional float float_value = 2;</code>
+         * @param value The floatValue to set.
+         * @return This builder for chaining.
+         */
+        public Builder setFloatValue(float value) {
+
+          floatValue_ = value;
+          bitField0_ |= 0x00000002;
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>optional float float_value = 2;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearFloatValue() {
+          bitField0_ = (bitField0_ & ~0x00000002);
+          floatValue_ = 0F;
+          onChanged();
+          return this;
+        }
+
+        private double doubleValue_ ;
+        /**
+         * <code>optional double double_value = 3;</code>
+         * @return Whether the doubleValue field is set.
+         */
+        @java.lang.Override
+        public boolean hasDoubleValue() {
+          return ((bitField0_ & 0x00000004) != 0);
+        }
+        /**
+         * <code>optional double double_value = 3;</code>
+         * @return The doubleValue.
+         */
+        @java.lang.Override
+        public double getDoubleValue() {
+          return doubleValue_;
+        }
+        /**
+         * <code>optional double double_value = 3;</code>
+         * @param value The doubleValue to set.
+         * @return This builder for chaining.
+         */
+        public Builder setDoubleValue(double value) {
+
+          doubleValue_ = value;
+          bitField0_ |= 0x00000004;
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>optional double double_value = 3;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearDoubleValue() {
+          bitField0_ = (bitField0_ & ~0x00000004);
+          doubleValue_ = 0D;
+          onChanged();
+          return this;
+        }
+
+        private long intValue_ ;
+        /**
+         * <code>optional int64 int_value = 4;</code>
+         * @return Whether the intValue field is set.
+         */
+        @java.lang.Override
+        public boolean hasIntValue() {
+          return ((bitField0_ & 0x00000008) != 0);
+        }
+        /**
+         * <code>optional int64 int_value = 4;</code>
+         * @return The intValue.
+         */
+        @java.lang.Override
+        public long getIntValue() {
+          return intValue_;
+        }
+        /**
+         * <code>optional int64 int_value = 4;</code>
+         * @param value The intValue to set.
+         * @return This builder for chaining.
+         */
+        public Builder setIntValue(long value) {
+
+          intValue_ = value;
+          bitField0_ |= 0x00000008;
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>optional int64 int_value = 4;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearIntValue() {
+          bitField0_ = (bitField0_ & ~0x00000008);
+          intValue_ = 0L;
+          onChanged();
+          return this;
+        }
+
+        private long uintValue_ ;
+        /**
+         * <code>optional uint64 uint_value = 5;</code>
+         * @return Whether the uintValue field is set.
+         */
+        @java.lang.Override
+        public boolean hasUintValue() {
+          return ((bitField0_ & 0x00000010) != 0);
+        }
+        /**
+         * <code>optional uint64 uint_value = 5;</code>
+         * @return The uintValue.
+         */
+        @java.lang.Override
+        public long getUintValue() {
+          return uintValue_;
+        }
+        /**
+         * <code>optional uint64 uint_value = 5;</code>
+         * @param value The uintValue to set.
+         * @return This builder for chaining.
+         */
+        public Builder setUintValue(long value) {
+
+          uintValue_ = value;
+          bitField0_ |= 0x00000010;
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>optional uint64 uint_value = 5;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearUintValue() {
+          bitField0_ = (bitField0_ & ~0x00000010);
+          uintValue_ = 0L;
+          onChanged();
+          return this;
+        }
+
+        private long sintValue_ ;
+        /**
+         * <code>optional sint64 sint_value = 6;</code>
+         * @return Whether the sintValue field is set.
+         */
+        @java.lang.Override
+        public boolean hasSintValue() {
+          return ((bitField0_ & 0x00000020) != 0);
+        }
+        /**
+         * <code>optional sint64 sint_value = 6;</code>
+         * @return The sintValue.
+         */
+        @java.lang.Override
+        public long getSintValue() {
+          return sintValue_;
+        }
+        /**
+         * <code>optional sint64 sint_value = 6;</code>
+         * @param value The sintValue to set.
+         * @return This builder for chaining.
+         */
+        public Builder setSintValue(long value) {
+
+          sintValue_ = value;
+          bitField0_ |= 0x00000020;
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>optional sint64 sint_value = 6;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearSintValue() {
+          bitField0_ = (bitField0_ & ~0x00000020);
+          sintValue_ = 0L;
+          onChanged();
+          return this;
+        }
+
+        private boolean boolValue_ ;
+        /**
+         * <code>optional bool bool_value = 7;</code>
+         * @return Whether the boolValue field is set.
+         */
+        @java.lang.Override
+        public boolean hasBoolValue() {
+          return ((bitField0_ & 0x00000040) != 0);
+        }
+        /**
+         * <code>optional bool bool_value = 7;</code>
+         * @return The boolValue.
+         */
+        @java.lang.Override
+        public boolean getBoolValue() {
+          return boolValue_;
+        }
+        /**
+         * <code>optional bool bool_value = 7;</code>
+         * @param value The boolValue to set.
+         * @return This builder for chaining.
+         */
+        public Builder setBoolValue(boolean value) {
+
+          boolValue_ = value;
+          bitField0_ |= 0x00000040;
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>optional bool bool_value = 7;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearBoolValue() {
+          bitField0_ = (bitField0_ & ~0x00000040);
+          boolValue_ = false;
+          onChanged();
+          return this;
+        }
+        @java.lang.Override
+        public final Builder setUnknownFields(
+            final com.google.protobuf.UnknownFieldSet unknownFields) {
+          return super.setUnknownFields(unknownFields);
+        }
+
+        @java.lang.Override
+        public final Builder mergeUnknownFields(
+            final com.google.protobuf.UnknownFieldSet unknownFields) {
+          return super.mergeUnknownFields(unknownFields);
+        }
+
+
+        // @@protoc_insertion_point(builder_scope:vector_tile.Tile.Value)
+      }
+
+      // @@protoc_insertion_point(class_scope:vector_tile.Tile.Value)
+      private static final vector_tile.VectorTile.Tile.Value DEFAULT_INSTANCE;
+      static {
+        DEFAULT_INSTANCE = new vector_tile.VectorTile.Tile.Value();
+      }
+
+      public static vector_tile.VectorTile.Tile.Value getDefaultInstance() {
+        return DEFAULT_INSTANCE;
+      }
+
+      @java.lang.Deprecated public static final com.google.protobuf.Parser<Value>
+          PARSER = new com.google.protobuf.AbstractParser<Value>() {
+        @java.lang.Override
+        public Value parsePartialFrom(
+            com.google.protobuf.CodedInputStream input,
+            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+            throws com.google.protobuf.InvalidProtocolBufferException {
+          Builder builder = newBuilder();
+          try {
+            builder.mergeFrom(input, extensionRegistry);
+          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+            throw e.setUnfinishedMessage(builder.buildPartial());
+          } catch (com.google.protobuf.UninitializedMessageException e) {
+            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
+          } catch (java.io.IOException e) {
+            throw new com.google.protobuf.InvalidProtocolBufferException(e)
+                .setUnfinishedMessage(builder.buildPartial());
+          }
+          return builder.buildPartial();
+        }
+      };
+
+      public static com.google.protobuf.Parser<Value> parser() {
+        return PARSER;
+      }
+
+      @java.lang.Override
+      public com.google.protobuf.Parser<Value> getParserForType() {
+        return PARSER;
+      }
+
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile.Value getDefaultInstanceForType() {
+        return DEFAULT_INSTANCE;
+      }
+
+    }
+
+    public interface FeatureOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:vector_tile.Tile.Feature)
+        com.google.protobuf.MessageOrBuilder {
+
+      /**
+       * <code>optional uint64 id = 1 [default = 0];</code>
+       * @return Whether the id field is set.
+       */
+      boolean hasId();
+      /**
+       * <code>optional uint64 id = 1 [default = 0];</code>
+       * @return The id.
+       */
+      long getId();
+
+      /**
+       * <pre>
+       * Tags of this feature are encoded as repeated pairs of
+       * integers.
+       * A detailed description of tags is located in sections
+       * 4.2 and 4.4 of the specification
+       * </pre>
+       *
+       * <code>repeated uint32 tags = 2 [packed = true];</code>
+       * @return A list containing the tags.
+       */
+      java.util.List<java.lang.Integer> getTagsList();
+      /**
+       * <pre>
+       * Tags of this feature are encoded as repeated pairs of
+       * integers.
+       * A detailed description of tags is located in sections
+       * 4.2 and 4.4 of the specification
+       * </pre>
+       *
+       * <code>repeated uint32 tags = 2 [packed = true];</code>
+       * @return The count of tags.
+       */
+      int getTagsCount();
+      /**
+       * <pre>
+       * Tags of this feature are encoded as repeated pairs of
+       * integers.
+       * A detailed description of tags is located in sections
+       * 4.2 and 4.4 of the specification
+       * </pre>
+       *
+       * <code>repeated uint32 tags = 2 [packed = true];</code>
+       * @param index The index of the element to return.
+       * @return The tags at the given index.
+       */
+      int getTags(int index);
+
+      /**
+       * <pre>
+       * The type of geometry stored in this feature.
+       * </pre>
+       *
+       * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
+       * @return Whether the type field is set.
+       */
+      boolean hasType();
+      /**
+       * <pre>
+       * The type of geometry stored in this feature.
+       * </pre>
+       *
+       * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
+       * @return The type.
+       */
+      vector_tile.VectorTile.Tile.GeomType getType();
+
+      /**
+       * <pre>
+       * Contains a stream of commands and parameters (vertices).
+       * A detailed description on geometry encoding is located in 
+       * section 4.3 of the specification.
+       * </pre>
+       *
+       * <code>repeated uint32 geometry = 4 [packed = true];</code>
+       * @return A list containing the geometry.
+       */
+      java.util.List<java.lang.Integer> getGeometryList();
+      /**
+       * <pre>
+       * Contains a stream of commands and parameters (vertices).
+       * A detailed description on geometry encoding is located in 
+       * section 4.3 of the specification.
+       * </pre>
+       *
+       * <code>repeated uint32 geometry = 4 [packed = true];</code>
+       * @return The count of geometry.
+       */
+      int getGeometryCount();
+      /**
+       * <pre>
+       * Contains a stream of commands and parameters (vertices).
+       * A detailed description on geometry encoding is located in 
+       * section 4.3 of the specification.
+       * </pre>
+       *
+       * <code>repeated uint32 geometry = 4 [packed = true];</code>
+       * @param index The index of the element to return.
+       * @return The geometry at the given index.
+       */
+      int getGeometry(int index);
+    }
+    /**
+     * <pre>
+     * Features are described in section 4.2 of the specification
+     * </pre>
+     *
+     * Protobuf type {@code vector_tile.Tile.Feature}
+     */
+    public static final class Feature extends
+        com.google.protobuf.GeneratedMessageV3 implements
+        // @@protoc_insertion_point(message_implements:vector_tile.Tile.Feature)
+        FeatureOrBuilder {
+    private static final long serialVersionUID = 0L;
+      // Use Feature.newBuilder() to construct.
+      private Feature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
+        super(builder);
+      }
+      private Feature() {
+        tags_ = emptyIntList();
+        type_ = 0;
+        geometry_ = emptyIntList();
+      }
+
+      @java.lang.Override
+      @SuppressWarnings({"unused"})
+      protected java.lang.Object newInstance(
+          UnusedPrivateParameter unused) {
+        return new Feature();
+      }
+
+      public static final com.google.protobuf.Descriptors.Descriptor
+          getDescriptor() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_descriptor;
+      }
+
+      @java.lang.Override
+      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+          internalGetFieldAccessorTable() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_fieldAccessorTable
+            .ensureFieldAccessorsInitialized(
+                vector_tile.VectorTile.Tile.Feature.class, vector_tile.VectorTile.Tile.Feature.Builder.class);
+      }
+
+      private int bitField0_;
+      public static final int ID_FIELD_NUMBER = 1;
+      private long id_ = 0L;
+      /**
+       * <code>optional uint64 id = 1 [default = 0];</code>
+       * @return Whether the id field is set.
+       */
+      @java.lang.Override
+      public boolean hasId() {
+        return ((bitField0_ & 0x00000001) != 0);
+      }
+      /**
+       * <code>optional uint64 id = 1 [default = 0];</code>
+       * @return The id.
+       */
+      @java.lang.Override
+      public long getId() {
+        return id_;
+      }
+
+      public static final int TAGS_FIELD_NUMBER = 2;
+      @SuppressWarnings("serial")
+      private com.google.protobuf.Internal.IntList tags_ =
+          emptyIntList();
+      /**
+       * <pre>
+       * Tags of this feature are encoded as repeated pairs of
+       * integers.
+       * A detailed description of tags is located in sections
+       * 4.2 and 4.4 of the specification
+       * </pre>
+       *
+       * <code>repeated uint32 tags = 2 [packed = true];</code>
+       * @return A list containing the tags.
+       */
+      @java.lang.Override
+      public java.util.List<java.lang.Integer>
+          getTagsList() {
+        return tags_;
+      }
+      /**
+       * <pre>
+       * Tags of this feature are encoded as repeated pairs of
+       * integers.
+       * A detailed description of tags is located in sections
+       * 4.2 and 4.4 of the specification
+       * </pre>
+       *
+       * <code>repeated uint32 tags = 2 [packed = true];</code>
+       * @return The count of tags.
+       */
+      public int getTagsCount() {
+        return tags_.size();
+      }
+      /**
+       * <pre>
+       * Tags of this feature are encoded as repeated pairs of
+       * integers.
+       * A detailed description of tags is located in sections
+       * 4.2 and 4.4 of the specification
+       * </pre>
+       *
+       * <code>repeated uint32 tags = 2 [packed = true];</code>
+       * @param index The index of the element to return.
+       * @return The tags at the given index.
+       */
+      public int getTags(int index) {
+        return tags_.getInt(index);
+      }
+      private int tagsMemoizedSerializedSize = -1;
+
+      public static final int TYPE_FIELD_NUMBER = 3;
+      private int type_ = 0;
+      /**
+       * <pre>
+       * The type of geometry stored in this feature.
+       * </pre>
+       *
+       * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
+       * @return Whether the type field is set.
+       */
+      @java.lang.Override public boolean hasType() {
+        return ((bitField0_ & 0x00000002) != 0);
+      }
+      /**
+       * <pre>
+       * The type of geometry stored in this feature.
+       * </pre>
+       *
+       * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
+       * @return The type.
+       */
+      @java.lang.Override public vector_tile.VectorTile.Tile.GeomType getType() {
+        vector_tile.VectorTile.Tile.GeomType result = vector_tile.VectorTile.Tile.GeomType.forNumber(type_);
+        return result == null ? vector_tile.VectorTile.Tile.GeomType.UNKNOWN : result;
+      }
+
+      public static final int GEOMETRY_FIELD_NUMBER = 4;
+      @SuppressWarnings("serial")
+      private com.google.protobuf.Internal.IntList geometry_ =
+          emptyIntList();
+      /**
+       * <pre>
+       * Contains a stream of commands and parameters (vertices).
+       * A detailed description on geometry encoding is located in 
+       * section 4.3 of the specification.
+       * </pre>
+       *
+       * <code>repeated uint32 geometry = 4 [packed = true];</code>
+       * @return A list containing the geometry.
+       */
+      @java.lang.Override
+      public java.util.List<java.lang.Integer>
+          getGeometryList() {
+        return geometry_;
+      }
+      /**
+       * <pre>
+       * Contains a stream of commands and parameters (vertices).
+       * A detailed description on geometry encoding is located in 
+       * section 4.3 of the specification.
+       * </pre>
+       *
+       * <code>repeated uint32 geometry = 4 [packed = true];</code>
+       * @return The count of geometry.
+       */
+      public int getGeometryCount() {
+        return geometry_.size();
+      }
+      /**
+       * <pre>
+       * Contains a stream of commands and parameters (vertices).
+       * A detailed description on geometry encoding is located in 
+       * section 4.3 of the specification.
+       * </pre>
+       *
+       * <code>repeated uint32 geometry = 4 [packed = true];</code>
+       * @param index The index of the element to return.
+       * @return The geometry at the given index.
+       */
+      public int getGeometry(int index) {
+        return geometry_.getInt(index);
+      }
+      private int geometryMemoizedSerializedSize = -1;
+
+      private byte memoizedIsInitialized = -1;
+      @java.lang.Override
+      public final boolean isInitialized() {
+        byte isInitialized = memoizedIsInitialized;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
+
+        memoizedIsInitialized = 1;
+        return true;
+      }
+
+      @java.lang.Override
+      public void writeTo(com.google.protobuf.CodedOutputStream output)
+                          throws java.io.IOException {
+        getSerializedSize();
+        if (((bitField0_ & 0x00000001) != 0)) {
+          output.writeUInt64(1, id_);
+        }
+        if (getTagsList().size() > 0) {
+          output.writeUInt32NoTag(18);
+          output.writeUInt32NoTag(tagsMemoizedSerializedSize);
+        }
+        for (int i = 0; i < tags_.size(); i++) {
+          output.writeUInt32NoTag(tags_.getInt(i));
+        }
+        if (((bitField0_ & 0x00000002) != 0)) {
+          output.writeEnum(3, type_);
+        }
+        if (getGeometryList().size() > 0) {
+          output.writeUInt32NoTag(34);
+          output.writeUInt32NoTag(geometryMemoizedSerializedSize);
+        }
+        for (int i = 0; i < geometry_.size(); i++) {
+          output.writeUInt32NoTag(geometry_.getInt(i));
+        }
+        getUnknownFields().writeTo(output);
+      }
+
+      @java.lang.Override
+      public int getSerializedSize() {
+        int size = memoizedSize;
+        if (size != -1) return size;
+
+        size = 0;
+        if (((bitField0_ & 0x00000001) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeUInt64Size(1, id_);
+        }
+        {
+          int dataSize = 0;
+          for (int i = 0; i < tags_.size(); i++) {
+            dataSize += com.google.protobuf.CodedOutputStream
+              .computeUInt32SizeNoTag(tags_.getInt(i));
+          }
+          size += dataSize;
+          if (!getTagsList().isEmpty()) {
+            size += 1;
+            size += com.google.protobuf.CodedOutputStream
+                .computeInt32SizeNoTag(dataSize);
+          }
+          tagsMemoizedSerializedSize = dataSize;
+        }
+        if (((bitField0_ & 0x00000002) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeEnumSize(3, type_);
+        }
+        {
+          int dataSize = 0;
+          for (int i = 0; i < geometry_.size(); i++) {
+            dataSize += com.google.protobuf.CodedOutputStream
+              .computeUInt32SizeNoTag(geometry_.getInt(i));
+          }
+          size += dataSize;
+          if (!getGeometryList().isEmpty()) {
+            size += 1;
+            size += com.google.protobuf.CodedOutputStream
+                .computeInt32SizeNoTag(dataSize);
+          }
+          geometryMemoizedSerializedSize = dataSize;
+        }
+        size += getUnknownFields().getSerializedSize();
+        memoizedSize = size;
+        return size;
+      }
+
+      @java.lang.Override
+      public boolean equals(final java.lang.Object obj) {
+        if (obj == this) {
+         return true;
+        }
+        if (!(obj instanceof vector_tile.VectorTile.Tile.Feature)) {
+          return super.equals(obj);
+        }
+        vector_tile.VectorTile.Tile.Feature other = (vector_tile.VectorTile.Tile.Feature) obj;
+
+        if (hasId() != other.hasId()) return false;
+        if (hasId()) {
+          if (getId()
+              != other.getId()) return false;
+        }
+        if (!getTagsList()
+            .equals(other.getTagsList())) return false;
+        if (hasType() != other.hasType()) return false;
+        if (hasType()) {
+          if (type_ != other.type_) return false;
+        }
+        if (!getGeometryList()
+            .equals(other.getGeometryList())) return false;
+        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
+        return true;
+      }
+
+      @java.lang.Override
+      public int hashCode() {
+        if (memoizedHashCode != 0) {
+          return memoizedHashCode;
+        }
+        int hash = 41;
+        hash = (19 * hash) + getDescriptor().hashCode();
+        if (hasId()) {
+          hash = (37 * hash) + ID_FIELD_NUMBER;
+          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
+              getId());
+        }
+        if (getTagsCount() > 0) {
+          hash = (37 * hash) + TAGS_FIELD_NUMBER;
+          hash = (53 * hash) + getTagsList().hashCode();
+        }
+        if (hasType()) {
+          hash = (37 * hash) + TYPE_FIELD_NUMBER;
+          hash = (53 * hash) + type_;
+        }
+        if (getGeometryCount() > 0) {
+          hash = (37 * hash) + GEOMETRY_FIELD_NUMBER;
+          hash = (53 * hash) + getGeometryList().hashCode();
+        }
+        hash = (29 * hash) + getUnknownFields().hashCode();
+        memoizedHashCode = hash;
+        return hash;
+      }
+
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(
+          java.nio.ByteBuffer data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(
+          java.nio.ByteBuffer data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(
+          com.google.protobuf.ByteString data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(
+          com.google.protobuf.ByteString data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(byte[] data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(
+          byte[] data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(java.io.InputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(
+          java.io.InputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input, extensionRegistry);
+      }
+
+      public static vector_tile.VectorTile.Tile.Feature parseDelimitedFrom(java.io.InputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseDelimitedWithIOException(PARSER, input);
+      }
+
+      public static vector_tile.VectorTile.Tile.Feature parseDelimitedFrom(
+          java.io.InputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(
+          com.google.protobuf.CodedInputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input);
+      }
+      public static vector_tile.VectorTile.Tile.Feature parseFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input, extensionRegistry);
+      }
+
+      @java.lang.Override
+      public Builder newBuilderForType() { return newBuilder(); }
+      public static Builder newBuilder() {
+        return DEFAULT_INSTANCE.toBuilder();
+      }
+      public static Builder newBuilder(vector_tile.VectorTile.Tile.Feature prototype) {
+        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
+      }
+      @java.lang.Override
+      public Builder toBuilder() {
+        return this == DEFAULT_INSTANCE
+            ? new Builder() : new Builder().mergeFrom(this);
+      }
+
+      @java.lang.Override
+      protected Builder newBuilderForType(
+          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
+        Builder builder = new Builder(parent);
+        return builder;
+      }
+      /**
+       * <pre>
+       * Features are described in section 4.2 of the specification
+       * </pre>
+       *
+       * Protobuf type {@code vector_tile.Tile.Feature}
+       */
+      public static final class Builder extends
+          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
+          // @@protoc_insertion_point(builder_implements:vector_tile.Tile.Feature)
+          vector_tile.VectorTile.Tile.FeatureOrBuilder {
+        public static final com.google.protobuf.Descriptors.Descriptor
+            getDescriptor() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_descriptor;
+        }
+
+        @java.lang.Override
+        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+            internalGetFieldAccessorTable() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_fieldAccessorTable
+              .ensureFieldAccessorsInitialized(
+                  vector_tile.VectorTile.Tile.Feature.class, vector_tile.VectorTile.Tile.Feature.Builder.class);
+        }
+
+        // Construct using vector_tile.VectorTile.Tile.Feature.newBuilder()
+        private Builder() {
+
+        }
+
+        private Builder(
+            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
+          super(parent);
+
+        }
+        @java.lang.Override
+        public Builder clear() {
+          super.clear();
+          bitField0_ = 0;
+          id_ = 0L;
+          tags_ = emptyIntList();
+          type_ = 0;
+          geometry_ = emptyIntList();
+          return this;
+        }
+
+        @java.lang.Override
+        public com.google.protobuf.Descriptors.Descriptor
+            getDescriptorForType() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Feature_descriptor;
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Feature getDefaultInstanceForType() {
+          return vector_tile.VectorTile.Tile.Feature.getDefaultInstance();
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Feature build() {
+          vector_tile.VectorTile.Tile.Feature result = buildPartial();
+          if (!result.isInitialized()) {
+            throw newUninitializedMessageException(result);
+          }
+          return result;
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Feature buildPartial() {
+          vector_tile.VectorTile.Tile.Feature result = new vector_tile.VectorTile.Tile.Feature(this);
+          if (bitField0_ != 0) { buildPartial0(result); }
+          onBuilt();
+          return result;
+        }
+
+        private void buildPartial0(vector_tile.VectorTile.Tile.Feature result) {
+          int from_bitField0_ = bitField0_;
+          int to_bitField0_ = 0;
+          if (((from_bitField0_ & 0x00000001) != 0)) {
+            result.id_ = id_;
+            to_bitField0_ |= 0x00000001;
+          }
+          if (((from_bitField0_ & 0x00000002) != 0)) {
+            tags_.makeImmutable();
+            result.tags_ = tags_;
+          }
+          if (((from_bitField0_ & 0x00000004) != 0)) {
+            result.type_ = type_;
+            to_bitField0_ |= 0x00000002;
+          }
+          if (((from_bitField0_ & 0x00000008) != 0)) {
+            geometry_.makeImmutable();
+            result.geometry_ = geometry_;
+          }
+          result.bitField0_ |= to_bitField0_;
+        }
+
+        @java.lang.Override
+        public Builder clone() {
+          return super.clone();
+        }
+        @java.lang.Override
+        public Builder setField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            java.lang.Object value) {
+          return super.setField(field, value);
+        }
+        @java.lang.Override
+        public Builder clearField(
+            com.google.protobuf.Descriptors.FieldDescriptor field) {
+          return super.clearField(field);
+        }
+        @java.lang.Override
+        public Builder clearOneof(
+            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
+          return super.clearOneof(oneof);
+        }
+        @java.lang.Override
+        public Builder setRepeatedField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            int index, java.lang.Object value) {
+          return super.setRepeatedField(field, index, value);
+        }
+        @java.lang.Override
+        public Builder addRepeatedField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            java.lang.Object value) {
+          return super.addRepeatedField(field, value);
+        }
+        @java.lang.Override
+        public Builder mergeFrom(com.google.protobuf.Message other) {
+          if (other instanceof vector_tile.VectorTile.Tile.Feature) {
+            return mergeFrom((vector_tile.VectorTile.Tile.Feature)other);
+          } else {
+            super.mergeFrom(other);
+            return this;
+          }
+        }
+
+        public Builder mergeFrom(vector_tile.VectorTile.Tile.Feature other) {
+          if (other == vector_tile.VectorTile.Tile.Feature.getDefaultInstance()) return this;
+          if (other.hasId()) {
+            setId(other.getId());
+          }
+          if (!other.tags_.isEmpty()) {
+            if (tags_.isEmpty()) {
+              tags_ = other.tags_;
+              tags_.makeImmutable();
+              bitField0_ |= 0x00000002;
+            } else {
+              ensureTagsIsMutable();
+              tags_.addAll(other.tags_);
+            }
+            onChanged();
+          }
+          if (other.hasType()) {
+            setType(other.getType());
+          }
+          if (!other.geometry_.isEmpty()) {
+            if (geometry_.isEmpty()) {
+              geometry_ = other.geometry_;
+              geometry_.makeImmutable();
+              bitField0_ |= 0x00000008;
+            } else {
+              ensureGeometryIsMutable();
+              geometry_.addAll(other.geometry_);
+            }
+            onChanged();
+          }
+          this.mergeUnknownFields(other.getUnknownFields());
+          onChanged();
+          return this;
+        }
+
+        @java.lang.Override
+        public final boolean isInitialized() {
+          return true;
+        }
+
+        @java.lang.Override
+        public Builder mergeFrom(
+            com.google.protobuf.CodedInputStream input,
+            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+            throws java.io.IOException {
+          if (extensionRegistry == null) {
+            throw new java.lang.NullPointerException();
+          }
+          try {
+            boolean done = false;
+            while (!done) {
+              int tag = input.readTag();
+              switch (tag) {
+                case 0:
+                  done = true;
+                  break;
+                case 8: {
+                  id_ = input.readUInt64();
+                  bitField0_ |= 0x00000001;
+                  break;
+                } // case 8
+                case 16: {
+                  int v = input.readUInt32();
+                  ensureTagsIsMutable();
+                  tags_.addInt(v);
+                  break;
+                } // case 16
+                case 18: {
+                  int length = input.readRawVarint32();
+                  int limit = input.pushLimit(length);
+                  ensureTagsIsMutable();
+                  while (input.getBytesUntilLimit() > 0) {
+                    tags_.addInt(input.readUInt32());
+                  }
+                  input.popLimit(limit);
+                  break;
+                } // case 18
+                case 24: {
+                  int tmpRaw = input.readEnum();
+                  vector_tile.VectorTile.Tile.GeomType tmpValue =
+                      vector_tile.VectorTile.Tile.GeomType.forNumber(tmpRaw);
+                  if (tmpValue == null) {
+                    mergeUnknownVarintField(3, tmpRaw);
+                  } else {
+                    type_ = tmpRaw;
+                    bitField0_ |= 0x00000004;
+                  }
+                  break;
+                } // case 24
+                case 32: {
+                  int v = input.readUInt32();
+                  ensureGeometryIsMutable();
+                  geometry_.addInt(v);
+                  break;
+                } // case 32
+                case 34: {
+                  int length = input.readRawVarint32();
+                  int limit = input.pushLimit(length);
+                  ensureGeometryIsMutable();
+                  while (input.getBytesUntilLimit() > 0) {
+                    geometry_.addInt(input.readUInt32());
+                  }
+                  input.popLimit(limit);
+                  break;
+                } // case 34
+                default: {
+                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
+                    done = true; // was an endgroup tag
+                  }
+                  break;
+                } // default:
+              } // switch (tag)
+            } // while (!done)
+          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+            throw e.unwrapIOException();
+          } finally {
+            onChanged();
+          } // finally
+          return this;
+        }
+        private int bitField0_;
+
+        private long id_ ;
+        /**
+         * <code>optional uint64 id = 1 [default = 0];</code>
+         * @return Whether the id field is set.
+         */
+        @java.lang.Override
+        public boolean hasId() {
+          return ((bitField0_ & 0x00000001) != 0);
+        }
+        /**
+         * <code>optional uint64 id = 1 [default = 0];</code>
+         * @return The id.
+         */
+        @java.lang.Override
+        public long getId() {
+          return id_;
+        }
+        /**
+         * <code>optional uint64 id = 1 [default = 0];</code>
+         * @param value The id to set.
+         * @return This builder for chaining.
+         */
+        public Builder setId(long value) {
+
+          id_ = value;
+          bitField0_ |= 0x00000001;
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>optional uint64 id = 1 [default = 0];</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearId() {
+          bitField0_ = (bitField0_ & ~0x00000001);
+          id_ = 0L;
+          onChanged();
+          return this;
+        }
+
+        private com.google.protobuf.Internal.IntList tags_ = emptyIntList();
+        private void ensureTagsIsMutable() {
+          if (!tags_.isModifiable()) {
+            tags_ = makeMutableCopy(tags_);
+          }
+          bitField0_ |= 0x00000002;
+        }
+        /**
+         * <pre>
+         * Tags of this feature are encoded as repeated pairs of
+         * integers.
+         * A detailed description of tags is located in sections
+         * 4.2 and 4.4 of the specification
+         * </pre>
+         *
+         * <code>repeated uint32 tags = 2 [packed = true];</code>
+         * @return A list containing the tags.
+         */
+        public java.util.List<java.lang.Integer>
+            getTagsList() {
+          tags_.makeImmutable();
+          return tags_;
+        }
+        /**
+         * <pre>
+         * Tags of this feature are encoded as repeated pairs of
+         * integers.
+         * A detailed description of tags is located in sections
+         * 4.2 and 4.4 of the specification
+         * </pre>
+         *
+         * <code>repeated uint32 tags = 2 [packed = true];</code>
+         * @return The count of tags.
+         */
+        public int getTagsCount() {
+          return tags_.size();
+        }
+        /**
+         * <pre>
+         * Tags of this feature are encoded as repeated pairs of
+         * integers.
+         * A detailed description of tags is located in sections
+         * 4.2 and 4.4 of the specification
+         * </pre>
+         *
+         * <code>repeated uint32 tags = 2 [packed = true];</code>
+         * @param index The index of the element to return.
+         * @return The tags at the given index.
+         */
+        public int getTags(int index) {
+          return tags_.getInt(index);
+        }
+        /**
+         * <pre>
+         * Tags of this feature are encoded as repeated pairs of
+         * integers.
+         * A detailed description of tags is located in sections
+         * 4.2 and 4.4 of the specification
+         * </pre>
+         *
+         * <code>repeated uint32 tags = 2 [packed = true];</code>
+         * @param index The index to set the value at.
+         * @param value The tags to set.
+         * @return This builder for chaining.
+         */
+        public Builder setTags(
+            int index, int value) {
+
+          ensureTagsIsMutable();
+          tags_.setInt(index, value);
+          bitField0_ |= 0x00000002;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Tags of this feature are encoded as repeated pairs of
+         * integers.
+         * A detailed description of tags is located in sections
+         * 4.2 and 4.4 of the specification
+         * </pre>
+         *
+         * <code>repeated uint32 tags = 2 [packed = true];</code>
+         * @param value The tags to add.
+         * @return This builder for chaining.
+         */
+        public Builder addTags(int value) {
+
+          ensureTagsIsMutable();
+          tags_.addInt(value);
+          bitField0_ |= 0x00000002;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Tags of this feature are encoded as repeated pairs of
+         * integers.
+         * A detailed description of tags is located in sections
+         * 4.2 and 4.4 of the specification
+         * </pre>
+         *
+         * <code>repeated uint32 tags = 2 [packed = true];</code>
+         * @param values The tags to add.
+         * @return This builder for chaining.
+         */
+        public Builder addAllTags(
+            java.lang.Iterable<? extends java.lang.Integer> values) {
+          ensureTagsIsMutable();
+          com.google.protobuf.AbstractMessageLite.Builder.addAll(
+              values, tags_);
+          bitField0_ |= 0x00000002;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Tags of this feature are encoded as repeated pairs of
+         * integers.
+         * A detailed description of tags is located in sections
+         * 4.2 and 4.4 of the specification
+         * </pre>
+         *
+         * <code>repeated uint32 tags = 2 [packed = true];</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearTags() {
+          tags_ = emptyIntList();
+          bitField0_ = (bitField0_ & ~0x00000002);
+          onChanged();
+          return this;
+        }
+
+        private int type_ = 0;
+        /**
+         * <pre>
+         * The type of geometry stored in this feature.
+         * </pre>
+         *
+         * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
+         * @return Whether the type field is set.
+         */
+        @java.lang.Override public boolean hasType() {
+          return ((bitField0_ & 0x00000004) != 0);
+        }
+        /**
+         * <pre>
+         * The type of geometry stored in this feature.
+         * </pre>
+         *
+         * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
+         * @return The type.
+         */
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.GeomType getType() {
+          vector_tile.VectorTile.Tile.GeomType result = vector_tile.VectorTile.Tile.GeomType.forNumber(type_);
+          return result == null ? vector_tile.VectorTile.Tile.GeomType.UNKNOWN : result;
+        }
+        /**
+         * <pre>
+         * The type of geometry stored in this feature.
+         * </pre>
+         *
+         * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
+         * @param value The type to set.
+         * @return This builder for chaining.
+         */
+        public Builder setType(vector_tile.VectorTile.Tile.GeomType value) {
+          if (value == null) {
+            throw new NullPointerException();
+          }
+          bitField0_ |= 0x00000004;
+          type_ = value.getNumber();
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * The type of geometry stored in this feature.
+         * </pre>
+         *
+         * <code>optional .vector_tile.Tile.GeomType type = 3 [default = UNKNOWN];</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearType() {
+          bitField0_ = (bitField0_ & ~0x00000004);
+          type_ = 0;
+          onChanged();
+          return this;
+        }
+
+        private com.google.protobuf.Internal.IntList geometry_ = emptyIntList();
+        private void ensureGeometryIsMutable() {
+          if (!geometry_.isModifiable()) {
+            geometry_ = makeMutableCopy(geometry_);
+          }
+          bitField0_ |= 0x00000008;
+        }
+        /**
+         * <pre>
+         * Contains a stream of commands and parameters (vertices).
+         * A detailed description on geometry encoding is located in 
+         * section 4.3 of the specification.
+         * </pre>
+         *
+         * <code>repeated uint32 geometry = 4 [packed = true];</code>
+         * @return A list containing the geometry.
+         */
+        public java.util.List<java.lang.Integer>
+            getGeometryList() {
+          geometry_.makeImmutable();
+          return geometry_;
+        }
+        /**
+         * <pre>
+         * Contains a stream of commands and parameters (vertices).
+         * A detailed description on geometry encoding is located in 
+         * section 4.3 of the specification.
+         * </pre>
+         *
+         * <code>repeated uint32 geometry = 4 [packed = true];</code>
+         * @return The count of geometry.
+         */
+        public int getGeometryCount() {
+          return geometry_.size();
+        }
+        /**
+         * <pre>
+         * Contains a stream of commands and parameters (vertices).
+         * A detailed description on geometry encoding is located in 
+         * section 4.3 of the specification.
+         * </pre>
+         *
+         * <code>repeated uint32 geometry = 4 [packed = true];</code>
+         * @param index The index of the element to return.
+         * @return The geometry at the given index.
+         */
+        public int getGeometry(int index) {
+          return geometry_.getInt(index);
+        }
+        /**
+         * <pre>
+         * Contains a stream of commands and parameters (vertices).
+         * A detailed description on geometry encoding is located in 
+         * section 4.3 of the specification.
+         * </pre>
+         *
+         * <code>repeated uint32 geometry = 4 [packed = true];</code>
+         * @param index The index to set the value at.
+         * @param value The geometry to set.
+         * @return This builder for chaining.
+         */
+        public Builder setGeometry(
+            int index, int value) {
+
+          ensureGeometryIsMutable();
+          geometry_.setInt(index, value);
+          bitField0_ |= 0x00000008;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Contains a stream of commands and parameters (vertices).
+         * A detailed description on geometry encoding is located in 
+         * section 4.3 of the specification.
+         * </pre>
+         *
+         * <code>repeated uint32 geometry = 4 [packed = true];</code>
+         * @param value The geometry to add.
+         * @return This builder for chaining.
+         */
+        public Builder addGeometry(int value) {
+
+          ensureGeometryIsMutable();
+          geometry_.addInt(value);
+          bitField0_ |= 0x00000008;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Contains a stream of commands and parameters (vertices).
+         * A detailed description on geometry encoding is located in 
+         * section 4.3 of the specification.
+         * </pre>
+         *
+         * <code>repeated uint32 geometry = 4 [packed = true];</code>
+         * @param values The geometry to add.
+         * @return This builder for chaining.
+         */
+        public Builder addAllGeometry(
+            java.lang.Iterable<? extends java.lang.Integer> values) {
+          ensureGeometryIsMutable();
+          com.google.protobuf.AbstractMessageLite.Builder.addAll(
+              values, geometry_);
+          bitField0_ |= 0x00000008;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Contains a stream of commands and parameters (vertices).
+         * A detailed description on geometry encoding is located in 
+         * section 4.3 of the specification.
+         * </pre>
+         *
+         * <code>repeated uint32 geometry = 4 [packed = true];</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearGeometry() {
+          geometry_ = emptyIntList();
+          bitField0_ = (bitField0_ & ~0x00000008);
+          onChanged();
+          return this;
+        }
+        @java.lang.Override
+        public final Builder setUnknownFields(
+            final com.google.protobuf.UnknownFieldSet unknownFields) {
+          return super.setUnknownFields(unknownFields);
+        }
+
+        @java.lang.Override
+        public final Builder mergeUnknownFields(
+            final com.google.protobuf.UnknownFieldSet unknownFields) {
+          return super.mergeUnknownFields(unknownFields);
+        }
+
+
+        // @@protoc_insertion_point(builder_scope:vector_tile.Tile.Feature)
+      }
+
+      // @@protoc_insertion_point(class_scope:vector_tile.Tile.Feature)
+      private static final vector_tile.VectorTile.Tile.Feature DEFAULT_INSTANCE;
+      static {
+        DEFAULT_INSTANCE = new vector_tile.VectorTile.Tile.Feature();
+      }
+
+      public static vector_tile.VectorTile.Tile.Feature getDefaultInstance() {
+        return DEFAULT_INSTANCE;
+      }
+
+      @java.lang.Deprecated public static final com.google.protobuf.Parser<Feature>
+          PARSER = new com.google.protobuf.AbstractParser<Feature>() {
+        @java.lang.Override
+        public Feature parsePartialFrom(
+            com.google.protobuf.CodedInputStream input,
+            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+            throws com.google.protobuf.InvalidProtocolBufferException {
+          Builder builder = newBuilder();
+          try {
+            builder.mergeFrom(input, extensionRegistry);
+          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+            throw e.setUnfinishedMessage(builder.buildPartial());
+          } catch (com.google.protobuf.UninitializedMessageException e) {
+            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
+          } catch (java.io.IOException e) {
+            throw new com.google.protobuf.InvalidProtocolBufferException(e)
+                .setUnfinishedMessage(builder.buildPartial());
+          }
+          return builder.buildPartial();
+        }
+      };
+
+      public static com.google.protobuf.Parser<Feature> parser() {
+        return PARSER;
+      }
+
+      @java.lang.Override
+      public com.google.protobuf.Parser<Feature> getParserForType() {
+        return PARSER;
+      }
+
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile.Feature getDefaultInstanceForType() {
+        return DEFAULT_INSTANCE;
+      }
+
+    }
+
+    public interface LayerOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:vector_tile.Tile.Layer)
+        com.google.protobuf.GeneratedMessageV3.
+            ExtendableMessageOrBuilder<Layer> {
+
+      /**
+       * <pre>
+       * Any compliant implementation must first read the version
+       * number encoded in this message and choose the correct
+       * implementation for this version number before proceeding to
+       * decode other parts of this message.
+       * </pre>
+       *
+       * <code>required uint32 version = 15 [default = 1];</code>
+       * @return Whether the version field is set.
+       */
+      boolean hasVersion();
+      /**
+       * <pre>
+       * Any compliant implementation must first read the version
+       * number encoded in this message and choose the correct
+       * implementation for this version number before proceeding to
+       * decode other parts of this message.
+       * </pre>
+       *
+       * <code>required uint32 version = 15 [default = 1];</code>
+       * @return The version.
+       */
+      int getVersion();
+
+      /**
+       * <code>required string name = 1;</code>
+       * @return Whether the name field is set.
+       */
+      boolean hasName();
+      /**
+       * <code>required string name = 1;</code>
+       * @return The name.
+       */
+      java.lang.String getName();
+      /**
+       * <code>required string name = 1;</code>
+       * @return The bytes for name.
+       */
+      com.google.protobuf.ByteString
+          getNameBytes();
+
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      java.util.List<vector_tile.VectorTile.Tile.Feature> 
+          getFeaturesList();
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      vector_tile.VectorTile.Tile.Feature getFeatures(int index);
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      int getFeaturesCount();
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      java.util.List<? extends vector_tile.VectorTile.Tile.FeatureOrBuilder> 
+          getFeaturesOrBuilderList();
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      vector_tile.VectorTile.Tile.FeatureOrBuilder getFeaturesOrBuilder(
+          int index);
+
+      /**
+       * <pre>
+       * Dictionary encoding for keys
+       * </pre>
+       *
+       * <code>repeated string keys = 3;</code>
+       * @return A list containing the keys.
+       */
+      java.util.List<java.lang.String>
+          getKeysList();
+      /**
+       * <pre>
+       * Dictionary encoding for keys
+       * </pre>
+       *
+       * <code>repeated string keys = 3;</code>
+       * @return The count of keys.
+       */
+      int getKeysCount();
+      /**
+       * <pre>
+       * Dictionary encoding for keys
+       * </pre>
+       *
+       * <code>repeated string keys = 3;</code>
+       * @param index The index of the element to return.
+       * @return The keys at the given index.
+       */
+      java.lang.String getKeys(int index);
+      /**
+       * <pre>
+       * Dictionary encoding for keys
+       * </pre>
+       *
+       * <code>repeated string keys = 3;</code>
+       * @param index The index of the value to return.
+       * @return The bytes of the keys at the given index.
+       */
+      com.google.protobuf.ByteString
+          getKeysBytes(int index);
+
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      java.util.List<vector_tile.VectorTile.Tile.Value> 
+          getValuesList();
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      vector_tile.VectorTile.Tile.Value getValues(int index);
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      int getValuesCount();
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      java.util.List<? extends vector_tile.VectorTile.Tile.ValueOrBuilder> 
+          getValuesOrBuilderList();
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      vector_tile.VectorTile.Tile.ValueOrBuilder getValuesOrBuilder(
+          int index);
+
+      /**
+       * <pre>
+       * Although this is an "optional" field it is required by the specification.
+       * See https://github.com/mapbox/vector-tile-spec/issues/47
+       * </pre>
+       *
+       * <code>optional uint32 extent = 5 [default = 4096];</code>
+       * @return Whether the extent field is set.
+       */
+      boolean hasExtent();
+      /**
+       * <pre>
+       * Although this is an "optional" field it is required by the specification.
+       * See https://github.com/mapbox/vector-tile-spec/issues/47
+       * </pre>
+       *
+       * <code>optional uint32 extent = 5 [default = 4096];</code>
+       * @return The extent.
+       */
+      int getExtent();
+    }
+    /**
+     * <pre>
+     * Layers are described in section 4.1 of the specification
+     * </pre>
+     *
+     * Protobuf type {@code vector_tile.Tile.Layer}
+     */
+    public static final class Layer extends
+        com.google.protobuf.GeneratedMessageV3.ExtendableMessage<
+          Layer> implements
+        // @@protoc_insertion_point(message_implements:vector_tile.Tile.Layer)
+        LayerOrBuilder {
+    private static final long serialVersionUID = 0L;
+      // Use Layer.newBuilder() to construct.
+      private Layer(com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<vector_tile.VectorTile.Tile.Layer, ?> builder) {
+        super(builder);
+      }
+      private Layer() {
+        version_ = 1;
+        name_ = "";
+        features_ = java.util.Collections.emptyList();
+        keys_ =
+            com.google.protobuf.LazyStringArrayList.emptyList();
+        values_ = java.util.Collections.emptyList();
+        extent_ = 4096;
+      }
+
+      @java.lang.Override
+      @SuppressWarnings({"unused"})
+      protected java.lang.Object newInstance(
+          UnusedPrivateParameter unused) {
+        return new Layer();
+      }
+
+      public static final com.google.protobuf.Descriptors.Descriptor
+          getDescriptor() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_descriptor;
+      }
+
+      @java.lang.Override
+      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+          internalGetFieldAccessorTable() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_fieldAccessorTable
+            .ensureFieldAccessorsInitialized(
+                vector_tile.VectorTile.Tile.Layer.class, vector_tile.VectorTile.Tile.Layer.Builder.class);
+      }
+
+      private int bitField0_;
+      public static final int VERSION_FIELD_NUMBER = 15;
+      private int version_ = 1;
+      /**
+       * <pre>
+       * Any compliant implementation must first read the version
+       * number encoded in this message and choose the correct
+       * implementation for this version number before proceeding to
+       * decode other parts of this message.
+       * </pre>
+       *
+       * <code>required uint32 version = 15 [default = 1];</code>
+       * @return Whether the version field is set.
+       */
+      @java.lang.Override
+      public boolean hasVersion() {
+        return ((bitField0_ & 0x00000001) != 0);
+      }
+      /**
+       * <pre>
+       * Any compliant implementation must first read the version
+       * number encoded in this message and choose the correct
+       * implementation for this version number before proceeding to
+       * decode other parts of this message.
+       * </pre>
+       *
+       * <code>required uint32 version = 15 [default = 1];</code>
+       * @return The version.
+       */
+      @java.lang.Override
+      public int getVersion() {
+        return version_;
+      }
+
+      public static final int NAME_FIELD_NUMBER = 1;
+      @SuppressWarnings("serial")
+      private volatile java.lang.Object name_ = "";
+      /**
+       * <code>required string name = 1;</code>
+       * @return Whether the name field is set.
+       */
+      @java.lang.Override
+      public boolean hasName() {
+        return ((bitField0_ & 0x00000002) != 0);
+      }
+      /**
+       * <code>required string name = 1;</code>
+       * @return The name.
+       */
+      @java.lang.Override
+      public java.lang.String getName() {
+        java.lang.Object ref = name_;
+        if (ref instanceof java.lang.String) {
+          return (java.lang.String) ref;
+        } else {
+          com.google.protobuf.ByteString bs = 
+              (com.google.protobuf.ByteString) ref;
+          java.lang.String s = bs.toStringUtf8();
+          if (bs.isValidUtf8()) {
+            name_ = s;
+          }
+          return s;
+        }
+      }
+      /**
+       * <code>required string name = 1;</code>
+       * @return The bytes for name.
+       */
+      @java.lang.Override
+      public com.google.protobuf.ByteString
+          getNameBytes() {
+        java.lang.Object ref = name_;
+        if (ref instanceof java.lang.String) {
+          com.google.protobuf.ByteString b = 
+              com.google.protobuf.ByteString.copyFromUtf8(
+                  (java.lang.String) ref);
+          name_ = b;
+          return b;
+        } else {
+          return (com.google.protobuf.ByteString) ref;
+        }
+      }
+
+      public static final int FEATURES_FIELD_NUMBER = 2;
+      @SuppressWarnings("serial")
+      private java.util.List<vector_tile.VectorTile.Tile.Feature> features_;
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      @java.lang.Override
+      public java.util.List<vector_tile.VectorTile.Tile.Feature> getFeaturesList() {
+        return features_;
+      }
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      @java.lang.Override
+      public java.util.List<? extends vector_tile.VectorTile.Tile.FeatureOrBuilder> 
+          getFeaturesOrBuilderList() {
+        return features_;
+      }
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      @java.lang.Override
+      public int getFeaturesCount() {
+        return features_.size();
+      }
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile.Feature getFeatures(int index) {
+        return features_.get(index);
+      }
+      /**
+       * <pre>
+       * The actual features in this tile.
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+       */
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile.FeatureOrBuilder getFeaturesOrBuilder(
+          int index) {
+        return features_.get(index);
+      }
+
+      public static final int KEYS_FIELD_NUMBER = 3;
+      @SuppressWarnings("serial")
+      private com.google.protobuf.LazyStringArrayList keys_ =
+          com.google.protobuf.LazyStringArrayList.emptyList();
+      /**
+       * <pre>
+       * Dictionary encoding for keys
+       * </pre>
+       *
+       * <code>repeated string keys = 3;</code>
+       * @return A list containing the keys.
+       */
+      public com.google.protobuf.ProtocolStringList
+          getKeysList() {
+        return keys_;
+      }
+      /**
+       * <pre>
+       * Dictionary encoding for keys
+       * </pre>
+       *
+       * <code>repeated string keys = 3;</code>
+       * @return The count of keys.
+       */
+      public int getKeysCount() {
+        return keys_.size();
+      }
+      /**
+       * <pre>
+       * Dictionary encoding for keys
+       * </pre>
+       *
+       * <code>repeated string keys = 3;</code>
+       * @param index The index of the element to return.
+       * @return The keys at the given index.
+       */
+      public java.lang.String getKeys(int index) {
+        return keys_.get(index);
+      }
+      /**
+       * <pre>
+       * Dictionary encoding for keys
+       * </pre>
+       *
+       * <code>repeated string keys = 3;</code>
+       * @param index The index of the value to return.
+       * @return The bytes of the keys at the given index.
+       */
+      public com.google.protobuf.ByteString
+          getKeysBytes(int index) {
+        return keys_.getByteString(index);
+      }
+
+      public static final int VALUES_FIELD_NUMBER = 4;
+      @SuppressWarnings("serial")
+      private java.util.List<vector_tile.VectorTile.Tile.Value> values_;
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      @java.lang.Override
+      public java.util.List<vector_tile.VectorTile.Tile.Value> getValuesList() {
+        return values_;
+      }
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      @java.lang.Override
+      public java.util.List<? extends vector_tile.VectorTile.Tile.ValueOrBuilder> 
+          getValuesOrBuilderList() {
+        return values_;
+      }
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      @java.lang.Override
+      public int getValuesCount() {
+        return values_.size();
+      }
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile.Value getValues(int index) {
+        return values_.get(index);
+      }
+      /**
+       * <pre>
+       * Dictionary encoding for values
+       * </pre>
+       *
+       * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+       */
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile.ValueOrBuilder getValuesOrBuilder(
+          int index) {
+        return values_.get(index);
+      }
+
+      public static final int EXTENT_FIELD_NUMBER = 5;
+      private int extent_ = 4096;
+      /**
+       * <pre>
+       * Although this is an "optional" field it is required by the specification.
+       * See https://github.com/mapbox/vector-tile-spec/issues/47
+       * </pre>
+       *
+       * <code>optional uint32 extent = 5 [default = 4096];</code>
+       * @return Whether the extent field is set.
+       */
+      @java.lang.Override
+      public boolean hasExtent() {
+        return ((bitField0_ & 0x00000004) != 0);
+      }
+      /**
+       * <pre>
+       * Although this is an "optional" field it is required by the specification.
+       * See https://github.com/mapbox/vector-tile-spec/issues/47
+       * </pre>
+       *
+       * <code>optional uint32 extent = 5 [default = 4096];</code>
+       * @return The extent.
+       */
+      @java.lang.Override
+      public int getExtent() {
+        return extent_;
+      }
+
+      private byte memoizedIsInitialized = -1;
+      @java.lang.Override
+      public final boolean isInitialized() {
+        byte isInitialized = memoizedIsInitialized;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
+
+        if (!hasVersion()) {
+          memoizedIsInitialized = 0;
+          return false;
+        }
+        if (!hasName()) {
+          memoizedIsInitialized = 0;
+          return false;
+        }
+        for (int i = 0; i < getValuesCount(); i++) {
+          if (!getValues(i).isInitialized()) {
+            memoizedIsInitialized = 0;
+            return false;
+          }
+        }
+        if (!extensionsAreInitialized()) {
+          memoizedIsInitialized = 0;
+          return false;
+        }
+        memoizedIsInitialized = 1;
+        return true;
+      }
+
+      @java.lang.Override
+      public void writeTo(com.google.protobuf.CodedOutputStream output)
+                          throws java.io.IOException {
+        com.google.protobuf.GeneratedMessageV3
+          .ExtendableMessage<vector_tile.VectorTile.Tile.Layer>.ExtensionWriter
+            extensionWriter = newExtensionWriter();
+        if (((bitField0_ & 0x00000002) != 0)) {
+          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
+        }
+        for (int i = 0; i < features_.size(); i++) {
+          output.writeMessage(2, features_.get(i));
+        }
+        for (int i = 0; i < keys_.size(); i++) {
+          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, keys_.getRaw(i));
+        }
+        for (int i = 0; i < values_.size(); i++) {
+          output.writeMessage(4, values_.get(i));
+        }
+        if (((bitField0_ & 0x00000004) != 0)) {
+          output.writeUInt32(5, extent_);
+        }
+        if (((bitField0_ & 0x00000001) != 0)) {
+          output.writeUInt32(15, version_);
+        }
+        extensionWriter.writeUntil(536870912, output);
+        getUnknownFields().writeTo(output);
+      }
+
+      @java.lang.Override
+      public int getSerializedSize() {
+        int size = memoizedSize;
+        if (size != -1) return size;
+
+        size = 0;
+        if (((bitField0_ & 0x00000002) != 0)) {
+          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
+        }
+        for (int i = 0; i < features_.size(); i++) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeMessageSize(2, features_.get(i));
+        }
+        {
+          int dataSize = 0;
+          for (int i = 0; i < keys_.size(); i++) {
+            dataSize += computeStringSizeNoTag(keys_.getRaw(i));
+          }
+          size += dataSize;
+          size += 1 * getKeysList().size();
+        }
+        for (int i = 0; i < values_.size(); i++) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeMessageSize(4, values_.get(i));
+        }
+        if (((bitField0_ & 0x00000004) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeUInt32Size(5, extent_);
+        }
+        if (((bitField0_ & 0x00000001) != 0)) {
+          size += com.google.protobuf.CodedOutputStream
+            .computeUInt32Size(15, version_);
+        }
+        size += extensionsSerializedSize();
+        size += getUnknownFields().getSerializedSize();
+        memoizedSize = size;
+        return size;
+      }
+
+      @java.lang.Override
+      public boolean equals(final java.lang.Object obj) {
+        if (obj == this) {
+         return true;
+        }
+        if (!(obj instanceof vector_tile.VectorTile.Tile.Layer)) {
+          return super.equals(obj);
+        }
+        vector_tile.VectorTile.Tile.Layer other = (vector_tile.VectorTile.Tile.Layer) obj;
+
+        if (hasVersion() != other.hasVersion()) return false;
+        if (hasVersion()) {
+          if (getVersion()
+              != other.getVersion()) return false;
+        }
+        if (hasName() != other.hasName()) return false;
+        if (hasName()) {
+          if (!getName()
+              .equals(other.getName())) return false;
+        }
+        if (!getFeaturesList()
+            .equals(other.getFeaturesList())) return false;
+        if (!getKeysList()
+            .equals(other.getKeysList())) return false;
+        if (!getValuesList()
+            .equals(other.getValuesList())) return false;
+        if (hasExtent() != other.hasExtent()) return false;
+        if (hasExtent()) {
+          if (getExtent()
+              != other.getExtent()) return false;
+        }
+        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
+        if (!getExtensionFields().equals(other.getExtensionFields()))
+          return false;
+        return true;
+      }
+
+      @java.lang.Override
+      public int hashCode() {
+        if (memoizedHashCode != 0) {
+          return memoizedHashCode;
+        }
+        int hash = 41;
+        hash = (19 * hash) + getDescriptor().hashCode();
+        if (hasVersion()) {
+          hash = (37 * hash) + VERSION_FIELD_NUMBER;
+          hash = (53 * hash) + getVersion();
+        }
+        if (hasName()) {
+          hash = (37 * hash) + NAME_FIELD_NUMBER;
+          hash = (53 * hash) + getName().hashCode();
+        }
+        if (getFeaturesCount() > 0) {
+          hash = (37 * hash) + FEATURES_FIELD_NUMBER;
+          hash = (53 * hash) + getFeaturesList().hashCode();
+        }
+        if (getKeysCount() > 0) {
+          hash = (37 * hash) + KEYS_FIELD_NUMBER;
+          hash = (53 * hash) + getKeysList().hashCode();
+        }
+        if (getValuesCount() > 0) {
+          hash = (37 * hash) + VALUES_FIELD_NUMBER;
+          hash = (53 * hash) + getValuesList().hashCode();
+        }
+        if (hasExtent()) {
+          hash = (37 * hash) + EXTENT_FIELD_NUMBER;
+          hash = (53 * hash) + getExtent();
+        }
+        hash = hashFields(hash, getExtensionFields());
+        hash = (29 * hash) + getUnknownFields().hashCode();
+        memoizedHashCode = hash;
+        return hash;
+      }
+
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(
+          java.nio.ByteBuffer data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(
+          java.nio.ByteBuffer data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(
+          com.google.protobuf.ByteString data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(
+          com.google.protobuf.ByteString data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(byte[] data)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(
+          byte[] data,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return PARSER.parseFrom(data, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(java.io.InputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(
+          java.io.InputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input, extensionRegistry);
+      }
+
+      public static vector_tile.VectorTile.Tile.Layer parseDelimitedFrom(java.io.InputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseDelimitedWithIOException(PARSER, input);
+      }
+
+      public static vector_tile.VectorTile.Tile.Layer parseDelimitedFrom(
+          java.io.InputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(
+          com.google.protobuf.CodedInputStream input)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input);
+      }
+      public static vector_tile.VectorTile.Tile.Layer parseFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        return com.google.protobuf.GeneratedMessageV3
+            .parseWithIOException(PARSER, input, extensionRegistry);
+      }
+
+      @java.lang.Override
+      public Builder newBuilderForType() { return newBuilder(); }
+      public static Builder newBuilder() {
+        return DEFAULT_INSTANCE.toBuilder();
+      }
+      public static Builder newBuilder(vector_tile.VectorTile.Tile.Layer prototype) {
+        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
+      }
+      @java.lang.Override
+      public Builder toBuilder() {
+        return this == DEFAULT_INSTANCE
+            ? new Builder() : new Builder().mergeFrom(this);
+      }
+
+      @java.lang.Override
+      protected Builder newBuilderForType(
+          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
+        Builder builder = new Builder(parent);
+        return builder;
+      }
+      /**
+       * <pre>
+       * Layers are described in section 4.1 of the specification
+       * </pre>
+       *
+       * Protobuf type {@code vector_tile.Tile.Layer}
+       */
+      public static final class Builder extends
+          com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
+            vector_tile.VectorTile.Tile.Layer, Builder> implements
+          // @@protoc_insertion_point(builder_implements:vector_tile.Tile.Layer)
+          vector_tile.VectorTile.Tile.LayerOrBuilder {
+        public static final com.google.protobuf.Descriptors.Descriptor
+            getDescriptor() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_descriptor;
+        }
+
+        @java.lang.Override
+        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+            internalGetFieldAccessorTable() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_fieldAccessorTable
+              .ensureFieldAccessorsInitialized(
+                  vector_tile.VectorTile.Tile.Layer.class, vector_tile.VectorTile.Tile.Layer.Builder.class);
+        }
+
+        // Construct using vector_tile.VectorTile.Tile.Layer.newBuilder()
+        private Builder() {
+
+        }
+
+        private Builder(
+            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
+          super(parent);
+
+        }
+        @java.lang.Override
+        public Builder clear() {
+          super.clear();
+          bitField0_ = 0;
+          version_ = 1;
+          name_ = "";
+          if (featuresBuilder_ == null) {
+            features_ = java.util.Collections.emptyList();
+          } else {
+            features_ = null;
+            featuresBuilder_.clear();
+          }
+          bitField0_ = (bitField0_ & ~0x00000004);
+          keys_ =
+              com.google.protobuf.LazyStringArrayList.emptyList();
+          if (valuesBuilder_ == null) {
+            values_ = java.util.Collections.emptyList();
+          } else {
+            values_ = null;
+            valuesBuilder_.clear();
+          }
+          bitField0_ = (bitField0_ & ~0x00000010);
+          extent_ = 4096;
+          return this;
+        }
+
+        @java.lang.Override
+        public com.google.protobuf.Descriptors.Descriptor
+            getDescriptorForType() {
+          return vector_tile.VectorTile.internal_static_vector_tile_Tile_Layer_descriptor;
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Layer getDefaultInstanceForType() {
+          return vector_tile.VectorTile.Tile.Layer.getDefaultInstance();
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Layer build() {
+          vector_tile.VectorTile.Tile.Layer result = buildPartial();
+          if (!result.isInitialized()) {
+            throw newUninitializedMessageException(result);
+          }
+          return result;
+        }
+
+        @java.lang.Override
+        public vector_tile.VectorTile.Tile.Layer buildPartial() {
+          vector_tile.VectorTile.Tile.Layer result = new vector_tile.VectorTile.Tile.Layer(this);
+          buildPartialRepeatedFields(result);
+          if (bitField0_ != 0) { buildPartial0(result); }
+          onBuilt();
+          return result;
+        }
+
+        private void buildPartialRepeatedFields(vector_tile.VectorTile.Tile.Layer result) {
+          if (featuresBuilder_ == null) {
+            if (((bitField0_ & 0x00000004) != 0)) {
+              features_ = java.util.Collections.unmodifiableList(features_);
+              bitField0_ = (bitField0_ & ~0x00000004);
+            }
+            result.features_ = features_;
+          } else {
+            result.features_ = featuresBuilder_.build();
+          }
+          if (valuesBuilder_ == null) {
+            if (((bitField0_ & 0x00000010) != 0)) {
+              values_ = java.util.Collections.unmodifiableList(values_);
+              bitField0_ = (bitField0_ & ~0x00000010);
+            }
+            result.values_ = values_;
+          } else {
+            result.values_ = valuesBuilder_.build();
+          }
+        }
+
+        private void buildPartial0(vector_tile.VectorTile.Tile.Layer result) {
+          int from_bitField0_ = bitField0_;
+          int to_bitField0_ = 0;
+          if (((from_bitField0_ & 0x00000001) != 0)) {
+            result.version_ = version_;
+            to_bitField0_ |= 0x00000001;
+          }
+          if (((from_bitField0_ & 0x00000002) != 0)) {
+            result.name_ = name_;
+            to_bitField0_ |= 0x00000002;
+          }
+          if (((from_bitField0_ & 0x00000008) != 0)) {
+            keys_.makeImmutable();
+            result.keys_ = keys_;
+          }
+          if (((from_bitField0_ & 0x00000020) != 0)) {
+            result.extent_ = extent_;
+            to_bitField0_ |= 0x00000004;
+          }
+          result.bitField0_ |= to_bitField0_;
+        }
+
+        @java.lang.Override
+        public Builder clone() {
+          return super.clone();
+        }
+        @java.lang.Override
+        public Builder setField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            java.lang.Object value) {
+          return super.setField(field, value);
+        }
+        @java.lang.Override
+        public Builder clearField(
+            com.google.protobuf.Descriptors.FieldDescriptor field) {
+          return super.clearField(field);
+        }
+        @java.lang.Override
+        public Builder clearOneof(
+            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
+          return super.clearOneof(oneof);
+        }
+        @java.lang.Override
+        public Builder setRepeatedField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            int index, java.lang.Object value) {
+          return super.setRepeatedField(field, index, value);
+        }
+        @java.lang.Override
+        public Builder addRepeatedField(
+            com.google.protobuf.Descriptors.FieldDescriptor field,
+            java.lang.Object value) {
+          return super.addRepeatedField(field, value);
+        }
+        @java.lang.Override
+        public <Type> Builder setExtension(
+            com.google.protobuf.GeneratedMessage.GeneratedExtension<
+                vector_tile.VectorTile.Tile.Layer, Type> extension,
+            Type value) {
+          return super.setExtension(extension, value);
+        }
+        @java.lang.Override
+        public <Type> Builder setExtension(
+            com.google.protobuf.GeneratedMessage.GeneratedExtension<
+                vector_tile.VectorTile.Tile.Layer, java.util.List<Type>> extension,
+            int index, Type value) {
+          return super.setExtension(extension, index, value);
+        }
+        @java.lang.Override
+        public <Type> Builder addExtension(
+            com.google.protobuf.GeneratedMessage.GeneratedExtension<
+                vector_tile.VectorTile.Tile.Layer, java.util.List<Type>> extension,
+            Type value) {
+          return super.addExtension(extension, value);
+        }
+        @java.lang.Override
+        public <T> Builder clearExtension(
+            com.google.protobuf.GeneratedMessage.GeneratedExtension<
+                vector_tile.VectorTile.Tile.Layer, T> extension) {
+          return super.clearExtension(extension);
+        }
+        @java.lang.Override
+        public Builder mergeFrom(com.google.protobuf.Message other) {
+          if (other instanceof vector_tile.VectorTile.Tile.Layer) {
+            return mergeFrom((vector_tile.VectorTile.Tile.Layer)other);
+          } else {
+            super.mergeFrom(other);
+            return this;
+          }
+        }
+
+        public Builder mergeFrom(vector_tile.VectorTile.Tile.Layer other) {
+          if (other == vector_tile.VectorTile.Tile.Layer.getDefaultInstance()) return this;
+          if (other.hasVersion()) {
+            setVersion(other.getVersion());
+          }
+          if (other.hasName()) {
+            name_ = other.name_;
+            bitField0_ |= 0x00000002;
+            onChanged();
+          }
+          if (featuresBuilder_ == null) {
+            if (!other.features_.isEmpty()) {
+              if (features_.isEmpty()) {
+                features_ = other.features_;
+                bitField0_ = (bitField0_ & ~0x00000004);
+              } else {
+                ensureFeaturesIsMutable();
+                features_.addAll(other.features_);
+              }
+              onChanged();
+            }
+          } else {
+            if (!other.features_.isEmpty()) {
+              if (featuresBuilder_.isEmpty()) {
+                featuresBuilder_.dispose();
+                featuresBuilder_ = null;
+                features_ = other.features_;
+                bitField0_ = (bitField0_ & ~0x00000004);
+                featuresBuilder_ = 
+                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
+                     getFeaturesFieldBuilder() : null;
+              } else {
+                featuresBuilder_.addAllMessages(other.features_);
+              }
+            }
+          }
+          if (!other.keys_.isEmpty()) {
+            if (keys_.isEmpty()) {
+              keys_ = other.keys_;
+              bitField0_ |= 0x00000008;
+            } else {
+              ensureKeysIsMutable();
+              keys_.addAll(other.keys_);
+            }
+            onChanged();
+          }
+          if (valuesBuilder_ == null) {
+            if (!other.values_.isEmpty()) {
+              if (values_.isEmpty()) {
+                values_ = other.values_;
+                bitField0_ = (bitField0_ & ~0x00000010);
+              } else {
+                ensureValuesIsMutable();
+                values_.addAll(other.values_);
+              }
+              onChanged();
+            }
+          } else {
+            if (!other.values_.isEmpty()) {
+              if (valuesBuilder_.isEmpty()) {
+                valuesBuilder_.dispose();
+                valuesBuilder_ = null;
+                values_ = other.values_;
+                bitField0_ = (bitField0_ & ~0x00000010);
+                valuesBuilder_ = 
+                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
+                     getValuesFieldBuilder() : null;
+              } else {
+                valuesBuilder_.addAllMessages(other.values_);
+              }
+            }
+          }
+          if (other.hasExtent()) {
+            setExtent(other.getExtent());
+          }
+          this.mergeExtensionFields(other);
+          this.mergeUnknownFields(other.getUnknownFields());
+          onChanged();
+          return this;
+        }
+
+        @java.lang.Override
+        public final boolean isInitialized() {
+          if (!hasVersion()) {
+            return false;
+          }
+          if (!hasName()) {
+            return false;
+          }
+          for (int i = 0; i < getValuesCount(); i++) {
+            if (!getValues(i).isInitialized()) {
+              return false;
+            }
+          }
+          if (!extensionsAreInitialized()) {
+            return false;
+          }
+          return true;
+        }
+
+        @java.lang.Override
+        public Builder mergeFrom(
+            com.google.protobuf.CodedInputStream input,
+            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+            throws java.io.IOException {
+          if (extensionRegistry == null) {
+            throw new java.lang.NullPointerException();
+          }
+          try {
+            boolean done = false;
+            while (!done) {
+              int tag = input.readTag();
+              switch (tag) {
+                case 0:
+                  done = true;
+                  break;
+                case 10: {
+                  name_ = input.readBytes();
+                  bitField0_ |= 0x00000002;
+                  break;
+                } // case 10
+                case 18: {
+                  vector_tile.VectorTile.Tile.Feature m =
+                      input.readMessage(
+                          vector_tile.VectorTile.Tile.Feature.PARSER,
+                          extensionRegistry);
+                  if (featuresBuilder_ == null) {
+                    ensureFeaturesIsMutable();
+                    features_.add(m);
+                  } else {
+                    featuresBuilder_.addMessage(m);
+                  }
+                  break;
+                } // case 18
+                case 26: {
+                  com.google.protobuf.ByteString bs = input.readBytes();
+                  ensureKeysIsMutable();
+                  keys_.add(bs);
+                  break;
+                } // case 26
+                case 34: {
+                  vector_tile.VectorTile.Tile.Value m =
+                      input.readMessage(
+                          vector_tile.VectorTile.Tile.Value.PARSER,
+                          extensionRegistry);
+                  if (valuesBuilder_ == null) {
+                    ensureValuesIsMutable();
+                    values_.add(m);
+                  } else {
+                    valuesBuilder_.addMessage(m);
+                  }
+                  break;
+                } // case 34
+                case 40: {
+                  extent_ = input.readUInt32();
+                  bitField0_ |= 0x00000020;
+                  break;
+                } // case 40
+                case 120: {
+                  version_ = input.readUInt32();
+                  bitField0_ |= 0x00000001;
+                  break;
+                } // case 120
+                default: {
+                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
+                    done = true; // was an endgroup tag
+                  }
+                  break;
+                } // default:
+              } // switch (tag)
+            } // while (!done)
+          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+            throw e.unwrapIOException();
+          } finally {
+            onChanged();
+          } // finally
+          return this;
+        }
+        private int bitField0_;
+
+        private int version_ = 1;
+        /**
+         * <pre>
+         * Any compliant implementation must first read the version
+         * number encoded in this message and choose the correct
+         * implementation for this version number before proceeding to
+         * decode other parts of this message.
+         * </pre>
+         *
+         * <code>required uint32 version = 15 [default = 1];</code>
+         * @return Whether the version field is set.
+         */
+        @java.lang.Override
+        public boolean hasVersion() {
+          return ((bitField0_ & 0x00000001) != 0);
+        }
+        /**
+         * <pre>
+         * Any compliant implementation must first read the version
+         * number encoded in this message and choose the correct
+         * implementation for this version number before proceeding to
+         * decode other parts of this message.
+         * </pre>
+         *
+         * <code>required uint32 version = 15 [default = 1];</code>
+         * @return The version.
+         */
+        @java.lang.Override
+        public int getVersion() {
+          return version_;
+        }
+        /**
+         * <pre>
+         * Any compliant implementation must first read the version
+         * number encoded in this message and choose the correct
+         * implementation for this version number before proceeding to
+         * decode other parts of this message.
+         * </pre>
+         *
+         * <code>required uint32 version = 15 [default = 1];</code>
+         * @param value The version to set.
+         * @return This builder for chaining.
+         */
+        public Builder setVersion(int value) {
+
+          version_ = value;
+          bitField0_ |= 0x00000001;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Any compliant implementation must first read the version
+         * number encoded in this message and choose the correct
+         * implementation for this version number before proceeding to
+         * decode other parts of this message.
+         * </pre>
+         *
+         * <code>required uint32 version = 15 [default = 1];</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearVersion() {
+          bitField0_ = (bitField0_ & ~0x00000001);
+          version_ = 1;
+          onChanged();
+          return this;
+        }
+
+        private java.lang.Object name_ = "";
+        /**
+         * <code>required string name = 1;</code>
+         * @return Whether the name field is set.
+         */
+        public boolean hasName() {
+          return ((bitField0_ & 0x00000002) != 0);
+        }
+        /**
+         * <code>required string name = 1;</code>
+         * @return The name.
+         */
+        public java.lang.String getName() {
+          java.lang.Object ref = name_;
+          if (!(ref instanceof java.lang.String)) {
+            com.google.protobuf.ByteString bs =
+                (com.google.protobuf.ByteString) ref;
+            java.lang.String s = bs.toStringUtf8();
+            if (bs.isValidUtf8()) {
+              name_ = s;
+            }
+            return s;
+          } else {
+            return (java.lang.String) ref;
+          }
+        }
+        /**
+         * <code>required string name = 1;</code>
+         * @return The bytes for name.
+         */
+        public com.google.protobuf.ByteString
+            getNameBytes() {
+          java.lang.Object ref = name_;
+          if (ref instanceof String) {
+            com.google.protobuf.ByteString b = 
+                com.google.protobuf.ByteString.copyFromUtf8(
+                    (java.lang.String) ref);
+            name_ = b;
+            return b;
+          } else {
+            return (com.google.protobuf.ByteString) ref;
+          }
+        }
+        /**
+         * <code>required string name = 1;</code>
+         * @param value The name to set.
+         * @return This builder for chaining.
+         */
+        public Builder setName(
+            java.lang.String value) {
+          if (value == null) { throw new NullPointerException(); }
+          name_ = value;
+          bitField0_ |= 0x00000002;
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>required string name = 1;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearName() {
+          name_ = getDefaultInstance().getName();
+          bitField0_ = (bitField0_ & ~0x00000002);
+          onChanged();
+          return this;
+        }
+        /**
+         * <code>required string name = 1;</code>
+         * @param value The bytes for name to set.
+         * @return This builder for chaining.
+         */
+        public Builder setNameBytes(
+            com.google.protobuf.ByteString value) {
+          if (value == null) { throw new NullPointerException(); }
+          name_ = value;
+          bitField0_ |= 0x00000002;
+          onChanged();
+          return this;
+        }
+
+        private java.util.List<vector_tile.VectorTile.Tile.Feature> features_ =
+          java.util.Collections.emptyList();
+        private void ensureFeaturesIsMutable() {
+          if (!((bitField0_ & 0x00000004) != 0)) {
+            features_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Feature>(features_);
+            bitField0_ |= 0x00000004;
+           }
+        }
+
+        private com.google.protobuf.RepeatedFieldBuilderV3<
+            vector_tile.VectorTile.Tile.Feature, vector_tile.VectorTile.Tile.Feature.Builder, vector_tile.VectorTile.Tile.FeatureOrBuilder> featuresBuilder_;
+
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public java.util.List<vector_tile.VectorTile.Tile.Feature> getFeaturesList() {
+          if (featuresBuilder_ == null) {
+            return java.util.Collections.unmodifiableList(features_);
+          } else {
+            return featuresBuilder_.getMessageList();
+          }
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public int getFeaturesCount() {
+          if (featuresBuilder_ == null) {
+            return features_.size();
+          } else {
+            return featuresBuilder_.getCount();
+          }
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public vector_tile.VectorTile.Tile.Feature getFeatures(int index) {
+          if (featuresBuilder_ == null) {
+            return features_.get(index);
+          } else {
+            return featuresBuilder_.getMessage(index);
+          }
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder setFeatures(
+            int index, vector_tile.VectorTile.Tile.Feature value) {
+          if (featuresBuilder_ == null) {
+            if (value == null) {
+              throw new NullPointerException();
+            }
+            ensureFeaturesIsMutable();
+            features_.set(index, value);
+            onChanged();
+          } else {
+            featuresBuilder_.setMessage(index, value);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder setFeatures(
+            int index, vector_tile.VectorTile.Tile.Feature.Builder builderForValue) {
+          if (featuresBuilder_ == null) {
+            ensureFeaturesIsMutable();
+            features_.set(index, builderForValue.build());
+            onChanged();
+          } else {
+            featuresBuilder_.setMessage(index, builderForValue.build());
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder addFeatures(vector_tile.VectorTile.Tile.Feature value) {
+          if (featuresBuilder_ == null) {
+            if (value == null) {
+              throw new NullPointerException();
+            }
+            ensureFeaturesIsMutable();
+            features_.add(value);
+            onChanged();
+          } else {
+            featuresBuilder_.addMessage(value);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder addFeatures(
+            int index, vector_tile.VectorTile.Tile.Feature value) {
+          if (featuresBuilder_ == null) {
+            if (value == null) {
+              throw new NullPointerException();
+            }
+            ensureFeaturesIsMutable();
+            features_.add(index, value);
+            onChanged();
+          } else {
+            featuresBuilder_.addMessage(index, value);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder addFeatures(
+            vector_tile.VectorTile.Tile.Feature.Builder builderForValue) {
+          if (featuresBuilder_ == null) {
+            ensureFeaturesIsMutable();
+            features_.add(builderForValue.build());
+            onChanged();
+          } else {
+            featuresBuilder_.addMessage(builderForValue.build());
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder addFeatures(
+            int index, vector_tile.VectorTile.Tile.Feature.Builder builderForValue) {
+          if (featuresBuilder_ == null) {
+            ensureFeaturesIsMutable();
+            features_.add(index, builderForValue.build());
+            onChanged();
+          } else {
+            featuresBuilder_.addMessage(index, builderForValue.build());
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder addAllFeatures(
+            java.lang.Iterable<? extends vector_tile.VectorTile.Tile.Feature> values) {
+          if (featuresBuilder_ == null) {
+            ensureFeaturesIsMutable();
+            com.google.protobuf.AbstractMessageLite.Builder.addAll(
+                values, features_);
+            onChanged();
+          } else {
+            featuresBuilder_.addAllMessages(values);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder clearFeatures() {
+          if (featuresBuilder_ == null) {
+            features_ = java.util.Collections.emptyList();
+            bitField0_ = (bitField0_ & ~0x00000004);
+            onChanged();
+          } else {
+            featuresBuilder_.clear();
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public Builder removeFeatures(int index) {
+          if (featuresBuilder_ == null) {
+            ensureFeaturesIsMutable();
+            features_.remove(index);
+            onChanged();
+          } else {
+            featuresBuilder_.remove(index);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public vector_tile.VectorTile.Tile.Feature.Builder getFeaturesBuilder(
+            int index) {
+          return getFeaturesFieldBuilder().getBuilder(index);
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public vector_tile.VectorTile.Tile.FeatureOrBuilder getFeaturesOrBuilder(
+            int index) {
+          if (featuresBuilder_ == null) {
+            return features_.get(index);  } else {
+            return featuresBuilder_.getMessageOrBuilder(index);
+          }
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public java.util.List<? extends vector_tile.VectorTile.Tile.FeatureOrBuilder> 
+             getFeaturesOrBuilderList() {
+          if (featuresBuilder_ != null) {
+            return featuresBuilder_.getMessageOrBuilderList();
+          } else {
+            return java.util.Collections.unmodifiableList(features_);
+          }
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public vector_tile.VectorTile.Tile.Feature.Builder addFeaturesBuilder() {
+          return getFeaturesFieldBuilder().addBuilder(
+              vector_tile.VectorTile.Tile.Feature.getDefaultInstance());
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public vector_tile.VectorTile.Tile.Feature.Builder addFeaturesBuilder(
+            int index) {
+          return getFeaturesFieldBuilder().addBuilder(
+              index, vector_tile.VectorTile.Tile.Feature.getDefaultInstance());
+        }
+        /**
+         * <pre>
+         * The actual features in this tile.
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Feature features = 2;</code>
+         */
+        public java.util.List<vector_tile.VectorTile.Tile.Feature.Builder> 
+             getFeaturesBuilderList() {
+          return getFeaturesFieldBuilder().getBuilderList();
+        }
+        private com.google.protobuf.RepeatedFieldBuilderV3<
+            vector_tile.VectorTile.Tile.Feature, vector_tile.VectorTile.Tile.Feature.Builder, vector_tile.VectorTile.Tile.FeatureOrBuilder> 
+            getFeaturesFieldBuilder() {
+          if (featuresBuilder_ == null) {
+            featuresBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
+                vector_tile.VectorTile.Tile.Feature, vector_tile.VectorTile.Tile.Feature.Builder, vector_tile.VectorTile.Tile.FeatureOrBuilder>(
+                    features_,
+                    ((bitField0_ & 0x00000004) != 0),
+                    getParentForChildren(),
+                    isClean());
+            features_ = null;
+          }
+          return featuresBuilder_;
+        }
+
+        private com.google.protobuf.LazyStringArrayList keys_ =
+            com.google.protobuf.LazyStringArrayList.emptyList();
+        private void ensureKeysIsMutable() {
+          if (!keys_.isModifiable()) {
+            keys_ = new com.google.protobuf.LazyStringArrayList(keys_);
+          }
+          bitField0_ |= 0x00000008;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @return A list containing the keys.
+         */
+        public com.google.protobuf.ProtocolStringList
+            getKeysList() {
+          keys_.makeImmutable();
+          return keys_;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @return The count of keys.
+         */
+        public int getKeysCount() {
+          return keys_.size();
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @param index The index of the element to return.
+         * @return The keys at the given index.
+         */
+        public java.lang.String getKeys(int index) {
+          return keys_.get(index);
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @param index The index of the value to return.
+         * @return The bytes of the keys at the given index.
+         */
+        public com.google.protobuf.ByteString
+            getKeysBytes(int index) {
+          return keys_.getByteString(index);
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @param index The index to set the value at.
+         * @param value The keys to set.
+         * @return This builder for chaining.
+         */
+        public Builder setKeys(
+            int index, java.lang.String value) {
+          if (value == null) { throw new NullPointerException(); }
+          ensureKeysIsMutable();
+          keys_.set(index, value);
+          bitField0_ |= 0x00000008;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @param value The keys to add.
+         * @return This builder for chaining.
+         */
+        public Builder addKeys(
+            java.lang.String value) {
+          if (value == null) { throw new NullPointerException(); }
+          ensureKeysIsMutable();
+          keys_.add(value);
+          bitField0_ |= 0x00000008;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @param values The keys to add.
+         * @return This builder for chaining.
+         */
+        public Builder addAllKeys(
+            java.lang.Iterable<java.lang.String> values) {
+          ensureKeysIsMutable();
+          com.google.protobuf.AbstractMessageLite.Builder.addAll(
+              values, keys_);
+          bitField0_ |= 0x00000008;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearKeys() {
+          keys_ =
+            com.google.protobuf.LazyStringArrayList.emptyList();
+          bitField0_ = (bitField0_ & ~0x00000008);;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for keys
+         * </pre>
+         *
+         * <code>repeated string keys = 3;</code>
+         * @param value The bytes of the keys to add.
+         * @return This builder for chaining.
+         */
+        public Builder addKeysBytes(
+            com.google.protobuf.ByteString value) {
+          if (value == null) { throw new NullPointerException(); }
+          ensureKeysIsMutable();
+          keys_.add(value);
+          bitField0_ |= 0x00000008;
+          onChanged();
+          return this;
+        }
+
+        private java.util.List<vector_tile.VectorTile.Tile.Value> values_ =
+          java.util.Collections.emptyList();
+        private void ensureValuesIsMutable() {
+          if (!((bitField0_ & 0x00000010) != 0)) {
+            values_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Value>(values_);
+            bitField0_ |= 0x00000010;
+           }
+        }
+
+        private com.google.protobuf.RepeatedFieldBuilderV3<
+            vector_tile.VectorTile.Tile.Value, vector_tile.VectorTile.Tile.Value.Builder, vector_tile.VectorTile.Tile.ValueOrBuilder> valuesBuilder_;
+
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public java.util.List<vector_tile.VectorTile.Tile.Value> getValuesList() {
+          if (valuesBuilder_ == null) {
+            return java.util.Collections.unmodifiableList(values_);
+          } else {
+            return valuesBuilder_.getMessageList();
+          }
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public int getValuesCount() {
+          if (valuesBuilder_ == null) {
+            return values_.size();
+          } else {
+            return valuesBuilder_.getCount();
+          }
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public vector_tile.VectorTile.Tile.Value getValues(int index) {
+          if (valuesBuilder_ == null) {
+            return values_.get(index);
+          } else {
+            return valuesBuilder_.getMessage(index);
+          }
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder setValues(
+            int index, vector_tile.VectorTile.Tile.Value value) {
+          if (valuesBuilder_ == null) {
+            if (value == null) {
+              throw new NullPointerException();
+            }
+            ensureValuesIsMutable();
+            values_.set(index, value);
+            onChanged();
+          } else {
+            valuesBuilder_.setMessage(index, value);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder setValues(
+            int index, vector_tile.VectorTile.Tile.Value.Builder builderForValue) {
+          if (valuesBuilder_ == null) {
+            ensureValuesIsMutable();
+            values_.set(index, builderForValue.build());
+            onChanged();
+          } else {
+            valuesBuilder_.setMessage(index, builderForValue.build());
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder addValues(vector_tile.VectorTile.Tile.Value value) {
+          if (valuesBuilder_ == null) {
+            if (value == null) {
+              throw new NullPointerException();
+            }
+            ensureValuesIsMutable();
+            values_.add(value);
+            onChanged();
+          } else {
+            valuesBuilder_.addMessage(value);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder addValues(
+            int index, vector_tile.VectorTile.Tile.Value value) {
+          if (valuesBuilder_ == null) {
+            if (value == null) {
+              throw new NullPointerException();
+            }
+            ensureValuesIsMutable();
+            values_.add(index, value);
+            onChanged();
+          } else {
+            valuesBuilder_.addMessage(index, value);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder addValues(
+            vector_tile.VectorTile.Tile.Value.Builder builderForValue) {
+          if (valuesBuilder_ == null) {
+            ensureValuesIsMutable();
+            values_.add(builderForValue.build());
+            onChanged();
+          } else {
+            valuesBuilder_.addMessage(builderForValue.build());
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder addValues(
+            int index, vector_tile.VectorTile.Tile.Value.Builder builderForValue) {
+          if (valuesBuilder_ == null) {
+            ensureValuesIsMutable();
+            values_.add(index, builderForValue.build());
+            onChanged();
+          } else {
+            valuesBuilder_.addMessage(index, builderForValue.build());
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder addAllValues(
+            java.lang.Iterable<? extends vector_tile.VectorTile.Tile.Value> values) {
+          if (valuesBuilder_ == null) {
+            ensureValuesIsMutable();
+            com.google.protobuf.AbstractMessageLite.Builder.addAll(
+                values, values_);
+            onChanged();
+          } else {
+            valuesBuilder_.addAllMessages(values);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder clearValues() {
+          if (valuesBuilder_ == null) {
+            values_ = java.util.Collections.emptyList();
+            bitField0_ = (bitField0_ & ~0x00000010);
+            onChanged();
+          } else {
+            valuesBuilder_.clear();
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public Builder removeValues(int index) {
+          if (valuesBuilder_ == null) {
+            ensureValuesIsMutable();
+            values_.remove(index);
+            onChanged();
+          } else {
+            valuesBuilder_.remove(index);
+          }
+          return this;
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public vector_tile.VectorTile.Tile.Value.Builder getValuesBuilder(
+            int index) {
+          return getValuesFieldBuilder().getBuilder(index);
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public vector_tile.VectorTile.Tile.ValueOrBuilder getValuesOrBuilder(
+            int index) {
+          if (valuesBuilder_ == null) {
+            return values_.get(index);  } else {
+            return valuesBuilder_.getMessageOrBuilder(index);
+          }
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public java.util.List<? extends vector_tile.VectorTile.Tile.ValueOrBuilder> 
+             getValuesOrBuilderList() {
+          if (valuesBuilder_ != null) {
+            return valuesBuilder_.getMessageOrBuilderList();
+          } else {
+            return java.util.Collections.unmodifiableList(values_);
+          }
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public vector_tile.VectorTile.Tile.Value.Builder addValuesBuilder() {
+          return getValuesFieldBuilder().addBuilder(
+              vector_tile.VectorTile.Tile.Value.getDefaultInstance());
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public vector_tile.VectorTile.Tile.Value.Builder addValuesBuilder(
+            int index) {
+          return getValuesFieldBuilder().addBuilder(
+              index, vector_tile.VectorTile.Tile.Value.getDefaultInstance());
+        }
+        /**
+         * <pre>
+         * Dictionary encoding for values
+         * </pre>
+         *
+         * <code>repeated .vector_tile.Tile.Value values = 4;</code>
+         */
+        public java.util.List<vector_tile.VectorTile.Tile.Value.Builder> 
+             getValuesBuilderList() {
+          return getValuesFieldBuilder().getBuilderList();
+        }
+        private com.google.protobuf.RepeatedFieldBuilderV3<
+            vector_tile.VectorTile.Tile.Value, vector_tile.VectorTile.Tile.Value.Builder, vector_tile.VectorTile.Tile.ValueOrBuilder> 
+            getValuesFieldBuilder() {
+          if (valuesBuilder_ == null) {
+            valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
+                vector_tile.VectorTile.Tile.Value, vector_tile.VectorTile.Tile.Value.Builder, vector_tile.VectorTile.Tile.ValueOrBuilder>(
+                    values_,
+                    ((bitField0_ & 0x00000010) != 0),
+                    getParentForChildren(),
+                    isClean());
+            values_ = null;
+          }
+          return valuesBuilder_;
+        }
+
+        private int extent_ = 4096;
+        /**
+         * <pre>
+         * Although this is an "optional" field it is required by the specification.
+         * See https://github.com/mapbox/vector-tile-spec/issues/47
+         * </pre>
+         *
+         * <code>optional uint32 extent = 5 [default = 4096];</code>
+         * @return Whether the extent field is set.
+         */
+        @java.lang.Override
+        public boolean hasExtent() {
+          return ((bitField0_ & 0x00000020) != 0);
+        }
+        /**
+         * <pre>
+         * Although this is an "optional" field it is required by the specification.
+         * See https://github.com/mapbox/vector-tile-spec/issues/47
+         * </pre>
+         *
+         * <code>optional uint32 extent = 5 [default = 4096];</code>
+         * @return The extent.
+         */
+        @java.lang.Override
+        public int getExtent() {
+          return extent_;
+        }
+        /**
+         * <pre>
+         * Although this is an "optional" field it is required by the specification.
+         * See https://github.com/mapbox/vector-tile-spec/issues/47
+         * </pre>
+         *
+         * <code>optional uint32 extent = 5 [default = 4096];</code>
+         * @param value The extent to set.
+         * @return This builder for chaining.
+         */
+        public Builder setExtent(int value) {
+
+          extent_ = value;
+          bitField0_ |= 0x00000020;
+          onChanged();
+          return this;
+        }
+        /**
+         * <pre>
+         * Although this is an "optional" field it is required by the specification.
+         * See https://github.com/mapbox/vector-tile-spec/issues/47
+         * </pre>
+         *
+         * <code>optional uint32 extent = 5 [default = 4096];</code>
+         * @return This builder for chaining.
+         */
+        public Builder clearExtent() {
+          bitField0_ = (bitField0_ & ~0x00000020);
+          extent_ = 4096;
+          onChanged();
+          return this;
+        }
+        @java.lang.Override
+        public final Builder setUnknownFields(
+            final com.google.protobuf.UnknownFieldSet unknownFields) {
+          return super.setUnknownFields(unknownFields);
+        }
+
+        @java.lang.Override
+        public final Builder mergeUnknownFields(
+            final com.google.protobuf.UnknownFieldSet unknownFields) {
+          return super.mergeUnknownFields(unknownFields);
+        }
+
+
+        // @@protoc_insertion_point(builder_scope:vector_tile.Tile.Layer)
+      }
+
+      // @@protoc_insertion_point(class_scope:vector_tile.Tile.Layer)
+      private static final vector_tile.VectorTile.Tile.Layer DEFAULT_INSTANCE;
+      static {
+        DEFAULT_INSTANCE = new vector_tile.VectorTile.Tile.Layer();
+      }
+
+      public static vector_tile.VectorTile.Tile.Layer getDefaultInstance() {
+        return DEFAULT_INSTANCE;
+      }
+
+      @java.lang.Deprecated public static final com.google.protobuf.Parser<Layer>
+          PARSER = new com.google.protobuf.AbstractParser<Layer>() {
+        @java.lang.Override
+        public Layer parsePartialFrom(
+            com.google.protobuf.CodedInputStream input,
+            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+            throws com.google.protobuf.InvalidProtocolBufferException {
+          Builder builder = newBuilder();
+          try {
+            builder.mergeFrom(input, extensionRegistry);
+          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+            throw e.setUnfinishedMessage(builder.buildPartial());
+          } catch (com.google.protobuf.UninitializedMessageException e) {
+            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
+          } catch (java.io.IOException e) {
+            throw new com.google.protobuf.InvalidProtocolBufferException(e)
+                .setUnfinishedMessage(builder.buildPartial());
+          }
+          return builder.buildPartial();
+        }
+      };
+
+      public static com.google.protobuf.Parser<Layer> parser() {
+        return PARSER;
+      }
+
+      @java.lang.Override
+      public com.google.protobuf.Parser<Layer> getParserForType() {
+        return PARSER;
+      }
+
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile.Layer getDefaultInstanceForType() {
+        return DEFAULT_INSTANCE;
+      }
+
+    }
+
+    public static final int LAYERS_FIELD_NUMBER = 3;
+    @SuppressWarnings("serial")
+    private java.util.List<vector_tile.VectorTile.Tile.Layer> layers_;
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    @java.lang.Override
+    public java.util.List<vector_tile.VectorTile.Tile.Layer> getLayersList() {
+      return layers_;
+    }
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    @java.lang.Override
+    public java.util.List<? extends vector_tile.VectorTile.Tile.LayerOrBuilder> 
+        getLayersOrBuilderList() {
+      return layers_;
+    }
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    @java.lang.Override
+    public int getLayersCount() {
+      return layers_.size();
+    }
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    @java.lang.Override
+    public vector_tile.VectorTile.Tile.Layer getLayers(int index) {
+      return layers_.get(index);
+    }
+    /**
+     * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+     */
+    @java.lang.Override
+    public vector_tile.VectorTile.Tile.LayerOrBuilder getLayersOrBuilder(
+        int index) {
+      return layers_.get(index);
+    }
+
+    private byte memoizedIsInitialized = -1;
+    @java.lang.Override
+    public final boolean isInitialized() {
+      byte isInitialized = memoizedIsInitialized;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
+
+      for (int i = 0; i < getLayersCount(); i++) {
+        if (!getLayers(i).isInitialized()) {
+          memoizedIsInitialized = 0;
+          return false;
+        }
+      }
+      if (!extensionsAreInitialized()) {
+        memoizedIsInitialized = 0;
+        return false;
+      }
+      memoizedIsInitialized = 1;
+      return true;
+    }
+
+    @java.lang.Override
+    public void writeTo(com.google.protobuf.CodedOutputStream output)
+                        throws java.io.IOException {
+      com.google.protobuf.GeneratedMessageV3
+        .ExtendableMessage<vector_tile.VectorTile.Tile>.ExtensionWriter
+          extensionWriter = newExtensionWriter();
+      for (int i = 0; i < layers_.size(); i++) {
+        output.writeMessage(3, layers_.get(i));
+      }
+      extensionWriter.writeUntil(8192, output);
+      getUnknownFields().writeTo(output);
+    }
+
+    @java.lang.Override
+    public int getSerializedSize() {
+      int size = memoizedSize;
+      if (size != -1) return size;
+
+      size = 0;
+      for (int i = 0; i < layers_.size(); i++) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeMessageSize(3, layers_.get(i));
+      }
+      size += extensionsSerializedSize();
+      size += getUnknownFields().getSerializedSize();
+      memoizedSize = size;
+      return size;
+    }
+
+    @java.lang.Override
+    public boolean equals(final java.lang.Object obj) {
+      if (obj == this) {
+       return true;
+      }
+      if (!(obj instanceof vector_tile.VectorTile.Tile)) {
+        return super.equals(obj);
+      }
+      vector_tile.VectorTile.Tile other = (vector_tile.VectorTile.Tile) obj;
+
+      if (!getLayersList()
+          .equals(other.getLayersList())) return false;
+      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
+      if (!getExtensionFields().equals(other.getExtensionFields()))
+        return false;
+      return true;
+    }
+
+    @java.lang.Override
+    public int hashCode() {
+      if (memoizedHashCode != 0) {
+        return memoizedHashCode;
+      }
+      int hash = 41;
+      hash = (19 * hash) + getDescriptor().hashCode();
+      if (getLayersCount() > 0) {
+        hash = (37 * hash) + LAYERS_FIELD_NUMBER;
+        hash = (53 * hash) + getLayersList().hashCode();
+      }
+      hash = hashFields(hash, getExtensionFields());
+      hash = (29 * hash) + getUnknownFields().hashCode();
+      memoizedHashCode = hash;
+      return hash;
+    }
+
+    public static vector_tile.VectorTile.Tile parseFrom(
+        java.nio.ByteBuffer data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(
+        java.nio.ByteBuffer data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(
+        com.google.protobuf.ByteString data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(
+        com.google.protobuf.ByteString data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(byte[] data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(
+        byte[] data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return com.google.protobuf.GeneratedMessageV3
+          .parseWithIOException(PARSER, input);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return com.google.protobuf.GeneratedMessageV3
+          .parseWithIOException(PARSER, input, extensionRegistry);
+    }
+
+    public static vector_tile.VectorTile.Tile parseDelimitedFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return com.google.protobuf.GeneratedMessageV3
+          .parseDelimitedWithIOException(PARSER, input);
+    }
+
+    public static vector_tile.VectorTile.Tile parseDelimitedFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return com.google.protobuf.GeneratedMessageV3
+          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(
+        com.google.protobuf.CodedInputStream input)
+        throws java.io.IOException {
+      return com.google.protobuf.GeneratedMessageV3
+          .parseWithIOException(PARSER, input);
+    }
+    public static vector_tile.VectorTile.Tile parseFrom(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return com.google.protobuf.GeneratedMessageV3
+          .parseWithIOException(PARSER, input, extensionRegistry);
+    }
+
+    @java.lang.Override
+    public Builder newBuilderForType() { return newBuilder(); }
+    public static Builder newBuilder() {
+      return DEFAULT_INSTANCE.toBuilder();
+    }
+    public static Builder newBuilder(vector_tile.VectorTile.Tile prototype) {
+      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
+    }
+    @java.lang.Override
+    public Builder toBuilder() {
+      return this == DEFAULT_INSTANCE
+          ? new Builder() : new Builder().mergeFrom(this);
+    }
+
+    @java.lang.Override
+    protected Builder newBuilderForType(
+        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
+      Builder builder = new Builder(parent);
+      return builder;
+    }
+    /**
+     * Protobuf type {@code vector_tile.Tile}
+     */
+    public static final class Builder extends
+        com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<
+          vector_tile.VectorTile.Tile, Builder> implements
+        // @@protoc_insertion_point(builder_implements:vector_tile.Tile)
+        vector_tile.VectorTile.TileOrBuilder {
+      public static final com.google.protobuf.Descriptors.Descriptor
+          getDescriptor() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_descriptor;
+      }
+
+      @java.lang.Override
+      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+          internalGetFieldAccessorTable() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_fieldAccessorTable
+            .ensureFieldAccessorsInitialized(
+                vector_tile.VectorTile.Tile.class, vector_tile.VectorTile.Tile.Builder.class);
+      }
+
+      // Construct using vector_tile.VectorTile.Tile.newBuilder()
+      private Builder() {
+
+      }
+
+      private Builder(
+          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
+        super(parent);
+
+      }
+      @java.lang.Override
+      public Builder clear() {
+        super.clear();
+        bitField0_ = 0;
+        if (layersBuilder_ == null) {
+          layers_ = java.util.Collections.emptyList();
+        } else {
+          layers_ = null;
+          layersBuilder_.clear();
+        }
+        bitField0_ = (bitField0_ & ~0x00000001);
+        return this;
+      }
+
+      @java.lang.Override
+      public com.google.protobuf.Descriptors.Descriptor
+          getDescriptorForType() {
+        return vector_tile.VectorTile.internal_static_vector_tile_Tile_descriptor;
+      }
+
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile getDefaultInstanceForType() {
+        return vector_tile.VectorTile.Tile.getDefaultInstance();
+      }
+
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile build() {
+        vector_tile.VectorTile.Tile result = buildPartial();
+        if (!result.isInitialized()) {
+          throw newUninitializedMessageException(result);
+        }
+        return result;
+      }
+
+      @java.lang.Override
+      public vector_tile.VectorTile.Tile buildPartial() {
+        vector_tile.VectorTile.Tile result = new vector_tile.VectorTile.Tile(this);
+        buildPartialRepeatedFields(result);
+        if (bitField0_ != 0) { buildPartial0(result); }
+        onBuilt();
+        return result;
+      }
+
+      private void buildPartialRepeatedFields(vector_tile.VectorTile.Tile result) {
+        if (layersBuilder_ == null) {
+          if (((bitField0_ & 0x00000001) != 0)) {
+            layers_ = java.util.Collections.unmodifiableList(layers_);
+            bitField0_ = (bitField0_ & ~0x00000001);
+          }
+          result.layers_ = layers_;
+        } else {
+          result.layers_ = layersBuilder_.build();
+        }
+      }
+
+      private void buildPartial0(vector_tile.VectorTile.Tile result) {
+        int from_bitField0_ = bitField0_;
+      }
+
+      @java.lang.Override
+      public Builder clone() {
+        return super.clone();
+      }
+      @java.lang.Override
+      public Builder setField(
+          com.google.protobuf.Descriptors.FieldDescriptor field,
+          java.lang.Object value) {
+        return super.setField(field, value);
+      }
+      @java.lang.Override
+      public Builder clearField(
+          com.google.protobuf.Descriptors.FieldDescriptor field) {
+        return super.clearField(field);
+      }
+      @java.lang.Override
+      public Builder clearOneof(
+          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
+        return super.clearOneof(oneof);
+      }
+      @java.lang.Override
+      public Builder setRepeatedField(
+          com.google.protobuf.Descriptors.FieldDescriptor field,
+          int index, java.lang.Object value) {
+        return super.setRepeatedField(field, index, value);
+      }
+      @java.lang.Override
+      public Builder addRepeatedField(
+          com.google.protobuf.Descriptors.FieldDescriptor field,
+          java.lang.Object value) {
+        return super.addRepeatedField(field, value);
+      }
+      @java.lang.Override
+      public <Type> Builder setExtension(
+          com.google.protobuf.GeneratedMessage.GeneratedExtension<
+              vector_tile.VectorTile.Tile, Type> extension,
+          Type value) {
+        return super.setExtension(extension, value);
+      }
+      @java.lang.Override
+      public <Type> Builder setExtension(
+          com.google.protobuf.GeneratedMessage.GeneratedExtension<
+              vector_tile.VectorTile.Tile, java.util.List<Type>> extension,
+          int index, Type value) {
+        return super.setExtension(extension, index, value);
+      }
+      @java.lang.Override
+      public <Type> Builder addExtension(
+          com.google.protobuf.GeneratedMessage.GeneratedExtension<
+              vector_tile.VectorTile.Tile, java.util.List<Type>> extension,
+          Type value) {
+        return super.addExtension(extension, value);
+      }
+      @java.lang.Override
+      public <T> Builder clearExtension(
+          com.google.protobuf.GeneratedMessage.GeneratedExtension<
+              vector_tile.VectorTile.Tile, T> extension) {
+        return super.clearExtension(extension);
+      }
+      @java.lang.Override
+      public Builder mergeFrom(com.google.protobuf.Message other) {
+        if (other instanceof vector_tile.VectorTile.Tile) {
+          return mergeFrom((vector_tile.VectorTile.Tile)other);
+        } else {
+          super.mergeFrom(other);
+          return this;
+        }
+      }
+
+      public Builder mergeFrom(vector_tile.VectorTile.Tile other) {
+        if (other == vector_tile.VectorTile.Tile.getDefaultInstance()) return this;
+        if (layersBuilder_ == null) {
+          if (!other.layers_.isEmpty()) {
+            if (layers_.isEmpty()) {
+              layers_ = other.layers_;
+              bitField0_ = (bitField0_ & ~0x00000001);
+            } else {
+              ensureLayersIsMutable();
+              layers_.addAll(other.layers_);
+            }
+            onChanged();
+          }
+        } else {
+          if (!other.layers_.isEmpty()) {
+            if (layersBuilder_.isEmpty()) {
+              layersBuilder_.dispose();
+              layersBuilder_ = null;
+              layers_ = other.layers_;
+              bitField0_ = (bitField0_ & ~0x00000001);
+              layersBuilder_ = 
+                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
+                   getLayersFieldBuilder() : null;
+            } else {
+              layersBuilder_.addAllMessages(other.layers_);
+            }
+          }
+        }
+        this.mergeExtensionFields(other);
+        this.mergeUnknownFields(other.getUnknownFields());
+        onChanged();
+        return this;
+      }
+
+      @java.lang.Override
+      public final boolean isInitialized() {
+        for (int i = 0; i < getLayersCount(); i++) {
+          if (!getLayers(i).isInitialized()) {
+            return false;
+          }
+        }
+        if (!extensionsAreInitialized()) {
+          return false;
+        }
+        return true;
+      }
+
+      @java.lang.Override
+      public Builder mergeFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        if (extensionRegistry == null) {
+          throw new java.lang.NullPointerException();
+        }
+        try {
+          boolean done = false;
+          while (!done) {
+            int tag = input.readTag();
+            switch (tag) {
+              case 0:
+                done = true;
+                break;
+              case 26: {
+                vector_tile.VectorTile.Tile.Layer m =
+                    input.readMessage(
+                        vector_tile.VectorTile.Tile.Layer.PARSER,
+                        extensionRegistry);
+                if (layersBuilder_ == null) {
+                  ensureLayersIsMutable();
+                  layers_.add(m);
+                } else {
+                  layersBuilder_.addMessage(m);
+                }
+                break;
+              } // case 26
+              default: {
+                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
+                  done = true; // was an endgroup tag
+                }
+                break;
+              } // default:
+            } // switch (tag)
+          } // while (!done)
+        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+          throw e.unwrapIOException();
+        } finally {
+          onChanged();
+        } // finally
+        return this;
+      }
+      private int bitField0_;
+
+      private java.util.List<vector_tile.VectorTile.Tile.Layer> layers_ =
+        java.util.Collections.emptyList();
+      private void ensureLayersIsMutable() {
+        if (!((bitField0_ & 0x00000001) != 0)) {
+          layers_ = new java.util.ArrayList<vector_tile.VectorTile.Tile.Layer>(layers_);
+          bitField0_ |= 0x00000001;
+         }
+      }
+
+      private com.google.protobuf.RepeatedFieldBuilderV3<
+          vector_tile.VectorTile.Tile.Layer, vector_tile.VectorTile.Tile.Layer.Builder, vector_tile.VectorTile.Tile.LayerOrBuilder> layersBuilder_;
+
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public java.util.List<vector_tile.VectorTile.Tile.Layer> getLayersList() {
+        if (layersBuilder_ == null) {
+          return java.util.Collections.unmodifiableList(layers_);
+        } else {
+          return layersBuilder_.getMessageList();
+        }
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public int getLayersCount() {
+        if (layersBuilder_ == null) {
+          return layers_.size();
+        } else {
+          return layersBuilder_.getCount();
+        }
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public vector_tile.VectorTile.Tile.Layer getLayers(int index) {
+        if (layersBuilder_ == null) {
+          return layers_.get(index);
+        } else {
+          return layersBuilder_.getMessage(index);
+        }
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder setLayers(
+          int index, vector_tile.VectorTile.Tile.Layer value) {
+        if (layersBuilder_ == null) {
+          if (value == null) {
+            throw new NullPointerException();
+          }
+          ensureLayersIsMutable();
+          layers_.set(index, value);
+          onChanged();
+        } else {
+          layersBuilder_.setMessage(index, value);
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder setLayers(
+          int index, vector_tile.VectorTile.Tile.Layer.Builder builderForValue) {
+        if (layersBuilder_ == null) {
+          ensureLayersIsMutable();
+          layers_.set(index, builderForValue.build());
+          onChanged();
+        } else {
+          layersBuilder_.setMessage(index, builderForValue.build());
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder addLayers(vector_tile.VectorTile.Tile.Layer value) {
+        if (layersBuilder_ == null) {
+          if (value == null) {
+            throw new NullPointerException();
+          }
+          ensureLayersIsMutable();
+          layers_.add(value);
+          onChanged();
+        } else {
+          layersBuilder_.addMessage(value);
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder addLayers(
+          int index, vector_tile.VectorTile.Tile.Layer value) {
+        if (layersBuilder_ == null) {
+          if (value == null) {
+            throw new NullPointerException();
+          }
+          ensureLayersIsMutable();
+          layers_.add(index, value);
+          onChanged();
+        } else {
+          layersBuilder_.addMessage(index, value);
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder addLayers(
+          vector_tile.VectorTile.Tile.Layer.Builder builderForValue) {
+        if (layersBuilder_ == null) {
+          ensureLayersIsMutable();
+          layers_.add(builderForValue.build());
+          onChanged();
+        } else {
+          layersBuilder_.addMessage(builderForValue.build());
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder addLayers(
+          int index, vector_tile.VectorTile.Tile.Layer.Builder builderForValue) {
+        if (layersBuilder_ == null) {
+          ensureLayersIsMutable();
+          layers_.add(index, builderForValue.build());
+          onChanged();
+        } else {
+          layersBuilder_.addMessage(index, builderForValue.build());
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder addAllLayers(
+          java.lang.Iterable<? extends vector_tile.VectorTile.Tile.Layer> values) {
+        if (layersBuilder_ == null) {
+          ensureLayersIsMutable();
+          com.google.protobuf.AbstractMessageLite.Builder.addAll(
+              values, layers_);
+          onChanged();
+        } else {
+          layersBuilder_.addAllMessages(values);
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder clearLayers() {
+        if (layersBuilder_ == null) {
+          layers_ = java.util.Collections.emptyList();
+          bitField0_ = (bitField0_ & ~0x00000001);
+          onChanged();
+        } else {
+          layersBuilder_.clear();
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public Builder removeLayers(int index) {
+        if (layersBuilder_ == null) {
+          ensureLayersIsMutable();
+          layers_.remove(index);
+          onChanged();
+        } else {
+          layersBuilder_.remove(index);
+        }
+        return this;
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public vector_tile.VectorTile.Tile.Layer.Builder getLayersBuilder(
+          int index) {
+        return getLayersFieldBuilder().getBuilder(index);
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public vector_tile.VectorTile.Tile.LayerOrBuilder getLayersOrBuilder(
+          int index) {
+        if (layersBuilder_ == null) {
+          return layers_.get(index);  } else {
+          return layersBuilder_.getMessageOrBuilder(index);
+        }
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public java.util.List<? extends vector_tile.VectorTile.Tile.LayerOrBuilder> 
+           getLayersOrBuilderList() {
+        if (layersBuilder_ != null) {
+          return layersBuilder_.getMessageOrBuilderList();
+        } else {
+          return java.util.Collections.unmodifiableList(layers_);
+        }
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public vector_tile.VectorTile.Tile.Layer.Builder addLayersBuilder() {
+        return getLayersFieldBuilder().addBuilder(
+            vector_tile.VectorTile.Tile.Layer.getDefaultInstance());
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public vector_tile.VectorTile.Tile.Layer.Builder addLayersBuilder(
+          int index) {
+        return getLayersFieldBuilder().addBuilder(
+            index, vector_tile.VectorTile.Tile.Layer.getDefaultInstance());
+      }
+      /**
+       * <code>repeated .vector_tile.Tile.Layer layers = 3;</code>
+       */
+      public java.util.List<vector_tile.VectorTile.Tile.Layer.Builder> 
+           getLayersBuilderList() {
+        return getLayersFieldBuilder().getBuilderList();
+      }
+      private com.google.protobuf.RepeatedFieldBuilderV3<
+          vector_tile.VectorTile.Tile.Layer, vector_tile.VectorTile.Tile.Layer.Builder, vector_tile.VectorTile.Tile.LayerOrBuilder> 
+          getLayersFieldBuilder() {
+        if (layersBuilder_ == null) {
+          layersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
+              vector_tile.VectorTile.Tile.Layer, vector_tile.VectorTile.Tile.Layer.Builder, vector_tile.VectorTile.Tile.LayerOrBuilder>(
+                  layers_,
+                  ((bitField0_ & 0x00000001) != 0),
+                  getParentForChildren(),
+                  isClean());
+          layers_ = null;
+        }
+        return layersBuilder_;
+      }
+      @java.lang.Override
+      public final Builder setUnknownFields(
+          final com.google.protobuf.UnknownFieldSet unknownFields) {
+        return super.setUnknownFields(unknownFields);
+      }
+
+      @java.lang.Override
+      public final Builder mergeUnknownFields(
+          final com.google.protobuf.UnknownFieldSet unknownFields) {
+        return super.mergeUnknownFields(unknownFields);
+      }
+
+
+      // @@protoc_insertion_point(builder_scope:vector_tile.Tile)
+    }
+
+    // @@protoc_insertion_point(class_scope:vector_tile.Tile)
+    private static final vector_tile.VectorTile.Tile DEFAULT_INSTANCE;
+    static {
+      DEFAULT_INSTANCE = new vector_tile.VectorTile.Tile();
+    }
+
+    public static vector_tile.VectorTile.Tile getDefaultInstance() {
+      return DEFAULT_INSTANCE;
+    }
+
+    @java.lang.Deprecated public static final com.google.protobuf.Parser<Tile>
+        PARSER = new com.google.protobuf.AbstractParser<Tile>() {
+      @java.lang.Override
+      public Tile parsePartialFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        Builder builder = newBuilder();
+        try {
+          builder.mergeFrom(input, extensionRegistry);
+        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+          throw e.setUnfinishedMessage(builder.buildPartial());
+        } catch (com.google.protobuf.UninitializedMessageException e) {
+          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
+        } catch (java.io.IOException e) {
+          throw new com.google.protobuf.InvalidProtocolBufferException(e)
+              .setUnfinishedMessage(builder.buildPartial());
+        }
+        return builder.buildPartial();
+      }
+    };
+
+    public static com.google.protobuf.Parser<Tile> parser() {
+      return PARSER;
+    }
+
+    @java.lang.Override
+    public com.google.protobuf.Parser<Tile> getParserForType() {
+      return PARSER;
+    }
+
+    @java.lang.Override
+    public vector_tile.VectorTile.Tile getDefaultInstanceForType() {
+      return DEFAULT_INSTANCE;
+    }
+
+  }
+
+  private static final com.google.protobuf.Descriptors.Descriptor
+    internal_static_vector_tile_Tile_descriptor;
+  private static final 
+    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+      internal_static_vector_tile_Tile_fieldAccessorTable;
+  private static final com.google.protobuf.Descriptors.Descriptor
+    internal_static_vector_tile_Tile_Value_descriptor;
+  private static final 
+    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+      internal_static_vector_tile_Tile_Value_fieldAccessorTable;
+  private static final com.google.protobuf.Descriptors.Descriptor
+    internal_static_vector_tile_Tile_Feature_descriptor;
+  private static final 
+    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+      internal_static_vector_tile_Tile_Feature_fieldAccessorTable;
+  private static final com.google.protobuf.Descriptors.Descriptor
+    internal_static_vector_tile_Tile_Layer_descriptor;
+  private static final 
+    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
+      internal_static_vector_tile_Tile_Layer_fieldAccessorTable;
+
+  public static com.google.protobuf.Descriptors.FileDescriptor
+      getDescriptor() {
+    return descriptor;
+  }
+  private static  com.google.protobuf.Descriptors.FileDescriptor
+      descriptor;
+  static {
+    java.lang.String[] descriptorData = {
+      "\n\021vector_tile.proto\022\013vector_tile\"\300\004\n\004Til" +
+      "e\022\'\n\006layers\030\003 \003(\0132\027.vector_tile.Tile.Lay" +
+      "er\032\241\001\n\005Value\022\024\n\014string_value\030\001 \001(\t\022\023\n\013fl" +
+      "oat_value\030\002 \001(\002\022\024\n\014double_value\030\003 \001(\001\022\021\n" +
+      "\tint_value\030\004 \001(\003\022\022\n\nuint_value\030\005 \001(\004\022\022\n\n" +
+      "sint_value\030\006 \001(\022\022\022\n\nbool_value\030\007 \001(\010*\010\010\010" +
+      "\020\200\200\200\200\002\032s\n\007Feature\022\r\n\002id\030\001 \001(\004:\0010\022\020\n\004tags" +
+      "\030\002 \003(\rB\002\020\001\0221\n\004type\030\003 \001(\0162\032.vector_tile.T" +
+      "ile.GeomType:\007UNKNOWN\022\024\n\010geometry\030\004 \003(\rB" +
+      "\002\020\001\032\255\001\n\005Layer\022\022\n\007version\030\017 \002(\r:\0011\022\014\n\004nam" +
+      "e\030\001 \002(\t\022+\n\010features\030\002 \003(\0132\031.vector_tile." +
+      "Tile.Feature\022\014\n\004keys\030\003 \003(\t\022\'\n\006values\030\004 \003" +
+      "(\0132\027.vector_tile.Tile.Value\022\024\n\006extent\030\005 " +
+      "\001(\r:\0044096*\010\010\020\020\200\200\200\200\002\"?\n\010GeomType\022\013\n\007UNKNO" +
+      "WN\020\000\022\t\n\005POINT\020\001\022\016\n\nLINESTRING\020\002\022\013\n\007POLYG" +
+      "ON\020\003*\005\010\020\020\200@B\002H\003"
+    };
+    descriptor = com.google.protobuf.Descriptors.FileDescriptor
+      .internalBuildGeneratedFileFrom(descriptorData,
+        new com.google.protobuf.Descriptors.FileDescriptor[] {
+        });
+    internal_static_vector_tile_Tile_descriptor =
+      getDescriptor().getMessageTypes().get(0);
+    internal_static_vector_tile_Tile_fieldAccessorTable = new
+      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
+        internal_static_vector_tile_Tile_descriptor,
+        new java.lang.String[] { "Layers", });
+    internal_static_vector_tile_Tile_Value_descriptor =
+      internal_static_vector_tile_Tile_descriptor.getNestedTypes().get(0);
+    internal_static_vector_tile_Tile_Value_fieldAccessorTable = new
+      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
+        internal_static_vector_tile_Tile_Value_descriptor,
+        new java.lang.String[] { "StringValue", "FloatValue", "DoubleValue", "IntValue", "UintValue", "SintValue", "BoolValue", });
+    internal_static_vector_tile_Tile_Feature_descriptor =
+      internal_static_vector_tile_Tile_descriptor.getNestedTypes().get(1);
+    internal_static_vector_tile_Tile_Feature_fieldAccessorTable = new
+      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
+        internal_static_vector_tile_Tile_Feature_descriptor,
+        new java.lang.String[] { "Id", "Tags", "Type", "Geometry", });
+    internal_static_vector_tile_Tile_Layer_descriptor =
+      internal_static_vector_tile_Tile_descriptor.getNestedTypes().get(2);
+    internal_static_vector_tile_Tile_Layer_fieldAccessorTable = new
+      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
+        internal_static_vector_tile_Tile_Layer_descriptor,
+        new java.lang.String[] { "Version", "Name", "Features", "Keys", "Values", "Extent", });
+  }
+
+  // @@protoc_insertion_point(outer_class_scope)
+}
diff --git a/node_modules/react-native-maps/ios/.DS_Store b/node_modules/react-native-maps/ios/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMap.m b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMap.m
index 8a4215c..2063278 100644
--- a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMap.m
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMap.m
@@ -8,57 +8,62 @@
 #ifdef HAVE_GOOGLE_MAPS
 
 #import "AIRGoogleMap.h"
+#import "AIRGoogleMapCircle.h"
+#import "AIRGoogleMapHeatmap.h"
 #import "AIRGoogleMapMarker.h"
 #import "AIRGoogleMapMarkerManager.h"
+#import "AIRGoogleMapOverlay.h"
+#import "AIRGoogleMapPMTile.h"
 #import "AIRGoogleMapPolygon.h"
 #import "AIRGoogleMapPolyline.h"
-#import "AIRGoogleMapCircle.h"
-#import "AIRGoogleMapHeatmap.h"
 #import "AIRGoogleMapUrlTile.h"
 #import "AIRGoogleMapWMSTile.h"
-#import "AIRGoogleMapOverlay.h"
+#import "RCTConvert+AirMap.h"
 #import <GoogleMaps/GoogleMaps.h>
 #import <MapKit/MapKit.h>
-#import <React/UIView+React.h>
 #import <React/RCTBridge.h>
-#import "RCTConvert+AirMap.h"
+#import <React/UIView+React.h>
 #import <objc/runtime.h>
 
 #ifdef HAVE_GOOGLE_MAPS_UTILS
+#import <Google-Maps-iOS-Utils/GMUGeometryRenderer.h>
 #import <Google-Maps-iOS-Utils/GMUKMLParser.h>
 #import <Google-Maps-iOS-Utils/GMUPlacemark.h>
 #import <Google-Maps-iOS-Utils/GMUPoint.h>
-#import <Google-Maps-iOS-Utils/GMUGeometryRenderer.h>
-#define REQUIRES_GOOGLE_MAPS_UTILS(feature) do {} while (0)
+#define REQUIRES_GOOGLE_MAPS_UTILS(feature)                                    \
+  do {                                                                         \
+  } while (0)
 #else
 #define GMUKMLParser void
 #define GMUPlacemark void
-#define REQUIRES_GOOGLE_MAPS_UTILS(feature) do { \
- [NSException raise:@"ReactNativeMapsDependencyMissing" \
-             format:@"Use of " feature "requires Google-Maps-iOS-Utils, you  must install via CocoaPods to use this feature"]; \
-} while (0)
+#define REQUIRES_GOOGLE_MAPS_UTILS(feature)                                    \
+  do {                                                                         \
+    [NSException raise:@"ReactNativeMapsDependencyMissing"                     \
+                format:@"Use of " feature                                      \
+                        "requires Google-Maps-iOS-Utils, you  must install "   \
+                        "via CocoaPods to use this feature"];                  \
+  } while (0)
 #endif
 
-
 id regionAsJSON(MKCoordinateRegion region) {
   return @{
-           @"latitude": [NSNumber numberWithDouble:region.center.latitude],
-           @"longitude": [NSNumber numberWithDouble:region.center.longitude],
-           @"latitudeDelta": [NSNumber numberWithDouble:region.span.latitudeDelta],
-           @"longitudeDelta": [NSNumber numberWithDouble:region.span.longitudeDelta],
-           };
+    @"latitude" : [NSNumber numberWithDouble:region.center.latitude],
+    @"longitude" : [NSNumber numberWithDouble:region.center.longitude],
+    @"latitudeDelta" : [NSNumber numberWithDouble:region.span.latitudeDelta],
+    @"longitudeDelta" : [NSNumber numberWithDouble:region.span.longitudeDelta],
+  };
 }
 
 @interface AIRGoogleMap () <GMSIndoorDisplayDelegate>
 
 - (id)eventFromCoordinate:(CLLocationCoordinate2D)coordinate;
 
-@property (nonatomic, strong) NSMutableDictionary<NSNumber *, NSDictionary*> *origGestureRecognizersMeta;
+@property(nonatomic, strong)
+    NSMutableDictionary<NSNumber *, NSDictionary *> *origGestureRecognizersMeta;
 
 @end
 
-@implementation AIRGoogleMap
-{
+@implementation AIRGoogleMap {
   NSMutableArray<UIView *> *_reactSubviews;
   MKCoordinateRegion _initialRegion;
   MKCoordinateRegion _region;
@@ -70,8 +75,7 @@ id regionAsJSON(MKCoordinateRegion region) {
   BOOL _zoomTapEnabled;
 }
 
-- (instancetype)init
-{
+- (instancetype)init {
   if ((self = [super init])) {
     _reactSubviews = [NSMutableArray new];
     _markers = [NSMutableArray array];
@@ -83,8 +87,10 @@ id regionAsJSON(MKCoordinateRegion region) {
     _overlays = [NSMutableArray array];
     _initialCamera = nil;
     _cameraProp = nil;
-    _initialRegion = MKCoordinateRegionMake(CLLocationCoordinate2DMake(0.0, 0.0), MKCoordinateSpanMake(0.0, 0.0));
-    _region = MKCoordinateRegionMake(CLLocationCoordinate2DMake(0.0, 0.0), MKCoordinateSpanMake(0.0, 0.0));
+    _initialRegion = MKCoordinateRegionMake(
+        CLLocationCoordinate2DMake(0.0, 0.0), MKCoordinateSpanMake(0.0, 0.0));
+    _region = MKCoordinateRegionMake(CLLocationCoordinate2DMake(0.0, 0.0),
+                                     MKCoordinateSpanMake(0.0, 0.0));
     _initialRegionSet = false;
     _initialCameraSet = false;
     _didLayoutSubviews = false;
@@ -106,9 +112,7 @@ id regionAsJSON(MKCoordinateRegion region) {
 }
 
 - (void)dealloc {
-  [self removeObserver:self
-            forKeyPath:@"myLocation"
-               context:NULL];
+  [self removeObserver:self forKeyPath:@"myLocation" context:NULL];
 }
 
 - (id)eventFromCoordinate:(CLLocationCoordinate2D)coordinate {
@@ -116,52 +120,58 @@ id regionAsJSON(MKCoordinateRegion region) {
   CGPoint touchPoint = [self.projection pointForCoordinate:coordinate];
 
   return @{
-           @"coordinate": @{
-               @"latitude": @(coordinate.latitude),
-               @"longitude": @(coordinate.longitude),
-               },
-           @"position": @{
-               @"x": @(touchPoint.x),
-               @"y": @(touchPoint.y),
-               },
-           };
+    @"coordinate" : @{
+      @"latitude" : @(coordinate.latitude),
+      @"longitude" : @(coordinate.longitude),
+    },
+    @"position" : @{
+      @"x" : @(touchPoint.x),
+      @"y" : @(touchPoint.y),
+    },
+  };
 }
 
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Wobjc-missing-super-calls"
-- (void)insertReactSubview:(id<RCTComponent>)subview atIndex:(NSInteger)atIndex {
-  // Our desired API is to pass up markers/overlays as children to the mapview component.
-  // This is where we intercept them and do the appropriate underlying mapview action.
+- (void)insertReactSubview:(id<RCTComponent>)subview
+                   atIndex:(NSInteger)atIndex {
+  // Our desired API is to pass up markers/overlays as children to the mapview
+  // component. This is where we intercept them and do the appropriate
+  // underlying mapview action.
   if ([subview isKindOfClass:[AIRGoogleMapMarker class]]) {
-    AIRGoogleMapMarker *marker = (AIRGoogleMapMarker*)subview;
+    AIRGoogleMapMarker *marker = (AIRGoogleMapMarker *)subview;
     marker.realMarker.map = self;
     [self.markers addObject:marker];
   } else if ([subview isKindOfClass:[AIRGoogleMapPolygon class]]) {
-    AIRGoogleMapPolygon *polygon = (AIRGoogleMapPolygon*)subview;
+    AIRGoogleMapPolygon *polygon = (AIRGoogleMapPolygon *)subview;
     polygon.polygon.map = self;
     [self.polygons addObject:polygon];
   } else if ([subview isKindOfClass:[AIRGoogleMapPolyline class]]) {
-    AIRGoogleMapPolyline *polyline = (AIRGoogleMapPolyline*)subview;
+    AIRGoogleMapPolyline *polyline = (AIRGoogleMapPolyline *)subview;
     polyline.polyline.map = self;
     [self.polylines addObject:polyline];
   } else if ([subview isKindOfClass:[AIRGoogleMapCircle class]]) {
-    AIRGoogleMapCircle *circle = (AIRGoogleMapCircle*)subview;
+    AIRGoogleMapCircle *circle = (AIRGoogleMapCircle *)subview;
     circle.circle.map = self;
     [self.circles addObject:circle];
   } else if ([subview isKindOfClass:[AIRGoogleMapUrlTile class]]) {
-    AIRGoogleMapUrlTile *tile = (AIRGoogleMapUrlTile*)subview;
+    AIRGoogleMapUrlTile *tile = (AIRGoogleMapUrlTile *)subview;
+    tile.tileLayer.map = self;
+    [self.tiles addObject:tile];
+  } else if ([subview isKindOfClass:[AIRGoogleMapPMTile class]]) {
+    AIRGoogleMapPMTile *tile = (AIRGoogleMapPMTile *)subview;
     tile.tileLayer.map = self;
     [self.tiles addObject:tile];
   } else if ([subview isKindOfClass:[AIRGoogleMapWMSTile class]]) {
-    AIRGoogleMapWMSTile *tile = (AIRGoogleMapWMSTile*)subview;
+    AIRGoogleMapWMSTile *tile = (AIRGoogleMapWMSTile *)subview;
     tile.tileLayer.map = self;
     [self.tiles addObject:tile];
   } else if ([subview isKindOfClass:[AIRGoogleMapOverlay class]]) {
-    AIRGoogleMapOverlay *overlay = (AIRGoogleMapOverlay*)subview;
+    AIRGoogleMapOverlay *overlay = (AIRGoogleMapOverlay *)subview;
     overlay.overlay.map = self;
     [self.overlays addObject:overlay];
-  } else if ([subview isKindOfClass:[AIRGoogleMapHeatmap class]]){
-    AIRGoogleMapHeatmap *heatmap = (AIRGoogleMapHeatmap*)subview;
+  } else if ([subview isKindOfClass:[AIRGoogleMapHeatmap class]]) {
+    AIRGoogleMapHeatmap *heatmap = (AIRGoogleMapHeatmap *)subview;
     heatmap.heatmap.map = self;
     [self.heatmaps addObject:heatmap];
   } else {
@@ -170,46 +180,49 @@ id regionAsJSON(MKCoordinateRegion region) {
       [self insertReactSubview:(UIView *)childSubviews[i] atIndex:atIndex];
     }
   }
-  [_reactSubviews insertObject:(UIView *)subview atIndex:(NSUInteger) atIndex];
+  [_reactSubviews insertObject:(UIView *)subview atIndex:(NSUInteger)atIndex];
 }
 #pragma clang diagnostic pop
 
-
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Wobjc-missing-super-calls"
 - (void)removeReactSubview:(id<RCTComponent>)subview {
-  // similarly, when the children are being removed we have to do the appropriate
-  // underlying mapview action here.
+  // similarly, when the children are being removed we have to do the
+  // appropriate underlying mapview action here.
   if ([subview isKindOfClass:[AIRGoogleMapMarker class]]) {
-    AIRGoogleMapMarker *marker = (AIRGoogleMapMarker*)subview;
+    AIRGoogleMapMarker *marker = (AIRGoogleMapMarker *)subview;
     marker.realMarker.map = nil;
     [self.markers removeObject:marker];
   } else if ([subview isKindOfClass:[AIRGoogleMapPolygon class]]) {
-    AIRGoogleMapPolygon *polygon = (AIRGoogleMapPolygon*)subview;
+    AIRGoogleMapPolygon *polygon = (AIRGoogleMapPolygon *)subview;
     polygon.polygon.map = nil;
     [self.polygons removeObject:polygon];
   } else if ([subview isKindOfClass:[AIRGoogleMapPolyline class]]) {
-    AIRGoogleMapPolyline *polyline = (AIRGoogleMapPolyline*)subview;
+    AIRGoogleMapPolyline *polyline = (AIRGoogleMapPolyline *)subview;
     polyline.polyline.map = nil;
     [self.polylines removeObject:polyline];
   } else if ([subview isKindOfClass:[AIRGoogleMapCircle class]]) {
-    AIRGoogleMapCircle *circle = (AIRGoogleMapCircle*)subview;
+    AIRGoogleMapCircle *circle = (AIRGoogleMapCircle *)subview;
     circle.circle.map = nil;
     [self.circles removeObject:circle];
   } else if ([subview isKindOfClass:[AIRGoogleMapUrlTile class]]) {
-    AIRGoogleMapUrlTile *tile = (AIRGoogleMapUrlTile*)subview;
+    AIRGoogleMapUrlTile *tile = (AIRGoogleMapUrlTile *)subview;
+    tile.tileLayer.map = nil;
+    [self.tiles removeObject:tile];
+  } else if ([subview isKindOfClass:[AIRGoogleMapPMTile class]]) {
+    AIRGoogleMapPMTile *tile = (AIRGoogleMapPMTile *)subview;
     tile.tileLayer.map = nil;
     [self.tiles removeObject:tile];
   } else if ([subview isKindOfClass:[AIRGoogleMapWMSTile class]]) {
-    AIRGoogleMapWMSTile *tile = (AIRGoogleMapWMSTile*)subview;
+    AIRGoogleMapWMSTile *tile = (AIRGoogleMapWMSTile *)subview;
     tile.tileLayer.map = nil;
     [self.tiles removeObject:tile];
   } else if ([subview isKindOfClass:[AIRGoogleMapOverlay class]]) {
-    AIRGoogleMapOverlay *overlay = (AIRGoogleMapOverlay*)subview;
+    AIRGoogleMapOverlay *overlay = (AIRGoogleMapOverlay *)subview;
     overlay.overlay.map = nil;
     [self.overlays removeObject:overlay];
-  } else if ([subview isKindOfClass:[AIRGoogleMapHeatmap class]]){
-    AIRGoogleMapHeatmap *heatmap = (AIRGoogleMapHeatmap*)subview;
+  } else if ([subview isKindOfClass:[AIRGoogleMapHeatmap class]]) {
+    AIRGoogleMapHeatmap *heatmap = (AIRGoogleMapHeatmap *)subview;
     heatmap.heatmap.map = nil;
     [self.heatmaps removeObject:heatmap];
   } else {
@@ -229,84 +242,89 @@ id regionAsJSON(MKCoordinateRegion region) {
 }
 #pragma clang diagnostic pop
 
-- (NSArray *)getMapBoundaries
-{
-    GMSVisibleRegion visibleRegion = self.projection.visibleRegion;
-    GMSCoordinateBounds *bounds = [[GMSCoordinateBounds alloc] initWithRegion:visibleRegion];
+- (NSArray *)getMapBoundaries {
+  GMSVisibleRegion visibleRegion = self.projection.visibleRegion;
+  GMSCoordinateBounds *bounds =
+      [[GMSCoordinateBounds alloc] initWithRegion:visibleRegion];
 
-    CLLocationCoordinate2D northEast = bounds.northEast;
-    CLLocationCoordinate2D southWest = bounds.southWest;
+  CLLocationCoordinate2D northEast = bounds.northEast;
+  CLLocationCoordinate2D southWest = bounds.southWest;
 
-    return @[
-        @[
-            [NSNumber numberWithDouble:northEast.longitude],
-            [NSNumber numberWithDouble:northEast.latitude]
-        ],
-        @[
-            [NSNumber numberWithDouble:southWest.longitude],
-            [NSNumber numberWithDouble:southWest.latitude]
-        ]
-    ];
+  return @[
+    @[
+      [NSNumber numberWithDouble:northEast.longitude],
+      [NSNumber numberWithDouble:northEast.latitude]
+    ],
+    @[
+      [NSNumber numberWithDouble:southWest.longitude],
+      [NSNumber numberWithDouble:southWest.latitude]
+    ]
+  ];
 }
 
 - (void)layoutSubviews {
   [super layoutSubviews];
-  if(_didLayoutSubviews) return;
+  if (_didLayoutSubviews)
+    return;
   _didLayoutSubviews = true;
 
   if (_initialCamera != nil) {
     self.camera = _initialCamera;
     _initialCameraSet = true;
-  }
-  else if (_initialRegion.span.latitudeDelta != 0.0 &&
-      _initialRegion.span.longitudeDelta != 0.0) {
-    self.camera = [AIRGoogleMap makeGMSCameraPositionFromMap:self andMKCoordinateRegion:_initialRegion];
+  } else if (_initialRegion.span.latitudeDelta != 0.0 &&
+             _initialRegion.span.longitudeDelta != 0.0) {
+    self.camera = [AIRGoogleMap makeGMSCameraPositionFromMap:self
+                                       andMKCoordinateRegion:_initialRegion];
     _initialRegionSet = true;
   } else if (_region.span.latitudeDelta != 0.0 &&
-      _region.span.longitudeDelta != 0.0) {
-    self.camera = [AIRGoogleMap makeGMSCameraPositionFromMap:self andMKCoordinateRegion:_region];
+             _region.span.longitudeDelta != 0.0) {
+    self.camera = [AIRGoogleMap makeGMSCameraPositionFromMap:self
+                                       andMKCoordinateRegion:_region];
   }
 }
 
 - (void)setInitialRegion:(MKCoordinateRegion)initialRegion {
   _initialRegion = initialRegion;
-  if(!_initialRegionSet && _didLayoutSubviews){
-    self.camera = [AIRGoogleMap makeGMSCameraPositionFromMap:self andMKCoordinateRegion:initialRegion];
+  if (!_initialRegionSet && _didLayoutSubviews) {
+    self.camera = [AIRGoogleMap makeGMSCameraPositionFromMap:self
+                                       andMKCoordinateRegion:initialRegion];
     _initialRegionSet = true;
   }
 }
 
-- (void)setInitialCamera:(GMSCameraPosition*)initialCamera {
-    _initialCamera = initialCamera;
-    if(!_initialCameraSet && _didLayoutSubviews){
-      self.camera = initialCamera;
-      _initialCameraSet = true;
-    }
+- (void)setInitialCamera:(GMSCameraPosition *)initialCamera {
+  _initialCamera = initialCamera;
+  if (!_initialCameraSet && _didLayoutSubviews) {
+    self.camera = initialCamera;
+    _initialCameraSet = true;
+  }
 }
 
 - (void)setRegion:(MKCoordinateRegion)region {
-  // TODO: The JS component is repeatedly setting region unnecessarily. We might want to deal with that in here.
+  // TODO: The JS component is repeatedly setting region unnecessarily. We might
+  // want to deal with that in here.
   _region = region;
-  if(_didLayoutSubviews) {
-    self.camera = [AIRGoogleMap makeGMSCameraPositionFromMap:self  andMKCoordinateRegion:region];
+  if (_didLayoutSubviews) {
+    self.camera = [AIRGoogleMap makeGMSCameraPositionFromMap:self
+                                       andMKCoordinateRegion:region];
   }
 }
 
-- (void)setCameraProp:(GMSCameraPosition*)camera {
-    _initialCamera = camera;
-    self.camera = camera;
+- (void)setCameraProp:(GMSCameraPosition *)camera {
+  _initialCamera = camera;
+  self.camera = camera;
 }
 
 - (void)setOnMapReady:(RCTBubblingEventBlock)onMapReady {
-    _onMapReady = onMapReady;
-    if(!_didCallOnMapReady && _didPrepareMap) {
-      self.onMapReady(@{});
-      _didCallOnMapReady = true;
-    }
+  _onMapReady = onMapReady;
+  if (!_didCallOnMapReady && _didPrepareMap) {
+    self.onMapReady(@{});
+    _didCallOnMapReady = true;
+  }
 }
 
 - (void)didPrepareMap {
-  UIView* mapView = [self valueForKey:@"mapView"]; //GMSVectorMapView
+  UIView *mapView = [self valueForKey:@"mapView"]; // GMSVectorMapView
   [self overrideGestureRecognizersForView:mapView];
 
   if (!_didCallOnMapReady && self.onMapReady) {
@@ -317,22 +335,26 @@ id regionAsJSON(MKCoordinateRegion region) {
 }
 
 - (void)mapViewDidFinishTileRendering {
-  if (self.onMapLoaded) self.onMapLoaded(@{});
+  if (self.onMapLoaded)
+    self.onMapLoaded(@{});
 }
 
 - (BOOL)didTapMarker:(GMSMarker *)marker {
   AIRGMSMarker *airMarker = (AIRGMSMarker *)marker;
 
-  id event = @{@"action": @"marker-press",
-               @"id": airMarker.identifier ?: @"unknown",
-               @"coordinate": @{
-                   @"latitude": @(airMarker.position.latitude),
-                   @"longitude": @(airMarker.position.longitude)
-                   }
-               };
+  id event = @{
+    @"action" : @"marker-press",
+    @"id" : airMarker.identifier ?: @"unknown",
+    @"coordinate" : @{
+      @"latitude" : @(airMarker.position.latitude),
+      @"longitude" : @(airMarker.position.longitude)
+    }
+  };
 
-  if (airMarker.onPress) airMarker.onPress(event);
-  if (self.onMarkerPress) self.onMarkerPress(event);
+  if (airMarker.onPress)
+    airMarker.onPress(event);
+  if (self.onMarkerPress)
+    self.onMarkerPress(event);
 
   // TODO: not sure why this is necessary
   [self setSelectedMarker:marker];
@@ -342,62 +364,80 @@ id regionAsJSON(MKCoordinateRegion region) {
 - (void)didTapPolyline:(GMSOverlay *)polyline {
   AIRGMSPolyline *airPolyline = (AIRGMSPolyline *)polyline;
 
-  id event = @{@"action": @"polyline-press",
-               @"id": airPolyline.identifier ?: @"unknown",
-               };
+  id event = @{
+    @"action" : @"polyline-press",
+    @"id" : airPolyline.identifier ?: @"unknown",
+  };
 
-   if (airPolyline.onPress) airPolyline.onPress(event);
+  if (airPolyline.onPress)
+    airPolyline.onPress(event);
 }
 
 - (void)didTapPolygon:(GMSOverlay *)polygon {
-    AIRGMSPolygon *airPolygon = (AIRGMSPolygon *)polygon;
+  AIRGMSPolygon *airPolygon = (AIRGMSPolygon *)polygon;
 
-    id event = @{@"action": @"polygon-press",
-                 @"id": airPolygon.identifier ?: @"unknown",
-                 };
+  id event = @{
+    @"action" : @"polygon-press",
+    @"id" : airPolygon.identifier ?: @"unknown",
+  };
 
-    if (airPolygon.onPress) airPolygon.onPress(event);
+  if (airPolygon.onPress)
+    airPolygon.onPress(event);
 }
 
 - (void)didTapAtCoordinate:(CLLocationCoordinate2D)coordinate {
-  if (!self.onPress) return;
+  if (!self.onPress)
+    return;
   self.onPress([self eventFromCoordinate:coordinate]);
 }
 
 - (void)didLongPressAtCoordinate:(CLLocationCoordinate2D)coordinate {
-  if (!self.onLongPress) return;
+  if (!self.onLongPress)
+    return;
   self.onLongPress([self eventFromCoordinate:coordinate]);
 }
 
-- (void)didChangeCameraPosition:(GMSCameraPosition *)position isGesture:(BOOL)isGesture{
-  id event = @{@"continuous": @YES,
-               @"region": regionAsJSON([AIRGoogleMap makeGMSCameraPositionFromMap:self andGMSCameraPosition:position]),
-               @"isGesture": [NSNumber numberWithBool:isGesture],
-               };
+- (void)didChangeCameraPosition:(GMSCameraPosition *)position
+                      isGesture:(BOOL)isGesture {
+  id event = @{
+    @"continuous" : @YES,
+    @"region" :
+        regionAsJSON([AIRGoogleMap makeGMSCameraPositionFromMap:self
+                                           andGMSCameraPosition:position]),
+    @"isGesture" : [NSNumber numberWithBool:isGesture],
+  };
 
-  if (self.onChange) self.onChange(event);
+  if (self.onChange)
+    self.onChange(event);
 }
 
 - (void)didTapPOIWithPlaceID:(NSString *)placeID
                         name:(NSString *)name
                     location:(CLLocationCoordinate2D)location {
-  id event = @{@"placeId": placeID,
-               @"name": name,
-               @"coordinate": @{
-                   @"latitude": @(location.latitude),
-                   @"longitude": @(location.longitude)
-                   }
-               };
+  id event = @{
+    @"placeId" : placeID,
+    @"name" : name,
+    @"coordinate" : @{
+      @"latitude" : @(location.latitude),
+      @"longitude" : @(location.longitude)
+    }
+  };
 
-  if (self.onPoiClick) self.onPoiClick(event);
+  if (self.onPoiClick)
+    self.onPoiClick(event);
 }
 
-- (void)idleAtCameraPosition:(GMSCameraPosition *)position  isGesture:(BOOL)isGesture{
-  id event = @{@"continuous": @NO,
-               @"region": regionAsJSON([AIRGoogleMap makeGMSCameraPositionFromMap:self andGMSCameraPosition:position]),
-               @"isGesture": [NSNumber numberWithBool:isGesture],
-               };
-  if (self.onChange) self.onChange(event);  // complete
+- (void)idleAtCameraPosition:(GMSCameraPosition *)position
+                   isGesture:(BOOL)isGesture {
+  id event = @{
+    @"continuous" : @NO,
+    @"region" :
+        regionAsJSON([AIRGoogleMap makeGMSCameraPositionFromMap:self
+                                           andGMSCameraPosition:position]),
+    @"isGesture" : [NSNumber numberWithBool:isGesture],
+  };
+  if (self.onChange)
+    self.onChange(event); // complete
 }
 
 - (void)setMapPadding:(UIEdgeInsets)mapPadding {
@@ -408,35 +448,29 @@ id regionAsJSON(MKCoordinateRegion region) {
   return self.padding;
 }
 
-- (void)setPaddingAdjustmentBehaviorString:(NSString *)str
-{
-  if ([str isEqualToString:@"never"])
-  {
+- (void)setPaddingAdjustmentBehaviorString:(NSString *)str {
+  if ([str isEqualToString:@"never"]) {
     self.paddingAdjustmentBehavior = kGMSMapViewPaddingAdjustmentBehaviorNever;
-  }
-  else if ([str isEqualToString:@"automatic"])
-  {
-    self.paddingAdjustmentBehavior = kGMSMapViewPaddingAdjustmentBehaviorAutomatic;
-  }
-  else //if ([str isEqualToString:@"always"]) <-- default
+  } else if ([str isEqualToString:@"automatic"]) {
+    self.paddingAdjustmentBehavior =
+        kGMSMapViewPaddingAdjustmentBehaviorAutomatic;
+  } else // if ([str isEqualToString:@"always"]) <-- default
   {
     self.paddingAdjustmentBehavior = kGMSMapViewPaddingAdjustmentBehaviorAlways;
   }
 }
 
-- (NSString *)paddingAdjustmentBehaviorString
-{
-  switch (self.paddingAdjustmentBehavior)
-  {
-    case kGMSMapViewPaddingAdjustmentBehaviorNever:
-      return @"never";
-    case kGMSMapViewPaddingAdjustmentBehaviorAutomatic:
-      return @"automatic";
-    case kGMSMapViewPaddingAdjustmentBehaviorAlways:
-      return @"always";
-
-    default:
-      return @"unknown";
+- (NSString *)paddingAdjustmentBehaviorString {
+  switch (self.paddingAdjustmentBehavior) {
+  case kGMSMapViewPaddingAdjustmentBehaviorNever:
+    return @"never";
+  case kGMSMapViewPaddingAdjustmentBehaviorAutomatic:
+    return @"automatic";
+  case kGMSMapViewPaddingAdjustmentBehaviorAlways:
+    return @"always";
+
+  default:
+    return @"unknown";
   }
 }
 
@@ -456,8 +490,10 @@ id regionAsJSON(MKCoordinateRegion region) {
   return self.settings.zoomGestures;
 }
 
-- (void)setScrollDuringRotateOrZoomEnabled:(BOOL)enableScrollGesturesDuringRotateOrZoom {
-  self.settings.allowScrollGesturesDuringRotateOrZoom = enableScrollGesturesDuringRotateOrZoom;
+- (void)setScrollDuringRotateOrZoomEnabled:
+    (BOOL)enableScrollGesturesDuringRotateOrZoom {
+  self.settings.allowScrollGesturesDuringRotateOrZoom =
+      enableScrollGesturesDuringRotateOrZoom;
 }
 
 - (BOOL)scrollDuringRotateOrZoomEnabled {
@@ -465,11 +501,11 @@ id regionAsJSON(MKCoordinateRegion region) {
 }
 
 - (void)setZoomTapEnabled:(BOOL)zoomTapEnabled {
-    _zoomTapEnabled = zoomTapEnabled;
+  _zoomTapEnabled = zoomTapEnabled;
 }
 
 - (BOOL)zoomTapEnabled {
-    return _zoomTapEnabled;
+  return _zoomTapEnabled;
 }
 
 - (void)setRotateEnabled:(BOOL)rotateEnabled {
@@ -511,7 +547,8 @@ id regionAsJSON(MKCoordinateRegion region) {
 - (void)setCustomMapStyleString:(NSString *)customMapStyleString {
   NSError *error;
 
-  GMSMapStyle *style = [GMSMapStyle styleWithJSONString:customMapStyleString error:&error];
+  GMSMapStyle *style = [GMSMapStyle styleWithJSONString:customMapStyleString
+                                                  error:&error];
 
   if (!style) {
     NSLog(@"The style definition could not be loaded: %@", error);
@@ -541,11 +578,11 @@ id regionAsJSON(MKCoordinateRegion region) {
 }
 
 - (void)setMinZoomLevel:(CGFloat)minZoomLevel {
-  [self setMinZoom:minZoomLevel maxZoom:self.maxZoom ];
+  [self setMinZoom:minZoomLevel maxZoom:self.maxZoom];
 }
 
 - (void)setMaxZoomLevel:(CGFloat)maxZoomLevel {
-  [self setMinZoom:self.minZoom maxZoom:maxZoomLevel ];
+  [self setMinZoom:self.minZoom maxZoom:maxZoomLevel];
 }
 
 - (void)setShowsIndoors:(BOOL)showsIndoors {
@@ -564,273 +601,309 @@ id regionAsJSON(MKCoordinateRegion region) {
   return self.settings.indoorPicker;
 }
 
-+ (MKCoordinateRegion) makeGMSCameraPositionFromMap:(GMSMapView *)map andGMSCameraPosition:(GMSCameraPosition *)position {
++ (MKCoordinateRegion)makeGMSCameraPositionFromMap:(GMSMapView *)map
+                              andGMSCameraPosition:
+                                  (GMSCameraPosition *)position {
   // solution from here: http://stackoverflow.com/a/16587735/1102215
   GMSVisibleRegion visibleRegion = map.projection.visibleRegion;
-  GMSCoordinateBounds *bounds = [[GMSCoordinateBounds alloc] initWithRegion: visibleRegion];
+  GMSCoordinateBounds *bounds =
+      [[GMSCoordinateBounds alloc] initWithRegion:visibleRegion];
   CLLocationCoordinate2D center;
   CLLocationDegrees longitudeDelta;
-  CLLocationDegrees latitudeDelta = bounds.northEast.latitude - bounds.southWest.latitude;
-
-  if(bounds.northEast.longitude >= bounds.southWest.longitude) {
-    //Standard case
-    center = CLLocationCoordinate2DMake((bounds.southWest.latitude + bounds.northEast.latitude) / 2,
-                                        (bounds.southWest.longitude + bounds.northEast.longitude) / 2);
+  CLLocationDegrees latitudeDelta =
+      bounds.northEast.latitude - bounds.southWest.latitude;
+
+  if (bounds.northEast.longitude >= bounds.southWest.longitude) {
+    // Standard case
+    center = CLLocationCoordinate2DMake(
+        (bounds.southWest.latitude + bounds.northEast.latitude) / 2,
+        (bounds.southWest.longitude + bounds.northEast.longitude) / 2);
     longitudeDelta = bounds.northEast.longitude - bounds.southWest.longitude;
   } else {
-    //Region spans the international dateline
-    center = CLLocationCoordinate2DMake((bounds.southWest.latitude + bounds.northEast.latitude) / 2,
-                                        (bounds.southWest.longitude + bounds.northEast.longitude + 360) / 2);
-    longitudeDelta = bounds.northEast.longitude + 360 - bounds.southWest.longitude;
+    // Region spans the international dateline
+    center = CLLocationCoordinate2DMake(
+        (bounds.southWest.latitude + bounds.northEast.latitude) / 2,
+        (bounds.southWest.longitude + bounds.northEast.longitude + 360) / 2);
+    longitudeDelta =
+        bounds.northEast.longitude + 360 - bounds.southWest.longitude;
   }
   MKCoordinateSpan span = MKCoordinateSpanMake(latitudeDelta, longitudeDelta);
   return MKCoordinateRegionMake(center, span);
 }
 
-+ (GMSCameraPosition*) makeGMSCameraPositionFromMap:(GMSMapView *)map andMKCoordinateRegion:(MKCoordinateRegion)region {
++ (GMSCameraPosition *)makeGMSCameraPositionFromMap:(GMSMapView *)map
+                              andMKCoordinateRegion:(MKCoordinateRegion)region {
   float latitudeDelta = region.span.latitudeDelta * 0.5;
   float longitudeDelta = region.span.longitudeDelta * 0.5;
 
-  CLLocationCoordinate2D a = CLLocationCoordinate2DMake(region.center.latitude + latitudeDelta,
-                                                        region.center.longitude + longitudeDelta);
-  CLLocationCoordinate2D b = CLLocationCoordinate2DMake(region.center.latitude - latitudeDelta,
-                                                        region.center.longitude - longitudeDelta);
-  GMSCoordinateBounds *bounds = [[GMSCoordinateBounds alloc] initWithCoordinate:a coordinate:b];
+  CLLocationCoordinate2D a =
+      CLLocationCoordinate2DMake(region.center.latitude + latitudeDelta,
+                                 region.center.longitude + longitudeDelta);
+  CLLocationCoordinate2D b =
+      CLLocationCoordinate2DMake(region.center.latitude - latitudeDelta,
+                                 region.center.longitude - longitudeDelta);
+  GMSCoordinateBounds *bounds =
+      [[GMSCoordinateBounds alloc] initWithCoordinate:a coordinate:b];
   return [map cameraForBounds:bounds insets:UIEdgeInsetsZero];
 }
 
 #pragma mark - Utils
 
-- (CGRect) frameForMarker:(AIRGoogleMapMarker*) mrkView {
-    CGPoint mrkAnchor = mrkView.realMarker.groundAnchor;
-    CGPoint mrkPoint = [self.projection pointForCoordinate:mrkView.coordinate];
-    CGSize mrkSize = mrkView.realMarker.iconView ? mrkView.realMarker.iconView.bounds.size : CGSizeMake(20, 30);
-    CGRect mrkFrame = CGRectMake(mrkPoint.x, mrkPoint.y, mrkSize.width, mrkSize.height);
-    mrkFrame.origin.y -= mrkAnchor.y * mrkSize.height;
-    mrkFrame.origin.x -= mrkAnchor.x * mrkSize.width;
-    return mrkFrame;
-}
-
-- (NSDictionary*) getMarkersFramesWithOnlyVisible:(BOOL)onlyVisible {
-    NSMutableDictionary* markersFrames = [NSMutableDictionary new];
-    for (AIRGoogleMapMarker* mrkView in self.markers) {
-        CGRect frame = [self frameForMarker:mrkView];
-        CGPoint point = [self.projection pointForCoordinate:mrkView.coordinate];
-        NSDictionary* frameDict = @{
-                                    @"x": @(frame.origin.x),
-                                    @"y": @(frame.origin.y),
-                                    @"width": @(frame.size.width),
-                                    @"height": @(frame.size.height)
-                                    };
-        NSDictionary* pointDict = @{
-                                    @"x": @(point.x),
-                                    @"y": @(point.y)
-                                    };
-        NSString* k = mrkView.identifier;
-        BOOL isVisible = CGRectIntersectsRect(self.bounds, frame);
-        if (k != nil && (!onlyVisible || isVisible)) {
-            [markersFrames setObject:@{ @"frame": frameDict, @"point": pointDict } forKey:k];
-        }
+- (CGRect)frameForMarker:(AIRGoogleMapMarker *)mrkView {
+  CGPoint mrkAnchor = mrkView.realMarker.groundAnchor;
+  CGPoint mrkPoint = [self.projection pointForCoordinate:mrkView.coordinate];
+  CGSize mrkSize = mrkView.realMarker.iconView
+                       ? mrkView.realMarker.iconView.bounds.size
+                       : CGSizeMake(20, 30);
+  CGRect mrkFrame =
+      CGRectMake(mrkPoint.x, mrkPoint.y, mrkSize.width, mrkSize.height);
+  mrkFrame.origin.y -= mrkAnchor.y * mrkSize.height;
+  mrkFrame.origin.x -= mrkAnchor.x * mrkSize.width;
+  return mrkFrame;
+}
+
+- (NSDictionary *)getMarkersFramesWithOnlyVisible:(BOOL)onlyVisible {
+  NSMutableDictionary *markersFrames = [NSMutableDictionary new];
+  for (AIRGoogleMapMarker *mrkView in self.markers) {
+    CGRect frame = [self frameForMarker:mrkView];
+    CGPoint point = [self.projection pointForCoordinate:mrkView.coordinate];
+    NSDictionary *frameDict = @{
+      @"x" : @(frame.origin.x),
+      @"y" : @(frame.origin.y),
+      @"width" : @(frame.size.width),
+      @"height" : @(frame.size.height)
+    };
+    NSDictionary *pointDict = @{@"x" : @(point.x), @"y" : @(point.y)};
+    NSString *k = mrkView.identifier;
+    BOOL isVisible = CGRectIntersectsRect(self.bounds, frame);
+    if (k != nil && (!onlyVisible || isVisible)) {
+      [markersFrames setObject:@{@"frame" : frameDict, @"point" : pointDict}
+                        forKey:k];
     }
-    return markersFrames;
+  }
+  return markersFrames;
 }
 
-- (AIRGoogleMapMarker*) markerAtPoint:(CGPoint)point {
-    AIRGoogleMapMarker* mrk = nil;
-    for (AIRGoogleMapMarker* mrkView in self.markers) {
-        CGRect frame = [self frameForMarker:mrkView];
-        if (CGRectContainsPoint(frame, point)) {
-            mrk = mrkView;
-            break;
-        }
+- (AIRGoogleMapMarker *)markerAtPoint:(CGPoint)point {
+  AIRGoogleMapMarker *mrk = nil;
+  for (AIRGoogleMapMarker *mrkView in self.markers) {
+    CGRect frame = [self frameForMarker:mrkView];
+    if (CGRectContainsPoint(frame, point)) {
+      mrk = mrkView;
+      break;
     }
-    return mrk;
-}
-
--(SEL)getActionForTarget:(NSObject*)target {
-    SEL action = nil;
-    uint32_t ivarCount;
-    Ivar *ivars = class_copyIvarList([target class], &ivarCount);
-    if (ivars) {
-        for (uint32_t i = 0 ; i < ivarCount ; i++) {
-            Ivar ivar = ivars[i];
-            const char* type = ivar_getTypeEncoding(ivar);
-            const char* ivarName = ivar_getName(ivar);
-            NSString* name = [NSString stringWithCString: ivarName encoding: NSASCIIStringEncoding];
-            if (type[0] == ':' && [name isEqualToString:@"_action"]) {
-                SEL sel = ((SEL (*)(id, Ivar))object_getIvar)(target, ivar);
-                action = sel;
-                break;
-            }
-        }
+  }
+  return mrk;
+}
+
+- (SEL)getActionForTarget:(NSObject *)target {
+  SEL action = nil;
+  uint32_t ivarCount;
+  Ivar *ivars = class_copyIvarList([target class], &ivarCount);
+  if (ivars) {
+    for (uint32_t i = 0; i < ivarCount; i++) {
+      Ivar ivar = ivars[i];
+      const char *type = ivar_getTypeEncoding(ivar);
+      const char *ivarName = ivar_getName(ivar);
+      NSString *name = [NSString stringWithCString:ivarName
+                                          encoding:NSASCIIStringEncoding];
+      if (type[0] == ':' && [name isEqualToString:@"_action"]) {
+        SEL sel = ((SEL(*)(id, Ivar))object_getIvar)(target, ivar);
+        action = sel;
+        break;
+      }
     }
-    free(ivars);
-    return action;
+  }
+  free(ivars);
+  return action;
 }
 
 #pragma mark - Overrides for Callout behavior
 
--(void)overrideGestureRecognizersForView:(UIView*)view {
-    NSArray* grs = view.gestureRecognizers;
-    for (UIGestureRecognizer* gestureRecognizer in grs) {
-        NSNumber* grHash = [NSNumber numberWithUnsignedInteger:gestureRecognizer.hash];
-        if([self.origGestureRecognizersMeta objectForKey:grHash] != nil)
-            continue; //already patched
-
-        //get original handlers
-        NSArray* origTargets = [gestureRecognizer valueForKey:@"targets"];
-        NSMutableArray* origTargetsActions = [[NSMutableArray alloc] init];
-        BOOL isZoomTapGesture = NO;
-        for (NSObject* trg in origTargets) {
-            NSObject* target = [trg valueForKey:@"target"];
-            SEL action = [self getActionForTarget:trg];
-            isZoomTapGesture = [NSStringFromSelector(action) isEqualToString:@"handleZoomTapGesture:"];
-            [origTargetsActions addObject:@{
-                                            @"target": [NSValue valueWithNonretainedObject:target],
-                                            @"action": NSStringFromSelector(action)
-                                            }];
-        }
-        if (isZoomTapGesture && self.zoomTapEnabled == NO) {
-            [view removeGestureRecognizer:gestureRecognizer];
-            continue;
-        }
-
-        //replace with extendedMapGestureHandler
-        for (NSDictionary* origTargetAction in origTargetsActions) {
-            NSValue* targetValue = [origTargetAction objectForKey:@"target"];
-            NSObject* target = [targetValue nonretainedObjectValue];
-            NSString* actionString = [origTargetAction objectForKey:@"action"];
-            SEL action = NSSelectorFromString(actionString);
-            [gestureRecognizer removeTarget:target action:action];
-        }
-        [gestureRecognizer addTarget:self action:@selector(extendedMapGestureHandler:)];
+- (void)overrideGestureRecognizersForView:(UIView *)view {
+  NSArray *grs = view.gestureRecognizers;
+  for (UIGestureRecognizer *gestureRecognizer in grs) {
+    NSNumber *grHash =
+        [NSNumber numberWithUnsignedInteger:gestureRecognizer.hash];
+    if ([self.origGestureRecognizersMeta objectForKey:grHash] != nil)
+      continue; // already patched
+
+    // get original handlers
+    NSArray *origTargets = [gestureRecognizer valueForKey:@"targets"];
+    NSMutableArray *origTargetsActions = [[NSMutableArray alloc] init];
+    BOOL isZoomTapGesture = NO;
+    for (NSObject *trg in origTargets) {
+      NSObject *target = [trg valueForKey:@"target"];
+      SEL action = [self getActionForTarget:trg];
+      isZoomTapGesture = [NSStringFromSelector(action)
+          isEqualToString:@"handleZoomTapGesture:"];
+      [origTargetsActions addObject:@{
+        @"target" : [NSValue valueWithNonretainedObject:target],
+        @"action" : NSStringFromSelector(action)
+      }];
+    }
+    if (isZoomTapGesture && self.zoomTapEnabled == NO) {
+      [view removeGestureRecognizer:gestureRecognizer];
+      continue;
+    }
 
-        [self.origGestureRecognizersMeta setObject:@{@"targets": origTargetsActions}
-                                            forKey:grHash];
+    // replace with extendedMapGestureHandler
+    for (NSDictionary *origTargetAction in origTargetsActions) {
+      NSValue *targetValue = [origTargetAction objectForKey:@"target"];
+      NSObject *target = [targetValue nonretainedObjectValue];
+      NSString *actionString = [origTargetAction objectForKey:@"action"];
+      SEL action = NSSelectorFromString(actionString);
+      [gestureRecognizer removeTarget:target action:action];
     }
-}
+    [gestureRecognizer addTarget:self
+                          action:@selector(extendedMapGestureHandler:)];
 
-- (id)extendedMapGestureHandler:(UIGestureRecognizer*)gestureRecognizer {
-    NSNumber* grHash = [NSNumber numberWithUnsignedInteger:gestureRecognizer.hash];
-    UIWindow* win = [[[UIApplication sharedApplication] windows] firstObject];
-    NSObject* bubbleProvider = [self valueForKey:@"bubbleProvider"]; //GMSbubbleEntityProvider
-    CGRect bubbleAbsoluteFrame = [bubbleProvider accessibilityFrame];
-    CGRect bubbleFrame = [win convertRect:bubbleAbsoluteFrame toView:self];
-    UIView* bubbleView = [bubbleProvider valueForKey:@"view"];
+    [self.origGestureRecognizersMeta
+        setObject:@{@"targets" : origTargetsActions}
+           forKey:grHash];
+  }
+}
 
-    BOOL performOriginalActions = YES;
-    BOOL isTap = [gestureRecognizer isKindOfClass:[UITapGestureRecognizer class]] || [gestureRecognizer isMemberOfClass:[UITapGestureRecognizer class]];
-    if (isTap) {
-        BOOL isTapInsideBubble = NO;
+- (id)extendedMapGestureHandler:(UIGestureRecognizer *)gestureRecognizer {
+  NSNumber *grHash =
+      [NSNumber numberWithUnsignedInteger:gestureRecognizer.hash];
+  UIWindow *win = [[[UIApplication sharedApplication] windows] firstObject];
+  NSObject *bubbleProvider =
+      [self valueForKey:@"bubbleProvider"]; // GMSbubbleEntityProvider
+  CGRect bubbleAbsoluteFrame = [bubbleProvider accessibilityFrame];
+  CGRect bubbleFrame = [win convertRect:bubbleAbsoluteFrame toView:self];
+  UIView *bubbleView = [bubbleProvider valueForKey:@"view"];
+
+  BOOL performOriginalActions = YES;
+  BOOL isTap =
+      [gestureRecognizer isKindOfClass:[UITapGestureRecognizer class]] ||
+      [gestureRecognizer isMemberOfClass:[UITapGestureRecognizer class]];
+  if (isTap) {
+    BOOL isTapInsideBubble = NO;
     CGPoint tapPoint = CGPointZero;
     CGPoint tapPointInBubble = CGPointZero;
 
-    NSArray* touches = [gestureRecognizer valueForKey:@"touches"];
-    UITouch* oneTouch = [touches firstObject];
-    NSArray* delayedTouches = [gestureRecognizer valueForKey:@"delayedTouches"];
-    NSObject* delayedTouch = [delayedTouches firstObject]; //UIGestureDeleayedTouch
-    UITouch* tapTouch = [delayedTouch valueForKey:@"stateWhenDelayed"];
+    NSArray *touches = [gestureRecognizer valueForKey:@"touches"];
+    UITouch *oneTouch = [touches firstObject];
+    NSArray *delayedTouches = [gestureRecognizer valueForKey:@"delayedTouches"];
+    NSObject *delayedTouch =
+        [delayedTouches firstObject]; // UIGestureDeleayedTouch
+    UITouch *tapTouch = [delayedTouch valueForKey:@"stateWhenDelayed"];
     if (!tapTouch)
-        tapTouch = oneTouch;
-        tapPoint = [tapTouch locationInView:self];
-        isTapInsideBubble = tapTouch != nil && CGRectContainsPoint(bubbleFrame, tapPoint);
-        if (isTapInsideBubble) {
-            tapPointInBubble = CGPointMake(tapPoint.x - bubbleFrame.origin.x, tapPoint.y - bubbleFrame.origin.y);
+      tapTouch = oneTouch;
+    tapPoint = [tapTouch locationInView:self];
+    isTapInsideBubble =
+        tapTouch != nil && CGRectContainsPoint(bubbleFrame, tapPoint);
+    if (isTapInsideBubble) {
+      tapPointInBubble = CGPointMake(tapPoint.x - bubbleFrame.origin.x,
+                                     tapPoint.y - bubbleFrame.origin.y);
+    }
+    if (isTapInsideBubble) {
+      // find bubble's marker
+      AIRGoogleMapMarker *markerView = nil;
+      AIRGMSMarker *marker = nil;
+      for (AIRGoogleMapMarker *mrk in self.markers) {
+        if ([mrk.calloutView isEqual:bubbleView]) {
+          markerView = mrk;
+          marker = markerView.realMarker;
+          break;
         }
-        if (isTapInsideBubble) {
-            //find bubble's marker
-            AIRGoogleMapMarker* markerView = nil;
-            AIRGMSMarker* marker = nil;
-            for (AIRGoogleMapMarker* mrk in self.markers) {
-                if ([mrk.calloutView isEqual:bubbleView]) {
-                    markerView = mrk;
-                    marker = markerView.realMarker;
-                    break;
-                }
-            }
-
-            //find real tap target subview
-            UIView* realSubview = [(RCTView*)bubbleView hitTest:tapPointInBubble withEvent:nil];
-            AIRGoogleMapCalloutSubview* realPressableSubview = nil;
-            if (realSubview) {
-                UIView* tmp = realSubview;
-                while (tmp && tmp != win && tmp != bubbleView) {
-                    if ([tmp respondsToSelector:@selector(onPress)]) {
-                        realPressableSubview = (AIRGoogleMapCalloutSubview*) tmp;
-                        break;
-                    }
-                    tmp = tmp.superview;
-                }
-            }
-
-            if (markerView) {
-                BOOL isInsideCallout = [markerView.calloutView isPointInside:tapPointInBubble];
-                if (isInsideCallout) {
-                    [markerView didTapInfoWindowOfMarker:marker subview:realPressableSubview point:tapPointInBubble frame:bubbleFrame];
-                } else {
-                    AIRGoogleMapMarker* markerAtTapPoint = [self markerAtPoint:tapPoint];
-                    if (markerAtTapPoint != nil) {
-                        [self didTapMarker:markerAtTapPoint.realMarker];
-                    } else {
-                        CLLocationCoordinate2D coord = [self.projection coordinateForPoint:tapPoint];
-                        [markerView hideCalloutView];
-                        [self didTapAtCoordinate:coord];
-                    }
-                }
-
-                performOriginalActions = NO;
-            }
+      }
+
+      // find real tap target subview
+      UIView *realSubview = [(RCTView *)bubbleView hitTest:tapPointInBubble
+                                                 withEvent:nil];
+      AIRGoogleMapCalloutSubview *realPressableSubview = nil;
+      if (realSubview) {
+        UIView *tmp = realSubview;
+        while (tmp && tmp != win && tmp != bubbleView) {
+          if ([tmp respondsToSelector:@selector(onPress)]) {
+            realPressableSubview = (AIRGoogleMapCalloutSubview *)tmp;
+            break;
+          }
+          tmp = tmp.superview;
+        }
+      }
+
+      if (markerView) {
+        BOOL isInsideCallout =
+            [markerView.calloutView isPointInside:tapPointInBubble];
+        if (isInsideCallout) {
+          [markerView didTapInfoWindowOfMarker:marker
+                                       subview:realPressableSubview
+                                         point:tapPointInBubble
+                                         frame:bubbleFrame];
+        } else {
+          AIRGoogleMapMarker *markerAtTapPoint = [self markerAtPoint:tapPoint];
+          if (markerAtTapPoint != nil) {
+            [self didTapMarker:markerAtTapPoint.realMarker];
+          } else {
+            CLLocationCoordinate2D coord =
+                [self.projection coordinateForPoint:tapPoint];
+            [markerView hideCalloutView];
+            [self didTapAtCoordinate:coord];
+          }
         }
+
+        performOriginalActions = NO;
+      }
     }
+  }
 
-    if (performOriginalActions) {
-        NSDictionary* origMeta = [self.origGestureRecognizersMeta objectForKey:grHash];
-        NSDictionary* origTargets = [origMeta objectForKey:@"targets"];
-        for (NSDictionary* origTarget in origTargets) {
-            NSValue* targetValue = [origTarget objectForKey:@"target"];
-            NSObject* target = [targetValue nonretainedObjectValue];
-            NSString* actionString = [origTarget objectForKey:@"action"];
-            SEL action = NSSelectorFromString(actionString);
+  if (performOriginalActions) {
+    NSDictionary *origMeta =
+        [self.origGestureRecognizersMeta objectForKey:grHash];
+    NSDictionary *origTargets = [origMeta objectForKey:@"targets"];
+    for (NSDictionary *origTarget in origTargets) {
+      NSValue *targetValue = [origTarget objectForKey:@"target"];
+      NSObject *target = [targetValue nonretainedObjectValue];
+      NSString *actionString = [origTarget objectForKey:@"action"];
+      SEL action = NSSelectorFromString(actionString);
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored "-Warc-performSelector-leaks"
-            [target performSelector:action withObject:gestureRecognizer];
+      [target performSelector:action withObject:gestureRecognizer];
 #pragma clang diagnostic pop
-        }
     }
+  }
 
-    return nil;
+  return nil;
 }
 
-
 #pragma mark - KVO updates
 
 - (void)observeValueForKeyPath:(NSString *)keyPath
                       ofObject:(id)object
                         change:(NSDictionary *)change
                        context:(void *)context {
-  if ([keyPath isEqualToString:@"myLocation"]){
+  if ([keyPath isEqualToString:@"myLocation"]) {
     CLLocation *location = [object myLocation];
 
-    id event = @{@"coordinate": @{
-                    @"latitude": @(location.coordinate.latitude),
-                    @"longitude": @(location.coordinate.longitude),
-                    @"altitude": @(location.altitude),
-                    @"timestamp": @(location.timestamp.timeIntervalSinceReferenceDate * 1000),
-                    @"accuracy": @(location.horizontalAccuracy),
-                    @"altitudeAccuracy": @(location.verticalAccuracy),
-                    @"speed": @(location.speed),
-                    @"heading": @(location.course),
-                    }
-                };
-
-  if (self.onUserLocationChange) self.onUserLocationChange(event);
+    id event = @{
+      @"coordinate" : @{
+        @"latitude" : @(location.coordinate.latitude),
+        @"longitude" : @(location.coordinate.longitude),
+        @"altitude" : @(location.altitude),
+        @"timestamp" :
+            @(location.timestamp.timeIntervalSinceReferenceDate * 1000),
+        @"accuracy" : @(location.horizontalAccuracy),
+        @"altitudeAccuracy" : @(location.verticalAccuracy),
+        @"speed" : @(location.speed),
+        @"heading" : @(location.course),
+      }
+    };
+
+    if (self.onUserLocationChange)
+      self.onUserLocationChange(event);
   } else {
     // This message is not for me; pass it on to super.
-    [super observeValueForKeyPath:keyPath ofObject:object change:change context:context];
+    [super observeValueForKeyPath:keyPath
+                         ofObject:object
+                           change:change
+                          context:context];
   }
 }
 
-+ (NSString *)GetIconUrl:(GMUPlacemark *) marker parser:(GMUKMLParser *) parser {
++ (NSString *)GetIconUrl:(GMUPlacemark *)marker parser:(GMUKMLParser *)parser {
 #ifdef HAVE_GOOGLE_MAPS_UTILS
   if (marker.style.styleID != nil) {
     for (GMUStyle *style in parser.styles) {
@@ -842,7 +915,8 @@ id regionAsJSON(MKCoordinateRegion region) {
 
   return marker.style.iconUrl;
 #else
-    REQUIRES_GOOGLE_MAPS_UTILS("GetIconUrl:parser:"); return @"";
+  REQUIRES_GOOGLE_MAPS_UTILS("GetIconUrl:parser:");
+  return @"";
 #endif
 }
 
@@ -868,13 +942,14 @@ id regionAsJSON(MKCoordinateRegion region) {
   [parser parse];
 
   NSUInteger index = 0;
-  NSMutableArray *markers = [[NSMutableArray alloc]init];
+  NSMutableArray *markers = [[NSMutableArray alloc] init];
 
   for (GMUPlacemark *place in parser.placemarks) {
 
-    CLLocationCoordinate2D location =((GMUPoint *) place.geometry).coordinate;
+    CLLocationCoordinate2D location = ((GMUPoint *)place.geometry).coordinate;
 
-    AIRGoogleMapMarker *marker = (AIRGoogleMapMarker *)[[AIRGoogleMapMarkerManager alloc] view];
+    AIRGoogleMapMarker *marker =
+        (AIRGoogleMapMarker *)[[AIRGoogleMapMarkerManager alloc] view];
     if (!marker.bridge) {
       marker.bridge = _bridge;
     }
@@ -887,84 +962,86 @@ id regionAsJSON(MKCoordinateRegion region) {
     marker.layer.backgroundColor = [UIColor clearColor].CGColor;
     marker.layer.position = CGPointZero;
 
-    [self insertReactSubview:(UIView *) marker atIndex:index];
+    [self insertReactSubview:(UIView *)marker atIndex:index];
 
-    [markers addObject:@{@"id": marker.identifier,
-                         @"title": marker.title,
-                         @"description": marker.subtitle,
-                         @"coordinate": @{
-                             @"latitude": @(location.latitude),
-                             @"longitude": @(location.longitude)
-                             }
-                         }];
+    [markers addObject:@{
+      @"id" : marker.identifier,
+      @"title" : marker.title,
+      @"description" : marker.subtitle,
+      @"coordinate" : @{
+        @"latitude" : @(location.latitude),
+        @"longitude" : @(location.longitude)
+      }
+    }];
 
     index++;
   }
 
-  id event = @{@"markers": markers};
-  if (self.onKmlReady) self.onKmlReady(event);
+  id event = @{@"markers" : markers};
+  if (self.onKmlReady)
+    self.onKmlReady(event);
 #else
-    REQUIRES_GOOGLE_MAPS_UTILS();
+  REQUIRES_GOOGLE_MAPS_UTILS();
 #endif
 }
 
-
-- (void) didChangeActiveBuilding: (nullable GMSIndoorBuilding *) building {
-    if (!building) {
-        if (!self.onIndoorBuildingFocused) {
-            return;
-        }
-        self.onIndoorBuildingFocused(@{
-            @"IndoorBuilding": @{
-                    @"activeLevelIndex": @0,
-                    @"underground": @false,
-                    @"levels": [[NSMutableArray alloc]init]
-            }
-        });
-    }
-    NSInteger i = 0;
-    NSMutableArray *arrayLevels = [[NSMutableArray alloc]init];
-    for (GMSIndoorLevel *level in building.levels) {
-        [arrayLevels addObject: @{
-            @"index": @(i),
-            @"name" : level.name,
-            @"shortName" : level.shortName,
-        }];
-        i++;
-    }
+- (void)didChangeActiveBuilding:(nullable GMSIndoorBuilding *)building {
+  if (!building) {
     if (!self.onIndoorBuildingFocused) {
-        return;
+      return;
     }
     self.onIndoorBuildingFocused(@{
-        @"IndoorBuilding": @{
-                @"activeLevelIndex": @(building.defaultLevelIndex),
-                @"underground": @(building.underground),
-                @"levels": arrayLevels
-        }
+      @"IndoorBuilding" : @{
+        @"activeLevelIndex" : @0,
+        @"underground" : @false,
+        @"levels" : [[NSMutableArray alloc] init]
+      }
     });
+  }
+  NSInteger i = 0;
+  NSMutableArray *arrayLevels = [[NSMutableArray alloc] init];
+  for (GMSIndoorLevel *level in building.levels) {
+    [arrayLevels addObject:@{
+      @"index" : @(i),
+      @"name" : level.name,
+      @"shortName" : level.shortName,
+    }];
+    i++;
+  }
+  if (!self.onIndoorBuildingFocused) {
+    return;
+  }
+  self.onIndoorBuildingFocused(@{
+    @"IndoorBuilding" : @{
+      @"activeLevelIndex" : @(building.defaultLevelIndex),
+      @"underground" : @(building.underground),
+      @"levels" : arrayLevels
+    }
+  });
 }
 
-- (void) didChangeActiveLevel: (nullable GMSIndoorLevel *)     level {
-    if (!self.onIndoorLevelActivated || !self.indoorDisplay  || !level) {
-        return;
+- (void)didChangeActiveLevel:(nullable GMSIndoorLevel *)level {
+  if (!self.onIndoorLevelActivated || !self.indoorDisplay || !level) {
+    return;
+  }
+  NSInteger i = 0;
+  for (GMSIndoorLevel *buildingLevel in self.indoorDisplay.activeBuilding
+           .levels) {
+    if (buildingLevel.name == level.name &&
+        buildingLevel.shortName == level.shortName) {
+      break;
     }
-    NSInteger i = 0;
-    for (GMSIndoorLevel *buildingLevel in self.indoorDisplay.activeBuilding.levels) {
-        if (buildingLevel.name == level.name && buildingLevel.shortName == level.shortName) {
-            break;
-        }
-        i++;
+    i++;
+  }
+  self.onIndoorLevelActivated(@{
+    @"IndoorLevel" : @{
+      @"activeLevelIndex" : @(i),
+      @"name" : level.name,
+      @"shortName" : level.shortName
     }
-    self.onIndoorLevelActivated(@{
-        @"IndoorLevel": @{
-                @"activeLevelIndex": @(i),
-                @"name": level.name,
-                @"shortName": level.shortName
-        }
-    });
+  });
 }
 
-
 @end
 
 #endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTile.h b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTile.h
new file mode 100644
index 0000000..fe77eb4
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTile.h
@@ -0,0 +1,30 @@
+//
+//  AIRGoogleMapPMTile.h
+//
+//
+
+#ifdef HAVE_GOOGLE_MAPS
+
+#import <Foundation/Foundation.h>
+#import <GoogleMaps/GoogleMaps.h>
+#import "AIRGoogleMapPMTileOverlay.h"
+
+@interface AIRGoogleMapPMTile : UIView
+
+@property(nonatomic, strong) AIRGoogleMapPMTileOverlay *tileLayer;
+@property(nonatomic, copy) NSString *urlTemplate;
+@property(nonatomic, assign) int zIndex;
+@property(nonatomic, assign) float opacity;
+@property(nonatomic, assign) BOOL doubleTileSize;
+@property(nonatomic, assign) NSInteger maximumZ;
+@property(nonatomic, assign) NSInteger minimumZ;
+@property(nonatomic, assign) NSInteger maximumNativeZ;
+@property(nonatomic, assign) NSInteger tileSize;
+@property(nonatomic, assign) BOOL flipY;
+@property(nonatomic, assign) BOOL offlineMode;
+@property(nonatomic, copy) NSString *tileCachePath;
+@property(nonatomic, assign) NSInteger tileCacheMaxAge;
+
+@end
+
+#endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTile.m b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTile.m
new file mode 100644
index 0000000..857e3ad
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTile.m
@@ -0,0 +1,177 @@
+//
+//  AIRGoogleMapPMTile.m
+//
+//
+
+#ifdef HAVE_GOOGLE_MAPS
+
+#import "AIRGoogleMapPMTile.h"
+#import "AIRGoogleMapPMTileOverlay.h"
+#import "RCTConvert+GMSMapViewType.h"
+#import <React/RCTConvert.h>
+
+@implementation AIRGoogleMapPMTile
+
+- (id)init {
+  self = [super init];
+  _opacity = 1;
+  return self;
+}
+- (void)setZIndex:(int)zIndex {
+  _zIndex = zIndex;
+  _tileLayer.zIndex = zIndex;
+}
+
+- (void)setFlipY:(BOOL)flipY {
+  _flipY = flipY;
+  if (self.tileLayer && flipY) {
+    [self.tileLayer setFlipY:_flipY];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setTileSize:(NSInteger)tileSize {
+  _tileSize = tileSize;
+  if (self.tileLayer && tileSize) {
+    self.tileLayer.tileSize = tileSize;
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setMinimumZ:(NSInteger)minimumZ {
+  _minimumZ = minimumZ;
+  if (self.tileLayer && minimumZ) {
+    [self.tileLayer setMinimumZ:_minimumZ];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setMaximumZ:(NSInteger)maximumZ {
+  _maximumZ = maximumZ;
+  if (self.tileLayer && maximumZ) {
+    [self.tileLayer setMaximumZ:_maximumZ];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setMaximumNativeZ:(NSInteger)maximumNativeZ {
+  _maximumNativeZ = maximumNativeZ;
+  if (self.tileLayer && maximumNativeZ) {
+    [self.tileLayer setMaximumNativeZ:maximumNativeZ];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setDoubleTileSize:(BOOL)doubleTileSize {
+  if (_tileSize)
+    return;
+  // float screenTileSize =
+  //    [[UIScreen mainScreen] bounds].size.width * [UIScreen mainScreen].scale;
+  // float screenTileSize = 256 * [UIScreen mainScreen].scale;
+  // これが正解
+  float screenTileSize =
+      [[UIScreen mainScreen] nativeBounds].size.width / 256 * 256;
+
+  _tileSize = doubleTileSize ? screenTileSize / 2 : screenTileSize;
+  // NSLog(@"tileSizeA %ld", _tileSize);
+  if (self.tileLayer) {
+    self.tileLayer.tileSize = _tileSize;
+    //[self.tileLayer setTileSize:_tileSize];//上のじゃないとできない？
+    [self.tileLayer setDoubleTileSize:doubleTileSize];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setOpacity:(float)opacity {
+  _opacity = opacity;
+  if (self.tileLayer) {
+    [self.tileLayer setOpacity:opacity];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setUrlTemplate:(NSString *)urlTemplate {
+
+  _urlTemplate = urlTemplate;
+
+  //  _tileLayer = [GMSURLTileLayer tileLayerWithURLConstructor:[self
+  //  _getTileURLConstructor]];
+  AIRGoogleMapPMTileOverlay *tile =
+      [[AIRGoogleMapPMTileOverlay alloc] initWithURLTemplate:urlTemplate];
+  //[tile setTemplate:urlTemplate];
+  [tile setFlipY:_flipY];
+  [tile setMaximumZ:_maximumZ];
+  [tile setMinimumZ:_minimumZ];
+  [tile setTileSize:_tileSize];
+  [tile setDoubleTileSize:_doubleTileSize];
+  [tile setMaximumNativeZ:_maximumNativeZ];
+  [tile setZIndex:_zIndex];
+  [tile setOpacity:_opacity];
+  [tile setOfflineMode:_offlineMode];
+  [tile setTileCachePath:_tileCachePath];
+  [tile setTileCacheMaxAge:_tileCacheMaxAge];
+  _tileLayer = tile;
+}
+
+- (void)setOfflineMode:(BOOL)offlineMode {
+  _offlineMode = offlineMode;
+  if (self.tileLayer && offlineMode) {
+    self.tileLayer.offlineMode = _offlineMode;
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setTileCachePath:(NSString *)tileCachePath {
+  if (!tileCachePath)
+    return;
+  _tileCachePath = tileCachePath;
+  self.tileLayer.tileCachePath = [NSURL URLWithString:_tileCachePath];
+  [self.tileLayer clearTileCache];
+}
+
+- (void)setTileCacheMaxAge:(NSInteger)tileCacheMaxAge {
+  _tileCacheMaxAge = tileCacheMaxAge;
+  if (self.tileLayer && tileCacheMaxAge) {
+    self.tileLayer.tileCacheMaxAge = _tileCacheMaxAge;
+    [self.tileLayer clearTileCache];
+  }
+}
+
+@end
+
+// - (GMSTileURLConstructor)_getTileURLConstructor
+// {
+//   NSString *urlTemplate = self.urlTemplate;
+//   NSInteger *maximumZ = self.maximumZ;
+//   NSInteger *minimumZ = self.minimumZ;
+//   GMSTileURLConstructor urls = ^NSURL* _Nullable (NSUInteger x, NSUInteger y,
+//   NSUInteger zoom) {
+
+//     if (self.flipY == YES) {
+//       y = (1 << zoom) - y - 1;
+//     }
+
+//     NSString *url = urlTemplate;
+//     url = [url stringByReplacingOccurrencesOfString:@"{x}"
+//     withString:[NSString stringWithFormat: @"%ld", (long)x]]; url = [url
+//     stringByReplacingOccurrencesOfString:@"{y}" withString:[NSString
+//     stringWithFormat: @"%ld", (long)y]]; url = [url
+//     stringByReplacingOccurrencesOfString:@"{z}" withString:[NSString
+//     stringWithFormat: @"%ld", (long)zoom]];
+
+//    if(maximumZ && (long)zoom > (long)maximumZ) {
+//       return nil;
+//     }
+
+//     if(minimumZ && (long)zoom < (long)minimumZ) {
+//       return nil;
+//     }
+
+//     return [NSURL URLWithString:url];
+//   };
+//   return urls;
+// }
+
+// @end
+
+#endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileManager.h b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileManager.h
new file mode 100644
index 0000000..da08699
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileManager.h
@@ -0,0 +1,14 @@
+//
+//  AIRGoogleMapPMTileManager.h
+//
+//
+
+#ifdef HAVE_GOOGLE_MAPS
+
+#import <Foundation/Foundation.h>
+#import <React/RCTViewManager.h>
+
+@interface AIRGoogleMapPMTileManager : RCTViewManager
+@end
+
+#endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileManager.m b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileManager.m
new file mode 100644
index 0000000..397ceb7
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileManager.m
@@ -0,0 +1,38 @@
+//
+//  AIRGoogleMapPMTileManager.m
+//
+//
+
+#ifdef HAVE_GOOGLE_MAPS
+
+#import "AIRGoogleMapPMTileManager.h"
+#import "AIRGoogleMapPMTile.h"
+
+@interface AIRGoogleMapPMTileManager ()
+
+@end
+
+@implementation AIRGoogleMapPMTileManager
+
+RCT_EXPORT_MODULE()
+
+- (UIView *)view {
+  AIRGoogleMapPMTile *tileLayer = [AIRGoogleMapPMTile new];
+  return tileLayer;
+}
+
+RCT_EXPORT_VIEW_PROPERTY(urlTemplate, NSString)
+RCT_EXPORT_VIEW_PROPERTY(zIndex, int)
+RCT_EXPORT_VIEW_PROPERTY(opacity, float)
+RCT_EXPORT_VIEW_PROPERTY(doubleTileSize, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(maximumZ, NSInteger)
+RCT_EXPORT_VIEW_PROPERTY(minimumZ, NSInteger)
+RCT_EXPORT_VIEW_PROPERTY(maximumNativeZ, NSInteger)
+RCT_EXPORT_VIEW_PROPERTY(flipY, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(offlineMode, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(tileCachePath, NSString)
+RCT_EXPORT_VIEW_PROPERTY(tileCacheMaxAge, NSInteger)
+
+@end
+
+#endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileOverlay.h b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileOverlay.h
new file mode 100644
index 0000000..4d580f2
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileOverlay.h
@@ -0,0 +1,26 @@
+//
+//  AIRGoogleMapPMTile.h
+//
+//
+
+#ifdef HAVE_GOOGLE_MAPS
+
+#import <GoogleMaps/GoogleMaps.h>
+#import "PMTiles/PMTiles.h"
+#import "VectorTile.pbobjc.h"
+@interface AIRGoogleMapPMTileOverlay : GMSSyncTileLayer
+- (id)initWithURLTemplate:(NSString *)URLTemplate;
+@property(nonatomic, strong) PMTiles *pmtiles;
+@property(nonatomic, copy) NSString *template;
+@property(nonatomic, assign) NSInteger maximumZ;
+@property(nonatomic, assign) NSInteger minimumZ;
+@property(nonatomic) NSInteger maximumNativeZ;
+@property(nonatomic, assign) NSInteger tileSize;
+@property(nonatomic) NSInteger doubleTileSize;
+@property(nonatomic, assign) BOOL flipY;
+@property(nonatomic, assign) BOOL offlineMode;
+@property(nonatomic, copy) NSString *tileCachePath;
+@property(nonatomic, assign) NSInteger tileCacheMaxAge;
+@end
+
+#endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileOverlay.m b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileOverlay.m
new file mode 100644
index 0000000..8a7e56f
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapPMTileOverlay.m
@@ -0,0 +1,662 @@
+//
+//  AIRGoogleMapPMTile.m
+//
+//
+
+#ifdef HAVE_GOOGLE_MAPS
+
+#import "AIRGoogleMapPMTileOverlay.h"
+
+@implementation AIRGoogleMapPMTileOverlay
+- (id)initWithURLTemplate:(NSString *)URLTemplate {
+  self = [super init];
+  PMTiles *pmtiles = [[PMTiles alloc] initWithURL:URLTemplate];
+  self.pmtiles = pmtiles;
+  return self;
+}
+
+- (UIImage *)tileForX:(NSUInteger)x y:(NSUInteger)y zoom:(NSUInteger)zoom {
+  //   NSLog(@"zoomA %lf", self.map.camera.zoom);
+  //   NSLog(@"zoomB %lf", floor(self.map.camera.zoom));
+  //   NSLog(@"zoomC %ld", zoom);
+
+  //   NSLog(@"tileSizeB %ld", self.tileSize);
+  //   NSLog(@"width %.0f", [[UIScreen mainScreen] bounds].size.width);
+  //   NSLog(@"native width %.0f", [[UIScreen mainScreen]
+  //   nativeBounds].size.width); NSLog(@"scale %.0f", [UIScreen
+  //   mainScreen].scale); NSLog(@"native scale %.0f", [UIScreen
+  //   mainScreen].nativeScale);
+
+  //   int zoomDiff = zoom -　floor(self.map.camera.zoom);
+  //   NSLog(@"zoomDiff %d", zoomDiff);
+  //   zoom = zoom - zoomDiff;
+  //   x = x / pow(2, zoomDiff);
+  //   y = y / pow(2, zoomDiff);
+  // int mapZoom = floor(self.map.camera.zoom);
+  // int mapZoom = zoom;
+  if (self.maximumZ && zoom > self.maximumZ) {
+    return kGMSTileLayerNoTile;
+  }
+
+  if (self.minimumZ && zoom < self.minimumZ) {
+    return kGMSTileLayerNoTile;
+  }
+
+  int drawType = 0; // 0:original 1:high-resolution 2:overzoom
+
+  if (zoom > self.maximumNativeZ && !self.doubleTileSize) {
+    drawType = 2;
+  } else if (zoom > self.maximumNativeZ - 1 && self.doubleTileSize) {
+    drawType = 2;
+  } else if (zoom <= self.maximumNativeZ && !self.doubleTileSize) {
+    drawType = 0;
+  } else if (zoom <= self.maximumNativeZ - 1 && self.doubleTileSize) {
+    drawType = 1;
+  }
+  // NSLog(@"drawType %d,%ld,%ld", drawType,zoom,self.maximumNativeZ);
+  NSData *data;
+  if (drawType == 0 || drawType == 1) {
+    data = [self getTile:zoom x:x y:y];
+  } else if (drawType == 2) {
+    data = [self drawOverZoomTile:zoom x:x y:y minZ:self.maximumNativeZ];
+  }
+  if (!data && self.offlineMode && self.tileCachePath) {
+    NSInteger zoomLevelToStart = (zoom > self.maximumZ) ? self.maximumZ : zoom;
+    NSInteger minimumZoomToSearch = self.minimumZ >= zoomLevelToStart - 3
+                                        ? self.minimumZ
+                                        : zoomLevelToStart - 3;
+    data = [self drawOverZoomTile:(NSUInteger)zoomLevelToStart
+                                x:(NSUInteger)x
+                                y:(NSUInteger)y
+                             minZ:minimumZoomToSearch];
+  }
+  if (data) {
+    UIImage *img = [[UIImage alloc] initWithData:data];
+    return img;
+  }
+  return kGMSTileLayerNoTile;
+}
+
+- (NSData *)getTile:(NSUInteger)zoom x:(NSUInteger)x y:(NSUInteger)y {
+
+  // NSString *url = self.offlineMode && self.tileCachePath ?  [NSString
+  // stringWithFormat:@"%@%@",self.tileCachePath,@"/{z}/{x}/{y}.png"] :
+  // self.template; NSLog(@"%@", url);
+  if (self.flipY == YES) {
+    y = (1 << zoom) - y - 1;
+  }
+
+  NSString *urlXYZ = self.template;
+  urlXYZ = [urlXYZ
+      stringByReplacingOccurrencesOfString:@"{x}"
+                                withString:[NSString stringWithFormat:@"%ld",
+                                                                      (long)x]];
+  urlXYZ = [urlXYZ
+      stringByReplacingOccurrencesOfString:@"{y}"
+                                withString:[NSString stringWithFormat:@"%ld",
+                                                                      (long)y]];
+  urlXYZ = [urlXYZ
+      stringByReplacingOccurrencesOfString:@"{z}"
+                                withString:[NSString
+                                               stringWithFormat:@"%ld",
+                                                                (long)zoom]];
+  NSString *tileCacheXYZ =
+      [NSString stringWithFormat:@"%@/%ld/%ld/%ld", self.tileCachePath,
+                                 (long)zoom, (long)x, (long)y];
+  NSURL *tileCacheFileDirectory =
+      [NSURL URLWithString:[NSString stringWithFormat:@"%@/%ld/%ld/",
+                                                      self.tileCachePath,
+                                                      (long)zoom, (long)x]];
+  NSURL *tileCacheFilePath =
+      [NSURL URLWithString:(self.tileCachePath ? tileCacheXYZ : urlXYZ)];
+
+  NSString *url =
+      self.offlineMode && self.tileCachePath ? tileCacheXYZ : urlXYZ;
+  NSData *data;
+  data = [self readTileImage:tileCacheFilePath];
+  if (!data) {
+    data = [self fetchTile:zoom x:x y:y];
+    if (!data) {
+      return nil;
+    } else {
+      if (self.tileCachePath) {
+        [self writeTileImage:tileCacheFileDirectory
+            withTileCacheFilePath:tileCacheFilePath
+                     withTileData:data];
+      }
+      return data;
+    }
+  } else {
+    return data;
+  }
+}
+
+- (NSData *)readPbfData:(NSURL *)url {
+  NSError *error = nil;
+
+  // ファイルからBase64エンコードされた文字列を読み込む
+  NSString *base64String =
+      [NSString stringWithContentsOfURL:url
+                               encoding:NSUTF8StringEncoding
+                                  error:&error];
+  // エラーチェック
+  if (error) {
+    NSLog(@"Failed to read file from URL: %@", url);
+    return nil;
+  }
+  // Base64デコードを行い、NSDataを取得
+  NSData *data = [[NSData alloc]
+      initWithBase64EncodedString:base64String
+                          options:NSDataBase64DecodingIgnoreUnknownCharacters];
+  if (!data) {
+    NSLog(@"Failed to decode Base64 string");
+    return nil;
+  }
+  return data;
+}
+
+- (NSData *)readTileImage:(NSURL *)url {
+  NSError *error = nil;
+  NSData *data = [NSData dataWithContentsOfURL:url
+                                       options:NSDataReadingUncached
+                                         error:&error];
+  if (error) {
+    // NSLog(@"%@", [error localizedDescription]);
+    return nil;
+  } else {
+    return data;
+  }
+}
+
+// - (NSData *)fetchTile:(NSUInteger)zoom x:(NSUInteger)x y:(NSUInteger)y {
+//   NSData *data = [self.pmtiles getTileWithZ:zoom x:x y:y];
+
+//   return data;
+// }
+
+- (CGContextRef)createTransparentImageContext {
+  // 透明な512x512の画像を生成
+  UIGraphicsBeginImageContextWithOptions(CGSizeMake(512, 512), NO, 0.0);
+  CGContextRef context = UIGraphicsGetCurrentContext();
+
+  // 描画を透明に設定
+  CGContextSetFillColorWithColor(context, [UIColor clearColor].CGColor);
+  CGContextFillRect(context, CGRectMake(0, 0, 512, 512));
+
+  return context;
+}
+
+// 属性（Attributes）を出力し、対応する色と値を返す関数
+NSDictionary *getFeatureAttributes(Tile_Layer *layer, Tile_Feature *feature) {
+  NSMutableDictionary *attributeDict = [NSMutableDictionary dictionary];
+  NSUInteger tagsCount = feature.tagsArray_Count;
+  for (NSUInteger i = 0; i < tagsCount; i += 2) {
+    NSUInteger keyIndex = [feature.tagsArray valueAtIndex:i];
+    NSUInteger valueIndex = [feature.tagsArray valueAtIndex:i + 1];
+
+    NSString *key = layer.keysArray[keyIndex];
+    Tile_Value *valueObj = layer.valuesArray[valueIndex];
+    NSString *valueStr = @"";
+    if (valueObj.hasStringValue) {
+      valueStr = valueObj.stringValue;
+    } else if (valueObj.hasIntValue) {
+      valueStr = [NSString stringWithFormat:@"%lld", valueObj.intValue];
+    } else if (valueObj.hasFloatValue) {
+      valueStr = [NSString stringWithFormat:@"%f", valueObj.floatValue];
+    }
+    // 他の型についても同様に処理
+
+    [attributeDict setObject:valueStr forKey:key];
+  }
+  return attributeDict;
+}
+
+// getValueToUse 関数の定義
+NSString *getLabelToUse(NSDictionary *attributes, NSString *key) {
+  return attributes[key] ?: @""; // デフォルト値として空文字列を使用
+}
+
+NSMutableDictionary *colorMapping;
+// getColorToUse 関数の定義
+UIColor *getColorToUse(NSDictionary *attributes, NSString *key) {
+  NSString *valueToUse =
+      attributes[key] ?: @""; // デフォルト値として空文字列を使用
+
+  // すでに colorMapping で色が割り当てられている場合は、その色を使う
+  if (colorMapping[valueToUse]) {
+    return colorMapping[valueToUse];
+  }
+
+  // ランダムな色を生成
+  float red = (float)arc4random_uniform(256) / 255.0;
+  float green = (float)arc4random_uniform(256) / 255.0;
+  float blue = (float)arc4random_uniform(256) / 255.0;
+  UIColor *randomColor = [UIColor colorWithRed:red
+                                         green:green
+                                          blue:blue
+                                         alpha:1.0];
+  // valueToUseに基づいて色を選択
+  if ([valueToUse isEqualToString:@"28"]) {
+    randomColor = [UIColor colorWithRed:0.53 green:0.81 blue:0.98 alpha:1.0];
+  }
+  // colorMapping に保存
+  colorMapping[valueToUse] = randomColor;
+
+  return randomColor;
+}
+
+- (void)drawPointInContext:(CGContextRef)context
+                geometries:(GPBUInt32Array *)geometryArray
+                 fillColor:(UIColor *)fillColor
+                     label:(NSString *)label {
+
+  NSUInteger index = 0;
+  float cursorX = 0;
+  float cursorY = 0;
+  float scaleFactor = 512.0 / 4096.0;
+
+  // 描画設定
+  CGContextSetFillColorWithColor(context, fillColor.CGColor);
+
+  while (index < geometryArray.count) {
+    uint32_t commandInteger = [geometryArray valueAtIndex:index++];
+    uint32_t commandId = commandInteger & 0x7;
+    uint32_t commandCount = commandInteger >> 3;
+
+    if (commandId == 1) { // MoveTo
+      for (NSUInteger i = 0; i < commandCount; ++i) {
+        int32_t dx = (int32_t)(([geometryArray valueAtIndex:index++] >> 1) ^
+                               (-([geometryArray valueAtIndex:index - 1] & 1)));
+        int32_t dy = (int32_t)(([geometryArray valueAtIndex:index++] >> 1) ^
+                               (-([geometryArray valueAtIndex:index - 1] & 1)));
+
+        cursorX += dx;
+        cursorY += dy;
+
+        float scaledX = cursorX * scaleFactor;
+        float scaledY = cursorY * scaleFactor;
+
+        // 丸を描画（中心座標を考慮して調整）
+        CGContextFillEllipseInRect(
+            context, CGRectMake(scaledX - 5, scaledY - 5, 10.0, 10.0));
+      }
+    }
+  }
+}
+
+- (void)drawLineStringInContext:(CGContextRef)context
+                     geometries:(GPBUInt32Array *)geometryArray
+                      fillColor:(UIColor *)fillColor
+                          label:(NSString *)label {
+
+  NSUInteger index = 0;
+  float cursorX = 0;
+  float cursorY = 0;
+  float scaleFactor = 512.0 / 4096.0;
+
+  // 描画設定
+  CGContextSetStrokeColorWithColor(context, fillColor.CGColor);
+  CGContextSetLineWidth(context, 2);
+
+  CGContextBeginPath(context);
+
+  float totalX = 0;
+  float totalY = 0;
+  NSUInteger pointCount = 0;
+
+  while (index < geometryArray.count) {
+    uint32_t commandInteger = [geometryArray valueAtIndex:index++];
+    uint32_t commandId = commandInteger & 0x7;
+    uint32_t commandCount = commandInteger >> 3;
+
+    switch (commandId) {
+    case 1: // MoveTo
+    case 2: // LineTo
+      for (NSUInteger i = 0; i < commandCount; ++i) {
+        int32_t dx = (int32_t)(([geometryArray valueAtIndex:index++] >> 1) ^
+                               (-([geometryArray valueAtIndex:index - 1] & 1)));
+        int32_t dy = (int32_t)(([geometryArray valueAtIndex:index++] >> 1) ^
+                               (-([geometryArray valueAtIndex:index - 1] & 1)));
+
+        cursorX += dx;
+        cursorY += dy;
+
+        float scaledX = cursorX * scaleFactor;
+        float scaledY = cursorY * scaleFactor;
+
+        if (commandId == 1) {
+          CGContextMoveToPoint(context, scaledX, scaledY);
+        } else if (commandId == 2) {
+          CGContextAddLineToPoint(context, scaledX, scaledY);
+        }
+
+        totalX += scaledX;
+        totalY += scaledY;
+        pointCount++;
+      }
+      break;
+    default:
+      break;
+    }
+  }
+
+  CGContextStrokePath(context); // ラインストリングを描画
+
+  // ラインストリングの中心点を計算
+  float centerX = totalX / pointCount;
+  float centerY = totalY / pointCount;
+
+  // ラベルを描画（上のポリゴンのコードを参考にして同様に描画できます）
+}
+
+- (void)drawPolygonInContext:(CGContextRef)context
+                  geometries:(GPBUInt32Array *)geometryArray
+                   fillColor:(UIColor *)fillColor
+                       label:(NSString *)label { // ラベルを追加
+  NSUInteger index = 0;
+  float cursorX = 0;
+  float cursorY = 0;
+
+  float scaleFactor = 512.0 / 4096.0; // タイルのサイズ / extent
+
+  // 描画設定
+  CGContextSetFillColorWithColor(context, fillColor.CGColor);
+  CGContextSetStrokeColorWithColor(context, [UIColor blackColor].CGColor);
+  CGContextSetLineWidth(context, 2);
+
+  CGContextBeginPath(context); // 新しいパスの描画を始める
+
+  float totalX = 0;
+  float totalY = 0;
+  NSUInteger pointCount = 0;
+
+  while (index < geometryArray.count) {
+    uint32_t commandInteger = [geometryArray valueAtIndex:index++];
+    uint32_t commandId = commandInteger & 0x7;   // lower 3 bits
+    uint32_t commandCount = commandInteger >> 3; // higher bits
+
+    switch (commandId) {
+    case 1: // MoveTo
+      for (NSUInteger i = 0; i < commandCount; ++i) {
+        int32_t dx = (int32_t)(([geometryArray valueAtIndex:index++] >> 1) ^
+                               (-([geometryArray valueAtIndex:index - 1] & 1)));
+        int32_t dy = (int32_t)(([geometryArray valueAtIndex:index++] >> 1) ^
+                               (-([geometryArray valueAtIndex:index - 1] & 1)));
+
+        cursorX += dx;
+        cursorY += dy;
+
+        float scaledX = cursorX * scaleFactor;
+        float scaledY = cursorY * scaleFactor;
+
+        CGContextMoveToPoint(context, scaledX, scaledY);
+
+        totalX += scaledX;
+        totalY += scaledY;
+        pointCount++;
+      }
+      break;
+
+    case 2: // LineTo
+      for (NSUInteger i = 0; i < commandCount; ++i) {
+        int32_t dx = (int32_t)(([geometryArray valueAtIndex:index++] >> 1) ^
+                               (-([geometryArray valueAtIndex:index - 1] & 1)));
+        int32_t dy = (int32_t)(([geometryArray valueAtIndex:index++] >> 1) ^
+                               (-([geometryArray valueAtIndex:index - 1] & 1)));
+
+        cursorX += dx;
+        cursorY += dy;
+
+        float scaledX = cursorX * scaleFactor;
+        float scaledY = cursorY * scaleFactor;
+
+        CGContextAddLineToPoint(context, scaledX, scaledY);
+
+        totalX += scaledX;
+        totalY += scaledY;
+        pointCount++;
+      }
+      break;
+
+    case 7: // ClosePath
+      CGContextClosePath(context);
+      break;
+
+    default:
+      // Unknown command, handle error
+      break;
+    }
+  }
+
+  // 塗りつぶしとストロークを行う
+  CGContextDrawPath(context, kCGPathEOFillStroke);
+
+  // ポリゴンの中心点を計算
+  float centerX = totalX / pointCount;
+  float centerY = totalY / pointCount;
+
+  NSMutableParagraphStyle *style = [[NSMutableParagraphStyle alloc] init];
+  [style setAlignment:NSTextAlignmentCenter];
+
+  NSMutableAttributedString *attributedString =
+      [[NSMutableAttributedString alloc] initWithString:label];
+  [attributedString addAttribute:NSParagraphStyleAttributeName
+                           value:style
+                           range:NSMakeRange(0, [label length])];
+  [attributedString addAttribute:NSFontAttributeName
+                           value:[UIFont boldSystemFontOfSize:16]
+                           range:NSMakeRange(0, [label length])];
+  [attributedString addAttribute:NSForegroundColorAttributeName
+                           value:[UIColor blackColor]
+                           range:NSMakeRange(0, [label length])];
+  [attributedString addAttribute:NSStrokeWidthAttributeName
+                           value:[NSNumber numberWithFloat:-2.0]
+                           range:NSMakeRange(0, [label length])];
+  [attributedString addAttribute:NSStrokeColorAttributeName
+                           value:[UIColor whiteColor]
+                           range:NSMakeRange(0, [label length])];
+
+  // テキストのサイズを計算
+  CGSize textSize = [attributedString size];
+  CGFloat textX = centerX - textSize.width / 2.0;
+  CGFloat textY = centerY - textSize.height / 2.0;
+
+  // テキストを描画
+  [attributedString drawAtPoint:CGPointMake(textX, textY)];
+}
+
+- (NSData *)fetchTile:(NSUInteger)zoom x:(NSUInteger)x y:(NSUInteger)y {
+  NSError *error;
+
+  NSURL *tileCacheFileDirectory =
+      [NSURL URLWithString:[NSString stringWithFormat:@"%@/%ld/%ld/",
+                                                      self.tileCachePath,
+                                                      (long)zoom, (long)x]];
+  NSURL *pbfCacheFilePath = [NSURL
+      URLWithString:[NSString stringWithFormat:@"%@/%ld/%ld/%ld.pbf",
+                                               self.tileCachePath, (long)zoom,
+                                               (long)x, (long)y]];
+
+  NSData *pbfData;
+  pbfData = [self readPbfData:pbfCacheFilePath];
+
+  if (!pbfData) {
+    if (self.offlineMode) {
+      return nil;
+    }
+    pbfData = [self.pmtiles getTileWithZ:zoom x:x y:y];
+    if (!pbfData) {
+      return nil;
+    }
+    if (self.tileCachePath) {
+      [self writePbfData:tileCacheFileDirectory
+          withPbfCacheFilePath:pbfCacheFilePath
+                   withPbfData:pbfData];
+    }
+  }
+  // NSLog(@"data %@", data);
+  Tile *decodedTile = [Tile parseFromData:pbfData error:&error];
+
+  if (error) {
+    NSLog(@"Failed to decode Tile: %@", error);
+    return nil;
+  }
+  CGContextRef context = [self createTransparentImageContext];
+
+  for (Tile_Layer *layer in decodedTile.layersArray) {
+    for (Tile_Feature *feature in layer.featuresArray) {
+      NSDictionary *attributes = getFeatureAttributes(layer, feature);
+      NSString *key = @"基本分類C";
+      NSString *labelToUse = getLabelToUse(attributes, key);
+      UIColor *colorToUse = getColorToUse(attributes, key);
+      if (feature.type == Tile_GeomType_Point) {
+        [self drawPointInContext:context
+                      geometries:feature.geometryArray
+                       fillColor:colorToUse
+                           label:labelToUse];
+      } else if (feature.type == Tile_GeomType_Linestring) {
+        [self drawLineStringInContext:context
+                           geometries:feature.geometryArray
+                            fillColor:colorToUse
+                                label:labelToUse];
+      } else if (feature.type == Tile_GeomType_Polygon) { // ポリゴンのみを処理
+        [self drawPolygonInContext:context
+                        geometries:feature.geometryArray
+                         fillColor:colorToUse
+                             label:labelToUse];
+      }
+    }
+  }
+
+  // 描画したイメージを取得
+  UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
+  UIGraphicsEndImageContext();
+
+  // UIImageからNSDataへ変換（PNG形式）
+  NSData *tileData = UIImagePNGRepresentation(image);
+
+  if (error) {
+    // NSLog(@"%@", [error localizedDescription]);
+    return nil;
+  } else {
+    return tileData;
+  }
+}
+
+- (void)writePbfData:(NSURL *)tileCacheFileDirectory
+    withPbfCacheFilePath:(NSURL *)pbfCacheFilePath
+             withPbfData:(NSData *)data {
+
+  NSError *error;
+
+  // NSDataをBase64エンコードしたNSStringを取得
+  NSString *base64String = [data base64EncodedStringWithOptions:0];
+
+  if (![[NSFileManager defaultManager]
+          fileExistsAtPath:[tileCacheFileDirectory path]]) {
+    [[NSFileManager defaultManager]
+              createDirectoryAtPath:[tileCacheFileDirectory path]
+        withIntermediateDirectories:YES
+                         attributes:nil
+                              error:&error];
+    if (error) {
+      NSLog(@"Directory creation Error: %@", error.localizedDescription);
+      return;
+    }
+  }
+
+  // Base64エンコードされた文字列を直接ファイルに書き込む
+  [base64String writeToFile:[pbfCacheFilePath path]
+                 atomically:YES
+                   encoding:NSUTF8StringEncoding
+                      error:&error];
+
+  if (error) {
+    NSLog(@"File writing Error: %@", error.localizedDescription);
+    return;
+  }
+
+  NSLog(@"tileCache SAVED tile %@", [pbfCacheFilePath path]);
+}
+
+- (void)writeTileImage:(NSURL *)tileCacheFileDirectory
+    withTileCacheFilePath:(NSURL *)tileCacheFilePath
+             withTileData:(NSData *)data {
+  NSError *error;
+
+  if (![[NSFileManager defaultManager]
+          fileExistsAtPath:[tileCacheFileDirectory path]]) {
+    [[NSFileManager defaultManager]
+              createDirectoryAtPath:[tileCacheFileDirectory path]
+        withIntermediateDirectories:YES
+                         attributes:nil
+                              error:&error];
+    if (error) {
+      // NSLog(@"Error: %@", error);
+      return;
+    }
+  }
+  [[NSFileManager defaultManager] createFileAtPath:[tileCacheFilePath path]
+                                          contents:data
+                                        attributes:nil];
+  // NSLog(@"tileCache SAVED tile %@", [tileCacheFilePath path]);
+}
+
+- (NSData *)getHalfTile:(NSData *)data
+             leftColumn:(NSUInteger)leftColumn
+                 topRow:(NSUInteger)topRow {
+  UIImage *image = [UIImage imageWithData:data];
+  CGRect originalRect = CGRectMake(0, 0, image.size.width, image.size.height);
+
+  UIGraphicsBeginImageContext(originalRect.size);
+  {
+    CGRect drawRect = CGRectApplyAffineTransform(
+        originalRect, CGAffineTransformMakeScale(2, 2));
+    drawRect = CGRectApplyAffineTransform(
+        drawRect,
+        CGAffineTransformMakeTranslation(-image.size.width * leftColumn,
+                                         -image.size.height * topRow));
+    [image drawInRect:drawRect];
+    image = UIGraphicsGetImageFromCurrentImageContext();
+  }
+  UIGraphicsEndImageContext();
+
+  return UIImagePNGRepresentation(image);
+}
+
+// - (NSData *)drawOverZoomTile:(NSUInteger)zoom x:(NSUInteger)x
+// y:(NSUInteger)y
+// {
+//   if (zoom <= self.maximumNativeZ) {
+//     return [self getTile:zoom x:x y:y];
+//   }
+//   BOOL leftColumn = x % 2 == 0;
+//   BOOL topRow = y % 2 == 0;
+//   NSData *Data = [self drawOverZoomTile:(zoom - 1) x:(x / 2) y:(y / 2)];
+//   return [self getHalfTile:Data leftColumn:1 - leftColumn topRow:1 -
+//   topRow];
+// }
+
+- (NSData *)drawOverZoomTile:(NSUInteger)tryZ
+                           x:(NSUInteger)x
+                           y:(NSUInteger)y
+                        minZ:(NSInteger)minZ {
+  // NSLog(@"#$#$#$#$#$ %ld,%ld,%ld,%ld", tryZ,x,y,minZ);
+  NSData *Data = [self getTile:tryZ x:x y:y];
+  if (Data) {
+
+    return Data;
+  } else if (tryZ >= minZ) {
+    Data = [self drawOverZoomTile:(tryZ - 1) x:(x / 2) y:(y / 2) minZ:minZ];
+    BOOL leftColumn = x % 2 == 0;
+    BOOL topRow = y % 2 == 0;
+    return [self getHalfTile:Data leftColumn:1 - leftColumn topRow:1 - topRow];
+
+  } else {
+    return nil;
+  }
+}
+
+@end
+
+#endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapURLTileManager.m b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapURLTileManager.m
index ee501d8..f372ecc 100644
--- a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapURLTileManager.m
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapURLTileManager.m
@@ -8,7 +8,7 @@
 #import "AIRGoogleMapUrlTileManager.h"
 #import "AIRGoogleMapUrlTile.h"
 
-@interface AIRGoogleMapUrlTileManager()
+@interface AIRGoogleMapUrlTileManager ()
 
 @end
 
@@ -18,15 +18,22 @@ RCT_EXPORT_MODULE()
 
 - (UIView *)view
 {
-  AIRGoogleMapUrlTile *tileLayer = [AIRGoogleMapUrlTile new];
-  return tileLayer;
+    AIRGoogleMapUrlTile *tileLayer = [AIRGoogleMapUrlTile new];
+    return tileLayer;
 }
 
 RCT_EXPORT_VIEW_PROPERTY(urlTemplate, NSString)
 RCT_EXPORT_VIEW_PROPERTY(zIndex, int)
+RCT_EXPORT_VIEW_PROPERTY(opacity, float)
+RCT_EXPORT_VIEW_PROPERTY(doubleTileSize, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(maximumZ, NSInteger)
 RCT_EXPORT_VIEW_PROPERTY(minimumZ, NSInteger)
+RCT_EXPORT_VIEW_PROPERTY(maximumNativeZ, NSInteger)
 RCT_EXPORT_VIEW_PROPERTY(flipY, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(offlineMode, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(tileCachePath, NSString)
+RCT_EXPORT_VIEW_PROPERTY(tileCacheMaxAge, NSInteger)
+
 
 @end
 
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTile.h b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTile.h
index 05b2afd..31f77d7 100644
--- a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTile.h
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTile.h
@@ -7,16 +7,25 @@
 
 #import <Foundation/Foundation.h>
 #import <GoogleMaps/GoogleMaps.h>
+#import "AIRGoogleMapUrlTileOverlay.h"
 
 @interface AIRGoogleMapUrlTile : UIView
 
-@property (nonatomic, strong) GMSURLTileLayer *tileLayer;
-@property (nonatomic, assign) NSString *urlTemplate;
+@property (nonatomic, strong) AIRGoogleMapUrlTileOverlay *tileLayer;
+@property (nonatomic, copy) NSString *urlTemplate;
 @property (nonatomic, assign) int zIndex;
-@property NSInteger *maximumZ;
-@property NSInteger *minimumZ;
-@property BOOL flipY;
+@property (nonatomic, assign) float opacity;
+@property (nonatomic, assign) BOOL doubleTileSize;
+@property (nonatomic, assign) NSInteger maximumZ;
+@property (nonatomic, assign) NSInteger minimumZ;
+@property (nonatomic, assign) NSInteger maximumNativeZ;
+@property (nonatomic, assign) NSInteger tileSize;
+@property (nonatomic, assign) BOOL flipY;
+@property (nonatomic, assign) BOOL offlineMode;
+@property (nonatomic, copy) NSString *tileCachePath;
+@property (nonatomic, assign) NSInteger tileCacheMaxAge;
 
 @end
 
 #endif
+
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTile.m b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTile.m
index c9beb39..d218183 100644
--- a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTile.m
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTile.m
@@ -6,51 +6,171 @@
 #ifdef HAVE_GOOGLE_MAPS
 
 #import "AIRGoogleMapUrlTile.h"
+#import "RCTConvert+GMSMapViewType.h"
+#import <React/RCTConvert.h>
+#import "AIRGoogleMapUrlTileOverlay.h"
 
 @implementation AIRGoogleMapUrlTile
 
-- (void)setZIndex:(int)zIndex
-{
+- (id)init {
+  self = [super init];
+  _opacity = 1;
+  return self;
+}
+- (void)setZIndex:(int)zIndex {
   _zIndex = zIndex;
   _tileLayer.zIndex = zIndex;
 }
 
-- (void)setUrlTemplate:(NSString *)urlTemplate
-{
-  _urlTemplate = urlTemplate;
-  _tileLayer = [GMSURLTileLayer tileLayerWithURLConstructor:[self _getTileURLConstructor]];
-  _tileLayer.tileSize = [[UIScreen mainScreen] scale] * 256;
+- (void)setFlipY:(BOOL)flipY {
+  _flipY = flipY;
+  if (self.tileLayer && flipY) {
+    [self.tileLayer setFlipY:_flipY];
+    [self.tileLayer clearTileCache];
+  }
 }
 
-- (GMSTileURLConstructor)_getTileURLConstructor
-{
-  NSString *urlTemplate = self.urlTemplate;
-  NSInteger *maximumZ = self.maximumZ;
-  NSInteger *minimumZ = self.minimumZ;
-  GMSTileURLConstructor urls = ^NSURL* _Nullable (NSUInteger x, NSUInteger y, NSUInteger zoom) {
+- (void)setTileSize:(NSInteger)tileSize {
+  _tileSize = tileSize;
+  if (self.tileLayer && tileSize) {
+    self.tileLayer.tileSize = tileSize;
+    [self.tileLayer clearTileCache];
+  }
+}
     
-    if (self.flipY == YES) {
-      y = (1 << zoom) - y - 1;
-    }
     
-    NSString *url = urlTemplate;
-    url = [url stringByReplacingOccurrencesOfString:@"{x}" withString:[NSString stringWithFormat: @"%ld", (long)x]];
-    url = [url stringByReplacingOccurrencesOfString:@"{y}" withString:[NSString stringWithFormat: @"%ld", (long)y]];
-    url = [url stringByReplacingOccurrencesOfString:@"{z}" withString:[NSString stringWithFormat: @"%ld", (long)zoom]];
+- (void)setMinimumZ:(NSInteger)minimumZ {
+  _minimumZ = minimumZ;
+  if (self.tileLayer && minimumZ) {
+    [self.tileLayer setMinimumZ:_minimumZ];
+    [self.tileLayer clearTileCache];
+  }
+}
 
-   if(maximumZ && (long)zoom > (long)maximumZ) {
-      return nil;
-    }
+- (void)setMaximumZ:(NSInteger)maximumZ {
+  _maximumZ = maximumZ;
+  if (self.tileLayer && maximumZ) {
+    [self.tileLayer setMaximumZ:_maximumZ];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setMaximumNativeZ:(NSInteger)maximumNativeZ {
+  _maximumNativeZ = maximumNativeZ;
+  if (self.tileLayer && maximumNativeZ) {
+    [self.tileLayer setMaximumNativeZ:maximumNativeZ];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setDoubleTileSize:(BOOL)doubleTileSize {
+  if (_tileSize)
+    return;
+  // float screenTileSize =
+  //    [[UIScreen mainScreen] bounds].size.width * [UIScreen mainScreen].scale;
+  // float screenTileSize = 256 * [UIScreen mainScreen].scale;
+  // これが正解
+  float screenTileSize =
+      [[UIScreen mainScreen] nativeBounds].size.width / 256 * 256;
+
+  _tileSize = doubleTileSize ? screenTileSize / 2 : screenTileSize;
+  // NSLog(@"tileSizeA %ld", _tileSize);
+  if (self.tileLayer) {
+    self.tileLayer.tileSize = _tileSize;
+    //[self.tileLayer setTileSize:_tileSize];//上のじゃないとできない？
+    [self.tileLayer setDoubleTileSize:doubleTileSize];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setOpacity:(float)opacity {
+  _opacity = opacity;
+  if (self.tileLayer) {
+    [self.tileLayer setOpacity:opacity];
+    [self.tileLayer clearTileCache];
+  }
+}
+
+- (void)setUrlTemplate:(NSString *)urlTemplate {
 
-    if(minimumZ && (long)zoom < (long)minimumZ) {
-      return nil;
+  _urlTemplate = urlTemplate;
+    
+  //  _tileLayer = [GMSURLTileLayer tileLayerWithURLConstructor:[self
+  //  _getTileURLConstructor]];
+  AIRGoogleMapUrlTileOverlay *tile = [[AIRGoogleMapUrlTileOverlay alloc] init];
+  [tile setTemplate:urlTemplate];
+  [tile setFlipY:_flipY];
+  [tile setMaximumZ:_maximumZ];
+  [tile setMinimumZ:_minimumZ];
+  [tile setTileSize:_tileSize];
+  [tile setDoubleTileSize:_doubleTileSize];
+  [tile setMaximumNativeZ:_maximumNativeZ];
+  [tile setZIndex:_zIndex];
+  [tile setOpacity:_opacity];
+  [tile setOfflineMode:_offlineMode];
+  [tile setTileCachePath:_tileCachePath];
+  [tile setTileCacheMaxAge:_tileCacheMaxAge];
+  _tileLayer = tile;
+}
+
+- (void)setOfflineMode:(BOOL)offlineMode {
+    _offlineMode = offlineMode;
+    if (self.tileLayer && offlineMode) {
+        self.tileLayer.offlineMode = _offlineMode;
+        [self.tileLayer clearTileCache];
     }
+}
+
+- (void)setTileCachePath:(NSString *)tileCachePath{
+    if (!tileCachePath) return;
+    _tileCachePath = tileCachePath;
+    self.tileLayer.tileCachePath = [NSURL URLWithString:_tileCachePath];
+    [self.tileLayer clearTileCache];
+}
 
-    return [NSURL URLWithString:url];
-  };
-  return urls;
+- (void)setTileCacheMaxAge:(NSInteger)tileCacheMaxAge{
+    _tileCacheMaxAge = tileCacheMaxAge;
+    if (self.tileLayer && tileCacheMaxAge) {
+        self.tileLayer.tileCacheMaxAge = _tileCacheMaxAge;
+        [self.tileLayer clearTileCache];
+    } 
 }
 
 @end
 
+// - (GMSTileURLConstructor)_getTileURLConstructor
+// {
+//   NSString *urlTemplate = self.urlTemplate;
+//   NSInteger *maximumZ = self.maximumZ;
+//   NSInteger *minimumZ = self.minimumZ;
+//   GMSTileURLConstructor urls = ^NSURL* _Nullable (NSUInteger x, NSUInteger y,
+//   NSUInteger zoom) {
+
+//     if (self.flipY == YES) {
+//       y = (1 << zoom) - y - 1;
+//     }
+
+//     NSString *url = urlTemplate;
+//     url = [url stringByReplacingOccurrencesOfString:@"{x}"
+//     withString:[NSString stringWithFormat: @"%ld", (long)x]]; url = [url
+//     stringByReplacingOccurrencesOfString:@"{y}" withString:[NSString
+//     stringWithFormat: @"%ld", (long)y]]; url = [url
+//     stringByReplacingOccurrencesOfString:@"{z}" withString:[NSString
+//     stringWithFormat: @"%ld", (long)zoom]];
+
+//    if(maximumZ && (long)zoom > (long)maximumZ) {
+//       return nil;
+//     }
+
+//     if(minimumZ && (long)zoom < (long)minimumZ) {
+//       return nil;
+//     }
+
+//     return [NSURL URLWithString:url];
+//   };
+//   return urls;
+// }
+
+// @end
+
 #endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTileOverlay.h b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTileOverlay.h
new file mode 100644
index 0000000..49d34ee
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTileOverlay.h
@@ -0,0 +1,23 @@
+//
+//  AIRGoogleMapURLTile.h
+//  Created by Nick Italiano on 11/5/16.
+//
+
+#ifdef HAVE_GOOGLE_MAPS
+
+#import <GoogleMaps/GoogleMaps.h>
+
+@interface AIRGoogleMapUrlTileOverlay : GMSSyncTileLayer
+@property (nonatomic, copy) NSString *template;
+@property (nonatomic, assign) NSInteger maximumZ;
+@property (nonatomic, assign) NSInteger minimumZ;
+@property (nonatomic) NSInteger maximumNativeZ;
+@property (nonatomic, assign) NSInteger tileSize;
+@property (nonatomic) NSInteger doubleTileSize;
+@property (nonatomic, assign) BOOL flipY;
+@property (nonatomic, assign) BOOL offlineMode;
+@property (nonatomic, copy) NSString *tileCachePath;
+@property (nonatomic, assign) NSInteger tileCacheMaxAge;
+@end
+
+#endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTileOverlay.m b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTileOverlay.m
new file mode 100644
index 0000000..cc7460c
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/AIRGoogleMapUrlTileOverlay.m
@@ -0,0 +1,236 @@
+//
+//  AIRGoogleMapURLTile.m
+//  Created by Nick Italiano on 11/5/16.
+//
+
+#ifdef HAVE_GOOGLE_MAPS
+
+#import "AIRGoogleMapUrlTileOverlay.h"
+@implementation AIRGoogleMapUrlTileOverlay
+- (id)init {
+  self = [super init];
+  return self;
+}
+
+- (UIImage *)tileForX:(NSUInteger)x y:(NSUInteger)y zoom:(NSUInteger)zoom {
+  //   NSLog(@"zoomA %lf", self.map.camera.zoom);
+  //   NSLog(@"zoomB %lf", floor(self.map.camera.zoom));
+  //   NSLog(@"zoomC %ld", zoom);
+
+  //   NSLog(@"tileSizeB %ld", self.tileSize);
+  //   NSLog(@"width %.0f", [[UIScreen mainScreen] bounds].size.width);
+  //   NSLog(@"native width %.0f", [[UIScreen mainScreen]
+  //   nativeBounds].size.width); NSLog(@"scale %.0f", [UIScreen
+  //   mainScreen].scale); NSLog(@"native scale %.0f", [UIScreen
+  //   mainScreen].nativeScale);
+
+  //   int zoomDiff = zoom -　floor(self.map.camera.zoom);
+  //   NSLog(@"zoomDiff %d", zoomDiff);
+  //   zoom = zoom - zoomDiff;
+  //   x = x / pow(2, zoomDiff);
+  //   y = y / pow(2, zoomDiff);
+  // int mapZoom = floor(self.map.camera.zoom);
+  // int mapZoom = zoom;
+  if (self.maximumZ && zoom > self.maximumZ) {
+    return kGMSTileLayerNoTile;
+  }
+
+  if (self.minimumZ && zoom < self.minimumZ) {
+    return kGMSTileLayerNoTile;
+  }
+
+  int drawType = 0; // 0:original 1:high-resolution 2:overzoom
+
+  if (zoom > self.maximumNativeZ && !self.doubleTileSize) {
+    drawType = 2;
+  } else if (zoom > self.maximumNativeZ - 1 && self.doubleTileSize) {
+    drawType = 2;
+  } else if (zoom <= self.maximumNativeZ && !self.doubleTileSize) {
+    drawType = 0;
+  } else if (zoom <= self.maximumNativeZ - 1 && self.doubleTileSize) {
+    drawType = 1;
+  }
+  // NSLog(@"drawType %d,%ld,%ld", drawType,zoom,self.maximumNativeZ);
+  NSData *data;
+  if (drawType == 0 || drawType == 1) {
+    data = [self getTile:zoom x:x y:y];
+  } else if (drawType == 2) {
+    data = [self drawOverZoomTile:zoom x:x y:y minZ:self.maximumNativeZ];
+  }
+  if (!data && self.offlineMode && self.tileCachePath) {
+    NSInteger zoomLevelToStart = (zoom > self.maximumZ) ? self.maximumZ : zoom;
+    NSInteger minimumZoomToSearch = self.minimumZ >= zoomLevelToStart - 3
+                                        ? self.minimumZ
+                                        : zoomLevelToStart - 3;
+    data = [self drawOverZoomTile:(NSUInteger)zoomLevelToStart
+                                x:(NSUInteger)x
+                                y:(NSUInteger)y
+                             minZ:minimumZoomToSearch];
+  }
+  if (data) {
+    UIImage *img = [[UIImage alloc] initWithData:data];
+    return img;
+  }
+  return kGMSTileLayerNoTile;
+}
+
+- (NSData *)getTile:(NSUInteger)zoom x:(NSUInteger)x y:(NSUInteger)y {
+
+  // NSString *url = self.offlineMode && self.tileCachePath ?  [NSString
+  // stringWithFormat:@"%@%@",self.tileCachePath,@"/{z}/{x}/{y}.png"] :
+  // self.template; NSLog(@"%@", url);
+  if (self.flipY == YES) {
+    y = (1 << zoom) - y - 1;
+  }
+
+  NSString *urlXYZ = self.template;
+  urlXYZ = [urlXYZ
+      stringByReplacingOccurrencesOfString:@"{x}"
+                                withString:[NSString stringWithFormat:@"%ld",
+                                                                      (long)x]];
+  urlXYZ = [urlXYZ
+      stringByReplacingOccurrencesOfString:@"{y}"
+                                withString:[NSString stringWithFormat:@"%ld",
+                                                                      (long)y]];
+  urlXYZ = [urlXYZ
+      stringByReplacingOccurrencesOfString:@"{z}"
+                                withString:[NSString
+                                               stringWithFormat:@"%ld",
+                                                                (long)zoom]];
+  NSString *tileCacheXYZ =
+      [NSString stringWithFormat:@"%@/%ld/%ld/%ld", self.tileCachePath,
+                                 (long)zoom, (long)x, (long)y];
+  NSURL *tileCacheFileDirectory =
+      [NSURL URLWithString:[NSString stringWithFormat:@"%@/%ld/%ld/",
+                                                      self.tileCachePath,
+                                                      (long)zoom, (long)x]];
+  NSURL *tileCacheFilePath =
+      [NSURL URLWithString:(self.tileCachePath ? tileCacheXYZ : urlXYZ)];
+
+  NSString *url =
+      self.offlineMode && self.tileCachePath ? tileCacheXYZ : urlXYZ;
+  NSData *data;
+  data = [self readTileImage:tileCacheFilePath];
+  if (!data) {
+    data = [self fetchTile:url];
+    if (!data) {
+      return nil;
+    } else {
+      if (self.tileCachePath) {
+        [self writeTileImage:tileCacheFileDirectory
+            withTileCacheFilePath:tileCacheFilePath
+                     withTileData:data];
+      }
+      return data;
+    }
+  } else {
+    return data;
+  }
+}
+
+- (NSData *)readTileImage:(NSURL *)url {
+  NSError *error = nil;
+  NSData *data = [NSData dataWithContentsOfURL:url
+                                       options:NSDataReadingUncached
+                                         error:&error];
+  if (error) {
+    // NSLog(@"%@", [error localizedDescription]);
+    return nil;
+  } else {
+    return data;
+  }
+}
+
+- (NSData *)fetchTile:(NSString *)url {
+  NSError *error = nil;
+  NSURL *uri = [NSURL URLWithString:url];
+  NSData *data = [NSData dataWithContentsOfURL:uri
+                                       options:NSDataReadingUncached
+                                         error:&error];
+  if (error) {
+    // NSLog(@"%@", [error localizedDescription]);
+    return nil;
+  } else {
+    return data;
+  }
+}
+
+- (void)writeTileImage:(NSURL *)tileCacheFileDirectory
+    withTileCacheFilePath:(NSURL *)tileCacheFilePath
+             withTileData:(NSData *)data {
+  NSError *error;
+
+  if (![[NSFileManager defaultManager]
+          fileExistsAtPath:[tileCacheFileDirectory path]]) {
+    [[NSFileManager defaultManager]
+              createDirectoryAtPath:[tileCacheFileDirectory path]
+        withIntermediateDirectories:YES
+                         attributes:nil
+                              error:&error];
+    if (error) {
+      // NSLog(@"Error: %@", error);
+      return;
+    }
+  }
+  [[NSFileManager defaultManager] createFileAtPath:[tileCacheFilePath path]
+                                          contents:data
+                                        attributes:nil];
+  // NSLog(@"tileCache SAVED tile %@", [tileCacheFilePath path]);
+}
+
+- (NSData *)getHalfTile:(NSData *)data
+             leftColumn:(NSUInteger)leftColumn
+                 topRow:(NSUInteger)topRow {
+  UIImage *image = [UIImage imageWithData:data];
+  CGRect originalRect = CGRectMake(0, 0, image.size.width, image.size.height);
+
+  UIGraphicsBeginImageContext(originalRect.size);
+  {
+    CGRect drawRect = CGRectApplyAffineTransform(
+        originalRect, CGAffineTransformMakeScale(2, 2));
+    drawRect = CGRectApplyAffineTransform(
+        drawRect,
+        CGAffineTransformMakeTranslation(-image.size.width * leftColumn,
+                                         -image.size.height * topRow));
+    [image drawInRect:drawRect];
+    image = UIGraphicsGetImageFromCurrentImageContext();
+  }
+  UIGraphicsEndImageContext();
+
+  return UIImagePNGRepresentation(image);
+}
+
+// - (NSData *)drawOverZoomTile:(NSUInteger)zoom x:(NSUInteger)x y:(NSUInteger)y
+// {
+//   if (zoom <= self.maximumNativeZ) {
+//     return [self getTile:zoom x:x y:y];
+//   }
+//   BOOL leftColumn = x % 2 == 0;
+//   BOOL topRow = y % 2 == 0;
+//   NSData *Data = [self drawOverZoomTile:(zoom - 1) x:(x / 2) y:(y / 2)];
+//   return [self getHalfTile:Data leftColumn:1 - leftColumn topRow:1 - topRow];
+// }
+
+- (NSData *)drawOverZoomTile:(NSUInteger)tryZ
+                           x:(NSUInteger)x
+                           y:(NSUInteger)y
+                        minZ:(NSInteger)minZ {
+  // NSLog(@"#$#$#$#$#$ %ld,%ld,%ld,%ld", tryZ,x,y,minZ);
+  NSData *Data = [self getTile:tryZ x:x y:y];
+  if (Data) {
+
+    return Data;
+  } else if (tryZ >= minZ) {
+    Data = [self drawOverZoomTile:(tryZ - 1) x:(x / 2) y:(y / 2) minZ:minZ];
+    BOOL leftColumn = x % 2 == 0;
+    BOOL topRow = y % 2 == 0;
+    return [self getHalfTile:Data leftColumn:1 - leftColumn topRow:1 - topRow];
+
+  } else {
+    return nil;
+  }
+}
+
+@end
+
+#endif
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Decompress.h b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Decompress.h
new file mode 100644
index 0000000..f4c6ece
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Decompress.h
@@ -0,0 +1,8 @@
+#import <Foundation/Foundation.h>
+#import <zlib.h>
+
+@interface Decompress : NSObject
+
++ (NSData *)decompress:(NSData *)data compression:(NSUInteger)compression;
+
+@end
\ No newline at end of file
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Decompress.m b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Decompress.m
new file mode 100644
index 0000000..bd3880f
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Decompress.m
@@ -0,0 +1,67 @@
+#import "Decompress.h"
+
+@implementation Decompress
+
++ (NSData *)decompress:(NSData *)data compression:(NSUInteger)compression {
+  if (compression == 1 || compression == 0) {
+    return data;
+  } else if (compression == 2) {
+    return [self decompressGzip:data];
+  } else {
+    @throw [NSException exceptionWithName:NSInvalidArgumentException
+                                   reason:@"Compression method not supported"
+                                 userInfo:nil];
+  }
+}
+
++ (NSData *)decompressGzip:(NSData *)data {
+  if ([data length] == 0)
+    return data;
+
+  NSUInteger full_length = [data length];
+  NSUInteger half_length = [data length] / 2;
+
+  NSMutableData *decompressed =
+      [NSMutableData dataWithLength:full_length + half_length];
+  BOOL done = NO;
+  int status;
+
+  z_stream strm;
+  strm.next_in = (Bytef *)[data bytes];
+  strm.avail_in = (uInt)[data length];
+  strm.total_out = 0;
+  strm.zalloc = Z_NULL;
+  strm.zfree = Z_NULL;
+
+  if (inflateInit2(&strm, (15 + 32)) != Z_OK)
+    return nil;
+
+  while (!done) {
+    if (strm.total_out >= [decompressed length]) {
+      [decompressed increaseLengthBy:half_length];
+    }
+
+    strm.next_out = [decompressed mutableBytes] + strm.total_out;
+    strm.avail_out = (uInt)([decompressed length] - strm.total_out);
+
+    status = inflate(&strm, Z_SYNC_FLUSH);
+
+    if (status == Z_STREAM_END) {
+      done = YES;
+    } else if (status != Z_OK) {
+      break;
+    }
+  }
+
+  if (inflateEnd(&strm) != Z_OK)
+    return nil;
+
+  if (done) {
+    [decompressed setLength:strm.total_out];
+    return [NSData dataWithData:decompressed];
+  } else {
+    return nil;
+  }
+}
+
+@end
\ No newline at end of file
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/FetchSource.h b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/FetchSource.h
new file mode 100644
index 0000000..9f3ef17
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/FetchSource.h
@@ -0,0 +1,15 @@
+#import <Foundation/Foundation.h>
+
+@interface FetchSource : NSObject
+
+@property(nonatomic, strong) NSString *url;
+
+- (instancetype)initWithURL:(NSString *)url;
+- (NSString *)getKey;
+- (void)getBytesWithOffset:(NSUInteger)offset
+                    length:(NSUInteger)length
+                    signal:(NSProgress *)signal
+                completion:(void (^)(NSDictionary *rangeResponse,
+                                     NSError *error))completion;
+
+@end
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/FetchSource.m b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/FetchSource.m
new file mode 100644
index 0000000..6859c81
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/FetchSource.m
@@ -0,0 +1,65 @@
+#import "FetchSource.h"
+
+@implementation FetchSource
+
+- (instancetype)initWithURL:(NSString *)url {
+    self = [super init];
+    if (self) {
+        self.url = url;
+    }
+    return self;
+}
+
+- (NSString *)getKey {
+    return self.url;
+}
+
+- (void)getBytesWithOffset:(NSUInteger)offset
+                    length:(NSUInteger)length
+                    signal:(NSProgress *)signal
+                completion:(void (^)(NSDictionary *rangeResponse, NSError *error))completion {
+    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:self.url]];
+    [request setValue:[NSString stringWithFormat:@"bytes=%lu-%lu", (unsigned long)offset, (unsigned long)(offset + length - 1)] forHTTPHeaderField:@"Range"];
+    
+    if (signal) {
+        [request setAllowsCellularAccess:NO];
+        [signal addObserver:self
+                 forKeyPath:@"cancelled"
+                    options:NSKeyValueObservingOptionNew
+                    context:nil];
+    }
+    
+    NSURLSessionDataTask *dataTask = [[NSURLSession sharedSession] dataTaskWithRequest:request completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
+        if (error) {
+            completion(nil, error);
+            return;
+        }
+        
+        NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *)response;
+        if (httpResponse.statusCode >= 300) {
+            completion(nil, [NSError errorWithDomain:@"FetchSourceErrorDomain" code:httpResponse.statusCode userInfo:@{NSLocalizedDescriptionKey: [NSString stringWithFormat:@"Bad response code: %ld", (long)httpResponse.statusCode]}]);
+            return;
+        }
+        
+        NSString *contentLength = httpResponse.allHeaderFields[@"Content-Length"];
+        if (httpResponse.statusCode == 200 && (!contentLength || contentLength.integerValue > length)) {
+            if (signal) {
+                [signal removeObserver:self forKeyPath:@"cancelled"];
+            }
+            completion(nil, [NSError errorWithDomain:@"FetchSourceErrorDomain" code:0 userInfo:@{NSLocalizedDescriptionKey: @"Server returned no content-length header or content-length exceeding request. Check that your storage backend supports HTTP Byte Serving."}]);
+            return;
+        }
+        
+        NSDictionary *rangeResponse = @{
+            @"data": data,
+            @"etag": httpResponse.allHeaderFields[@"ETag"] ?: [NSNull null],
+            @"cacheControl": httpResponse.allHeaderFields[@"Cache-Control"] ?: [NSNull null],
+            @"expires": httpResponse.allHeaderFields[@"Expires"] ?: [NSNull null],
+        };
+        completion(rangeResponse, nil);
+    }];
+    
+    [dataTask resume];
+}
+
+@end
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Header.h b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Header.h
new file mode 100644
index 0000000..2cea399
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/Header.h
@@ -0,0 +1,28 @@
+#import <Foundation/Foundation.h>
+
+typedef struct {
+  uint64_t root_dir_offset;
+  uint64_t root_dir_bytes;
+  uint64_t json_metadata_offset;
+  uint64_t json_metadata_bytes;
+  uint64_t leaf_dirs_offset;
+  uint64_t leaf_dirs_bytes;
+  uint64_t tile_data_offset;
+  uint64_t tile_data_bytes;
+  uint64_t addressed_tiles_count;
+  uint64_t tile_entries_count;
+  uint64_t tile_contents_count;
+  BOOL clustered;
+  uint8_t internal_compression;
+  uint8_t tile_compression;
+  uint8_t tile_type;
+  uint8_t min_zoom;
+  uint8_t max_zoom;
+  int32_t min_lon_e7;
+  int32_t min_lat_e7;
+  int32_t max_lon_e7;
+  int32_t max_lat_e7;
+  uint8_t center_zoom;
+  int32_t center_lon_e7;
+  int32_t center_lat_e7;
+} headerv3;
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/PMTiles.h b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/PMTiles.h
new file mode 100644
index 0000000..535abe9
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/PMTiles.h
@@ -0,0 +1,82 @@
+// pmtiles.h
+
+#import "FetchSource.h"
+#import "Header.h"
+#import "SharedCache.h"
+#import <Foundation/Foundation.h>
+@interface PMTiles : NSObject
+
+@property(nonatomic, strong) NSString *urlString;
+@property(nonatomic, strong) FetchSource *fetchSource;
+@property(nonatomic, strong) SharedCache *sharedCache;
+
+typedef struct {
+  uint8_t z;
+  uint32_t x;
+  uint32_t y;
+} ZXY;
+
+typedef struct {
+  uint64_t tile_id;
+  uint64_t offset;
+  uint32_t length;
+  uint32_t run_length;
+} EntryV3;
+
+typedef struct {
+  uint8_t z;
+  uint32_t x;
+  uint32_t y;
+  uint64_t offset;
+  uint32_t length;
+} EntryZXY;
+
+ZXY ZXYMake(uint8_t z, uint32_t x, uint32_t y);
+EntryV3 EntryV3Make(uint64_t tile_id, uint64_t offset, uint32_t length,
+                    uint32_t run_length);
+
+EntryZXY EntryZXYMake(uint8_t z, uint32_t x, uint32_t y, uint64_t offset,
+                      uint32_t length);
+
+NS_INLINE NSComparisonResult EntryV3Compare(EntryV3 a, EntryV3 b);
+
+NS_INLINE NSComparisonResult EntryZXYCompare(EntryZXY a, EntryZXY b);
+
++ (NSString *)serializeHeader:(headerv3)header;
++ (headerv3)deserializeHeader:(NSData *)bytes;
++ (ZXY)tileIDToZXY:(uint64_t)tileID;
++ (uint64_t)zxyToTileID:(uint8_t)z x:(uint32_t)x y:(uint32_t)y;
++ (NSString *)serializeDirectory:(NSArray<NSValue *> *)entries;
++ (NSArray<NSValue *> *)deserializeDirectory:(NSData *)decompressed;
++ (void)collectEntries:(NSData * (^)(NSData *, uint8_t))decompress
+           tileEntries:(NSMutableArray<NSValue *> *)tileEntries
+            pmtilesMap:(const char *)pmtilesMap
+                header:(headerv3)h
+             dirOffset:(uint64_t)dirOffset
+             dirLength:(uint64_t)dirLength;
++ (NSArray<NSValue *> *)entriesTMS:(NSData * (^)(NSData *, uint8_t))decompress
+                        pmtilesMap:(const char *)pmtilesMap;
+
++ (uint64_t)getUint64:(const uint8_t *)data atOffset:(int)offset;
++ (int32_t)getInt32:(const uint8_t *)data
+           atOffset:(int)offset
+     isLittleEndian:(BOOL)isLittleEndian;
+
+- (instancetype)initWithURL:(NSString *)urlString;
+- (NSData *)getTileWithZ:(uint8_t)z x:(uint32_t)x y:(uint32_t)y;
+
+@end
+
+@interface PMTilesMagicNumberException : NSException
+- (NSString *)what;
+@end
+
+@interface PMTilesVersionException : NSException
+- (NSString *)what;
+@end
+
+@interface VarIntTooLongException : NSException
+@end
+
+@interface EndOfBufferException : NSException
+@end
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/PMTiles.m b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/PMTiles.m
new file mode 100644
index 0000000..4d589f9
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/PMTiles.m
@@ -0,0 +1,464 @@
+#import "PMTiles.h"
+#import "Decompress.h"
+#import "FetchSource.h"
+// #import "SharedCache.h"
+#import "VarintHelper.h"
+#import <Foundation/Foundation.h>
+@implementation PMTiles
+
+- (instancetype)initWithURL:(NSString *)urlString {
+  self = [super init];
+  if (self) {
+    self.urlString = urlString;
+    self.fetchSource = [[FetchSource alloc] initWithURL:urlString];
+    self.sharedCache = [[SharedCache alloc] init];
+  }
+  return self;
+}
+
+const uint8_t TILETYPE_UNKNOWN = 0x0;
+const uint8_t TILETYPE_MVT = 0x1;
+const uint8_t TILETYPE_PNG = 0x2;
+const uint8_t TILETYPE_JPEG = 0x3;
+const uint8_t TILETYPE_WEBP = 0x4;
+
+const uint8_t COMPRESSION_UNKNOWN = 0x0;
+const uint8_t COMPRESSION_NONE = 0x1;
+const uint8_t COMPRESSION_GZIP = 0x2;
+const uint8_t COMPRESSION_BROTLI = 0x3;
+const uint8_t COMPRESSION_ZSTD = 0x4;
+
+ZXY ZXYMake(uint8_t z, uint32_t x, uint32_t y) {
+  ZXY result;
+  result.z = z;
+  result.x = x;
+  result.y = y;
+  return result;
+}
+EntryV3 EntryV3Make(uint64_t tile_id, uint64_t offset, uint32_t length,
+                    uint32_t run_length) {
+  EntryV3 result;
+  result.tile_id = tile_id;
+  result.offset = offset;
+  result.length = length;
+  result.run_length = run_length;
+  return result;
+}
+
+EntryZXY EntryZXYMake(uint8_t z, uint32_t x, uint32_t y, uint64_t offset,
+                      uint32_t length) {
+  EntryZXY result;
+  result.z = z;
+  result.x = x;
+  result.y = y;
+  result.offset = offset;
+  result.length = length;
+  return result;
+}
+
+NS_INLINE NSComparisonResult EntryV3Compare(EntryV3 a, EntryV3 b) {
+  if (a.tile_id < b.tile_id) {
+    return NSOrderedAscending;
+  } else if (a.tile_id > b.tile_id) {
+    return NSOrderedDescending;
+  } else {
+    return NSOrderedSame;
+  }
+}
+
+NS_INLINE NSComparisonResult EntryZXYCompare(EntryZXY a, EntryZXY b) {
+  if (a.z != b.z) {
+    return a.z < b.z ? NSOrderedAscending : NSOrderedDescending;
+  }
+  if (a.x != b.x) {
+    return a.x < b.x ? NSOrderedAscending : NSOrderedDescending;
+  }
+  if (a.y != b.y) {
+    return a.y < b.y ? NSOrderedAscending : NSOrderedDescending;
+  }
+  return NSOrderedSame;
+}
+
++ (ZXY)tileIDToZXY:(uint64_t)tileID {
+  uint64_t acc = 0;
+  for (uint8_t t_z = 0; t_z < 32; t_z++) {
+    uint64_t num_tiles = (1LL << t_z) * (1LL << t_z);
+    if (acc + num_tiles > tileID) {
+      return [VarintHelper t_on_level:t_z position:tileID - acc];
+    }
+    acc += num_tiles;
+  }
+  @throw [NSException exceptionWithName:NSRangeException
+                                 reason:@"Tile zoom exceeds 64-bit limit"
+                               userInfo:nil];
+}
+
++ (uint64_t)zxyToTileID:(uint8_t)z x:(uint32_t)x y:(uint32_t)y {
+  if (z > 31) {
+    @throw [NSException exceptionWithName:NSGenericException
+                                   reason:@"Tile zoom exceeds 64-bit limit"
+                                 userInfo:nil];
+  }
+  if (x > (1 << z) - 1 || y > (1 << z) - 1) {
+    @throw [NSException exceptionWithName:NSGenericException
+                                   reason:@"Tile x/y outside zoom level bounds "
+                                 userInfo:nil];
+  }
+  uint64_t acc = 0;
+  for (uint8_t t_z = 0; t_z < z; t_z++) {
+    acc += (1LL << t_z) * (1LL << t_z);
+  }
+  int64_t n = 1LL << z;
+  int64_t rx, ry, s, d = 0;
+  int64_t tx = x;
+  int64_t ty = y;
+  for (s = n / 2; s > 0; s /= 2) {
+    rx = (tx & s) > 0;
+    ry = (ty & s) > 0;
+    d += s * s * ((3LL * rx) ^ ry);
+    [VarintHelper rotate:s x:&tx y:&ty rx:rx ry:ry];
+  }
+  return acc + d;
+}
+
++ (NSString *)serializeDirectory:(NSArray<NSValue *> *)entries {
+  NSMutableString *data = [NSMutableString string];
+
+  [VarintHelper writeVarint:data value:entries.count];
+
+  uint64_t lastID = 0;
+  for (NSValue *entryValue in entries) {
+    EntryV3 entry;
+    [entryValue getValue:&entry];
+    [VarintHelper writeVarint:data value:(entry.tile_id - lastID)];
+    lastID = entry.tile_id;
+  }
+
+  for (NSValue *entryValue in entries) {
+    EntryV3 entry;
+    [entryValue getValue:&entry];
+    [VarintHelper writeVarint:data value:entry.run_length];
+  }
+
+  for (NSValue *entryValue in entries) {
+    EntryV3 entry;
+    [entryValue getValue:&entry];
+    [VarintHelper writeVarint:data value:entry.length];
+  }
+
+  for (NSUInteger i = 0; i < entries.count; i++) {
+    EntryV3 entry, prevEntry;
+    [entries[i] getValue:&entry];
+    if (i > 0) {
+      [entries[i - 1] getValue:&prevEntry];
+    }
+    if (i > 0 && entry.offset == prevEntry.offset + prevEntry.length) {
+      [VarintHelper writeVarint:data value:0];
+    } else {
+      [VarintHelper writeVarint:data value:(entry.offset + 1)];
+    }
+  }
+
+  return [NSString stringWithString:data];
+}
+
++ (NSArray<NSValue *> *)deserializeDirectory:(NSData *)decompressed {
+  const char *t = (const char *)decompressed.bytes;
+  const char *end = t + decompressed.length;
+
+  uint64_t numEntries = [VarintHelper decodeVarint:&t end:end];
+
+  NSMutableArray<NSValue *> *result =
+      [NSMutableArray arrayWithCapacity:numEntries];
+
+  uint64_t lastID = 0;
+  for (NSUInteger i = 0; i < numEntries; i++) {
+    uint64_t tileID = lastID + [VarintHelper decodeVarint:&t end:end];
+    EntryV3 entry = {tileID, 0, 0, 0};
+    [result addObject:[NSValue valueWithBytes:&entry
+                                     objCType:@encode(EntryV3)]];
+    lastID = tileID;
+  }
+
+  for (NSUInteger i = 0; i < numEntries; i++) {
+    EntryV3 entry;
+    [result[i] getValue:&entry];
+    entry.run_length = [VarintHelper decodeVarint:&t end:end];
+    result[i] = [NSValue valueWithBytes:&entry objCType:@encode(EntryV3)];
+  }
+
+  for (NSUInteger i = 0; i < numEntries; i++) {
+    EntryV3 entry;
+    [result[i] getValue:&entry];
+    entry.length = [VarintHelper decodeVarint:&t end:end];
+    result[i] = [NSValue valueWithBytes:&entry objCType:@encode(EntryV3)];
+  }
+
+  for (NSUInteger i = 0; i < numEntries; i++) {
+    uint64_t tmp = [VarintHelper decodeVarint:&t end:end];
+    EntryV3 entry, prevEntry;
+    [result[i] getValue:&entry];
+    if (i > 0) {
+      [result[i - 1] getValue:&prevEntry];
+    }
+    if (i > 0 && tmp == 0) {
+      entry.offset = prevEntry.offset + prevEntry.length;
+    } else {
+      entry.offset = tmp - 1;
+    }
+    result[i] = [NSValue valueWithBytes:&entry objCType:@encode(EntryV3)];
+  }
+
+  // assert the directory has been fully consumed
+  if (t != end) {
+    fprintf(stderr, "Error: malformed pmtiles directory\n");
+    exit(EXIT_FAILURE);
+  }
+
+  return [NSArray arrayWithArray:result];
+}
+
++ (void)collectEntries:(NSData * (^)(NSData *, uint8_t))decompress
+           tileEntries:(NSMutableArray<NSValue *> *)tileEntries
+            pmtilesMap:(const char *)pmtilesMap
+                header:(headerv3)h
+             dirOffset:(uint64_t)dirOffset
+             dirLength:(uint64_t)dirLength {
+  NSData *dirData = [NSData dataWithBytes:pmtilesMap + dirOffset
+                                   length:dirLength];
+
+  NSData *decompressedData = decompress(dirData, h.internal_compression);
+
+  NSArray<NSValue *> *dirEntries =
+      [PMTiles deserializeDirectory:decompressedData];
+  for (NSValue *entryValue in dirEntries) {
+    EntryV3 entry;
+    [entryValue getValue:&entry];
+    if (entry.run_length == 0) {
+      [PMTiles collectEntries:decompress
+                  tileEntries:tileEntries
+                   pmtilesMap:pmtilesMap
+                       header:h
+                    dirOffset:h.leaf_dirs_offset + entry.offset
+                    dirLength:entry.length];
+    } else {
+      for (uint64_t i = entry.tile_id; i < entry.tile_id + entry.run_length;
+           i++) {
+        ZXY zxy = [PMTiles tileIDToZXY:i];
+        EntryZXY entryZXY =
+            EntryZXYMake(zxy.z, zxy.x, zxy.y, h.tile_data_offset + entry.offset,
+                         entry.length);
+        [tileEntries addObject:[NSValue valueWithBytes:&entryZXY
+                                              objCType:@encode(EntryZXY)]];
+      }
+    }
+  }
+}
+
++ (NSArray<NSValue *> *)entriesTMS:(NSData * (^)(NSData *, uint8_t))decompress
+                        pmtilesMap:(const char *)pmtilesMap {
+  NSData *headerData = [NSData dataWithBytes:pmtilesMap length:127];
+  headerv3 header = [PMTiles deserializeHeader:headerData];
+  NSMutableArray<NSValue *> *tileEntries = [NSMutableArray array];
+  [PMTiles collectEntries:decompress
+              tileEntries:tileEntries
+               pmtilesMap:pmtilesMap
+                   header:header
+                dirOffset:header.root_dir_offset
+                dirLength:header.root_dir_bytes];
+  NSArray<NSValue *> *sortedTileEntries = [tileEntries
+      sortedArrayUsingComparator:^NSComparisonResult(NSValue *a, NSValue *b) {
+        EntryZXY entryA, entryB;
+        [a getValue:&entryA];
+        [b getValue:&entryB];
+        if (entryA.z != entryB.z) {
+          return entryA.z < entryB.z ? NSOrderedAscending : NSOrderedDescending;
+        }
+        if (entryA.x != entryB.x) {
+          return entryA.x < entryB.x ? NSOrderedAscending : NSOrderedDescending;
+        }
+        return entryA.y > entryB.y ? NSOrderedAscending : NSOrderedDescending;
+      }];
+
+  return sortedTileEntries;
+}
+
++ (headerv3)deserializeHeader:(NSData *)bytes {
+  headerv3 header;
+  const uint8_t *dataPtr = bytes.bytes;
+
+  uint8_t spec_version = dataPtr[7];
+  if (spec_version > 3) {
+    [NSException raise:@"InvalidArchiveException"
+                format:@"Archive is spec version %d but this library supports "
+                       @"up to spec version 3",
+                       spec_version];
+  }
+
+  header.root_dir_offset = [self getUint64:dataPtr atOffset:8];
+  header.root_dir_bytes = [self getUint64:dataPtr atOffset:16];
+  header.json_metadata_offset = [self getUint64:dataPtr atOffset:24];
+  header.json_metadata_bytes = [self getUint64:dataPtr atOffset:32];
+  header.leaf_dirs_offset = [self getUint64:dataPtr atOffset:40];
+  header.leaf_dirs_bytes = [self getUint64:dataPtr atOffset:48];
+  header.tile_data_offset = [self getUint64:dataPtr atOffset:56];
+  header.tile_data_bytes = [self getUint64:dataPtr atOffset:64];
+  header.addressed_tiles_count = [self getUint64:dataPtr atOffset:72];
+  header.tile_entries_count = [self getUint64:dataPtr atOffset:80];
+  header.tile_contents_count = [self getUint64:dataPtr atOffset:88];
+  header.clustered = dataPtr[96] == 1;
+  header.internal_compression = dataPtr[97];
+  header.tile_compression = dataPtr[98];
+  header.tile_type = dataPtr[99];
+  header.min_zoom = dataPtr[100];
+  header.max_zoom = dataPtr[101];
+  header.min_lon_e7 = [self getInt32:dataPtr atOffset:102 isLittleEndian:YES];
+  header.min_lat_e7 = [self getInt32:dataPtr atOffset:106 isLittleEndian:YES];
+  header.max_lon_e7 = [self getInt32:dataPtr atOffset:110 isLittleEndian:YES];
+  header.max_lat_e7 = [self getInt32:dataPtr atOffset:114 isLittleEndian:YES];
+  header.center_zoom = dataPtr[118];
+  header.center_lon_e7 = [self getInt32:dataPtr
+                               atOffset:119
+                         isLittleEndian:YES];
+  header.center_lat_e7 = [self getInt32:dataPtr
+                               atOffset:123
+                         isLittleEndian:YES];
+
+  return header;
+}
+
++ (uint64_t)getUint64:(const uint8_t *)data atOffset:(int)offset {
+  uint64_t value;
+  memcpy(&value, &data[offset], sizeof(value));
+  return CFSwapInt64LittleToHost(value);
+}
+
++ (int32_t)getInt32:(const uint8_t *)data
+           atOffset:(int)offset
+     isLittleEndian:(BOOL)isLittleEndian {
+  int32_t value;
+  memcpy(&value, &data[offset], sizeof(value));
+  if (isLittleEndian) {
+    return CFSwapInt32LittleToHost(value);
+  } else {
+    return CFSwapInt32BigToHost(value);
+  }
+}
+
++ (NSString *)serializeHeader:(headerv3)header {
+  NSMutableData *data = [NSMutableData data];
+
+  [data appendData:[@"PMTiles" dataUsingEncoding:NSUTF8StringEncoding]];
+  uint8_t version = 3;
+  [data appendBytes:&version length:1];
+  [data appendBytes:&header.root_dir_offset
+             length:sizeof(header.root_dir_offset)];
+  [data appendBytes:&header.root_dir_bytes
+             length:sizeof(header.root_dir_bytes)];
+  [data appendBytes:&header.json_metadata_offset
+             length:sizeof(header.json_metadata_offset)];
+  [data appendBytes:&header.json_metadata_bytes
+             length:sizeof(header.json_metadata_bytes)];
+  [data appendBytes:&header.leaf_dirs_offset
+             length:sizeof(header.leaf_dirs_offset)];
+  [data appendBytes:&header.leaf_dirs_bytes
+             length:sizeof(header.leaf_dirs_bytes)];
+  [data appendBytes:&header.tile_data_offset
+             length:sizeof(header.tile_data_offset)];
+  [data appendBytes:&header.tile_data_bytes
+             length:sizeof(header.tile_data_bytes)];
+  [data appendBytes:&header.addressed_tiles_count
+             length:sizeof(header.addressed_tiles_count)];
+  [data appendBytes:&header.tile_entries_count
+             length:sizeof(header.tile_entries_count)];
+  [data appendBytes:&header.tile_contents_count
+             length:sizeof(header.tile_contents_count)];
+
+  uint8_t clustered_val = header.clustered ? 0x1 : 0x0;
+  [data appendBytes:&clustered_val length:1];
+  [data appendBytes:&header.internal_compression length:1];
+  [data appendBytes:&header.tile_compression length:1];
+  [data appendBytes:&header.tile_type length:1];
+  [data appendBytes:&header.min_zoom length:1];
+  [data appendBytes:&header.max_zoom length:1];
+  [data appendBytes:&header.min_lon_e7 length:sizeof(header.min_lon_e7)];
+  [data appendBytes:&header.min_lat_e7 length:sizeof(header.min_lat_e7)];
+  [data appendBytes:&header.max_lon_e7 length:sizeof(header.max_lon_e7)];
+  [data appendBytes:&header.max_lat_e7 length:sizeof(header.max_lat_e7)];
+  [data appendBytes:&header.center_zoom length:1];
+  [data appendBytes:&header.center_lon_e7 length:sizeof(header.center_lon_e7)];
+  [data appendBytes:&header.center_lat_e7 length:sizeof(header.center_lat_e7)];
+
+  return [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];
+}
+
+- (NSData *)getTileWithZ:(uint8_t)z x:(uint32_t)x y:(uint32_t)y {
+  uint64_t tileID = [PMTiles zxyToTileID:z x:x y:y];
+  headerv3 header = [self.sharedCache getHeaderWithSource:self.fetchSource];
+  uint64_t dirOffset = header.root_dir_offset;
+  uint32_t dirLength = header.root_dir_bytes;
+  for (int depth = 0; depth <= 3; depth++) {
+    NSData *dirData = [self.sharedCache getDirectoryWithSource:self.fetchSource
+                                                        offset:dirOffset
+                                                        length:dirLength];
+
+    NSData *decompressedData =
+        [Decompress decompress:dirData compression:header.internal_compression];
+
+    NSArray<NSValue *> *dirEntries =
+        [PMTiles deserializeDirectory:decompressedData];
+    EntryV3 entry = [VarintHelper findTile:dirEntries withTileID:tileID];
+
+    if (entry.length > 0) {
+      if (entry.run_length > 0) {
+        NSData *resp = [self.sharedCache
+            fetchTileWithSource:self.fetchSource
+                         offset:header.tile_data_offset + entry.offset
+                         length:entry.length];
+        NSData *decompressedData =
+            [Decompress decompress:resp compression:header.tile_compression];
+        return decompressedData;
+      } else {
+        dirOffset = header.leaf_dirs_offset + entry.offset;
+        dirLength = entry.length;
+      }
+    } else {
+      return nil;
+    }
+  }
+
+  return nil;
+}
+
+@end
+
+@implementation PMTilesMagicNumberException
+
+- (NSString *)what {
+  return @"pmtiles magic number exception";
+}
+
+@end
+@implementation PMTilesVersionException
+
+- (NSString *)what {
+  return @"pmtiles version: must be 3";
+}
+
+@end
+
+@implementation VarIntTooLongException
+
+- (NSString *)what {
+  return @"varint too long exception";
+}
+
+@end
+
+@implementation EndOfBufferException
+
+- (NSString *)what {
+  return @"end of buffer exception";
+}
+
+@end
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/SharedCache.h b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/SharedCache.h
new file mode 100644
index 0000000..ecd49d1
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/SharedCache.h
@@ -0,0 +1,17 @@
+#import "FetchSource.h"
+#import "Header.h"
+#import <Foundation/Foundation.h>
+@interface SharedCache : NSObject
+
+@property(nonatomic) headerv3 header;
+@property(nonatomic) BOOL isHeaderSet;
+@property(nonatomic, strong) NSMutableDictionary<NSString *, NSData *> *cache;
+- (headerv3)getHeaderWithSource:(FetchSource *)source;
+- (headerv3)fetchHeaderWithSource:(FetchSource *)source;
+- (NSData *)getDirectoryWithSource:(FetchSource *)source
+                            offset:(NSUInteger)offset
+                            length:(NSUInteger)length;
+- (NSData *)fetchTileWithSource:(FetchSource *)source
+                         offset:(NSUInteger)offset
+                         length:(NSUInteger)length;
+@end
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/SharedCache.m b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/SharedCache.m
new file mode 100644
index 0000000..a7d14c3
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/SharedCache.m
@@ -0,0 +1,80 @@
+#import "SharedCache.h"
+#import "PMTiles.h"
+@implementation SharedCache
+
+- (instancetype)init {
+  self = [super init];
+  self.cache = [NSMutableDictionary dictionary];
+  return self;
+}
+
+- (headerv3)getHeaderWithSource:(FetchSource *)source {
+  if (!self.isHeaderSet) {
+    self.header = [self fetchHeaderWithSource:source];
+    self.isHeaderSet = YES;
+  }
+  return self.header;
+}
+
+- (headerv3)fetchHeaderWithSource:(FetchSource *)source {
+
+  dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);
+  __block headerv3 header;
+  [source getBytesWithOffset:0
+                      length:127
+                      signal:[NSProgress new]
+                  completion:^(NSDictionary *rangeResponse, NSError *error) {
+                    if (error) {
+                      NSLog(@"Error: %@", error.localizedDescription);
+                    } else {
+                      header =
+                          [PMTiles deserializeHeader:rangeResponse[@"data"]];
+                    }
+                    dispatch_semaphore_signal(semaphore);
+                  }];
+
+  // 結果が返ってくるまで待機
+  dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);
+  return header;
+}
+
+- (NSData *)getDirectoryWithSource:(FetchSource *)source
+                            offset:(NSUInteger)offset
+                            length:(NSUInteger)length {
+  NSString *key =
+      [NSString stringWithFormat:@"%@-%lu-%lu", source.url, offset, length];
+  if (self.cache[key]) {
+    return self.cache[key];
+  } else {
+    self.cache[key] = [self fetchTileWithSource:source
+                                         offset:offset
+                                         length:length];
+    return self.cache[key];
+  }
+}
+- (NSData *)fetchTileWithSource:(FetchSource *)source
+                         offset:(NSUInteger)offset
+                         length:(NSUInteger)length {
+
+  dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);
+  __block NSDictionary *rangeResponseResult;
+  [source getBytesWithOffset:offset
+                      length:length
+                      signal:[NSProgress new]
+                  completion:^(NSDictionary *rangeResponse, NSError *error) {
+                    if (!error)
+                      rangeResponseResult = [rangeResponse copy];
+                    dispatch_semaphore_signal(semaphore);
+                  }];
+
+  // 結果が返ってくるまで待機
+  dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);
+  NSData *tileData = rangeResponseResult[@"data"];
+  // 取得したデータを処理する
+  //   NSLog(@"ETag: %@", rangeResponseResult[@"etag"]);
+  //   NSLog(@"Cache-Control: %@", rangeResponseResult[@"cacheControl"]);
+  //   NSLog(@"Expires: %@", rangeResponseResult[@"expires"]);
+  //   NSLog(@"Data: %@", tileData);
+  return tileData;
+}
+@end
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/VarintHelper.h b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/VarintHelper.h
new file mode 100644
index 0000000..0d6ff78
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/VarintHelper.h
@@ -0,0 +1,19 @@
+#import "PMTiles.h"
+#import <Foundation/Foundation.h>
+@interface VarintHelper : NSObject
+
++ (uint64_t)decodeVarintImpl:(const char **)data end:(const char *)end;
++ (uint64_t)decodeVarint:(const char **)data end:(const char *)end;
+
++ (void)rotate:(int64_t)n
+             x:(int64_t *)x
+             y:(int64_t *)y
+            rx:(int64_t)rx
+            ry:(int64_t)ry;
++ (ZXY)t_on_level:(uint8_t)z position:(uint64_t)pos;
++ (NSInteger)writeVarint:(NSMutableString *)data value:(uint64_t)value;
+
++ (NSComparisonResult)compareEntryZXY:(EntryZXY)a withEntryZXY:(EntryZXY)b;
++ (EntryV3)findTile:(NSArray<NSValue *> *)entries withTileID:(uint64_t)tileID;
+
+@end
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/VarintHelper.m b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/VarintHelper.m
new file mode 100644
index 0000000..7a5b940
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/PMTiles/VarintHelper.m
@@ -0,0 +1,192 @@
+#import "VarintHelper.h"
+
+static const int8_t maxVarintLength = sizeof(uint64_t) * 8 / 7 + 1;
+
+@implementation VarintHelper
+
++ (uint64_t)decodeVarintImpl:(const char **)data end:(const char *)end {
+
+  const int8_t *begin = (const int8_t *)(*data);
+  const int8_t *iend = (const int8_t *)(end);
+  const int8_t *p = begin;
+  uint64_t val = 0;
+
+  if (iend - begin >= maxVarintLength) { // fast path
+    do {
+      int64_t b = *p++;
+      val = ((uint64_t)(b)&0x7fU);
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x7fU) << 7U;
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x7fU) << 14U;
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x7fU) << 21U;
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x7fU) << 28U;
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x7fU) << 35U;
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x7fU) << 42U;
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x7fU) << 49U;
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x7fU) << 56U;
+      if (b >= 0) {
+        break;
+      }
+      b = *p++;
+      val |= ((uint64_t)(b)&0x01U) << 63U;
+      if (b >= 0) {
+        break;
+      }
+      @throw [VarIntTooLongException new];
+    } while (false);
+  } else {
+    unsigned int shift = 0;
+    while (p != iend && *p < 0) {
+      val |= ((uint64_t)(*p++) & 0x7fU) << shift;
+      shift += 7;
+    }
+    if (p == iend) {
+      @throw [EndOfBufferException new];
+    }
+    val |= (uint64_t)(*p++) << shift;
+  }
+
+  *data = (const char *)(p);
+  return val;
+}
+
++ (uint64_t)decodeVarint:(const char **)data end:(const char *)end {
+  // If this is a one-byte varint, decode it here.
+  if (end != *data && (((uint64_t)(**data) & 0x80U) == 0)) {
+    const uint64_t val = (uint64_t)(**data);
+    ++(*data);
+    return val;
+  }
+  // If this varint is more than one byte, defer to complete implementation.
+  return [VarintHelper decodeVarintImpl:data end:end];
+}
+
++ (void)rotate:(int64_t)n
+             x:(int64_t *)x
+             y:(int64_t *)y
+            rx:(int64_t)rx
+            ry:(int64_t)ry {
+  if (ry == 0) {
+    if (rx == 1) {
+      *x = n - 1 - *x;
+      *y = n - 1 - *y;
+    }
+    int64_t t = *x;
+    *x = *y;
+    *y = t;
+  }
+}
+
++ (ZXY)t_on_level:(uint8_t)z position:(uint64_t)pos {
+  int64_t n = 1LL << z;
+  int64_t rx, ry, s, t = pos;
+  int64_t tx = 0;
+  int64_t ty = 0;
+  ZXY result;
+
+  for (s = 1; s < n; s *= 2) {
+    rx = 1LL & (t / 2);
+    ry = 1LL & (t ^ rx);
+    [VarintHelper rotate:s x:&tx y:&ty rx:rx ry:ry];
+    tx += s * rx;
+    ty += s * ry;
+    t /= 4;
+  }
+  result.z = z;
+  result.x = (uint32_t)tx;
+  result.y = (uint32_t)ty;
+
+  return result;
+}
+
++ (NSInteger)writeVarint:(NSMutableString *)data value:(uint64_t)value {
+  NSInteger n = 1;
+
+  while (value >= 0x80U) {
+    char byte = (char)((value & 0x7fU) | 0x80U);
+    NSString *appendStr = [NSString stringWithFormat:@"%c", byte];
+    [data appendString:appendStr];
+    value >>= 7U;
+    ++n;
+  }
+  char byte = (char)value;
+  NSString *appendStr = [NSString stringWithFormat:@"%c", byte];
+  [data appendString:appendStr];
+
+  return n;
+}
+
++ (NSComparisonResult)compareEntryZXY:(EntryZXY)a withEntryZXY:(EntryZXY)b {
+  if (a.z != b.z) {
+    return (a.z < b.z) ? NSOrderedAscending : NSOrderedDescending;
+  }
+  if (a.x != b.x) {
+    return (a.x < b.x) ? NSOrderedAscending : NSOrderedDescending;
+  }
+  return (a.y > b.y) ? NSOrderedAscending : NSOrderedDescending;
+}
+
++ (EntryV3)findTile:(NSArray<NSValue *> *)entries withTileID:(uint64_t)tileID {
+  NSInteger m = 0;
+  NSInteger n = [entries count] - 1;
+  while (m <= n) {
+    NSInteger k = (n + m) >> 1;
+    EntryV3 entryK;
+    [entries[k] getValue:&entryK];
+    int64_t cmp = tileID - entryK.tile_id;
+    if (cmp > 0) {
+      m = k + 1;
+    } else if (cmp < 0) {
+      n = k - 1;
+    } else {
+      return entryK;
+    }
+  }
+
+  if (n >= 0) {
+    EntryV3 entryN;
+    [entries[n] getValue:&entryN];
+    if (entryN.run_length == 0) {
+      return entryN;
+    }
+    if (tileID - entryN.tile_id < entryN.run_length) {
+      return entryN;
+    }
+  }
+
+  EntryV3 nullEntry = {0, 0, 0, 0};
+  return nullEntry;
+}
+
+@end
\ No newline at end of file
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/VectorTile.pbobjc.h b/node_modules/react-native-maps/ios/AirGoogleMaps/VectorTile.pbobjc.h
new file mode 100644
index 0000000..f95b7db
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/VectorTile.pbobjc.h
@@ -0,0 +1,230 @@
+// Generated by the protocol buffer compiler.  DO NOT EDIT!
+// clang-format off
+// source: vector_tile.proto
+
+// This CPP symbol can be defined to use imports that match up to the framework
+// imports needed when using CocoaPods.
+#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
+ #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
+#endif
+
+#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
+ #import <Protobuf/GPBProtocolBuffers.h>
+#else
+ #import "GPBProtocolBuffers.h"
+#endif
+
+#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
+#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
+#endif
+#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
+#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
+#endif
+
+// @@protoc_insertion_point(imports)
+
+#pragma clang diagnostic push
+#pragma clang diagnostic ignored "-Wdeprecated-declarations"
+
+CF_EXTERN_C_BEGIN
+
+@class Tile_Feature;
+@class Tile_Layer;
+@class Tile_Value;
+
+NS_ASSUME_NONNULL_BEGIN
+
+#pragma mark - Enum Tile_GeomType
+
+/** GeomType is described in section 4.3.4 of the specification */
+typedef GPB_ENUM(Tile_GeomType) {
+  Tile_GeomType_Unknown = 0,
+  Tile_GeomType_Point = 1,
+  Tile_GeomType_Linestring = 2,
+  Tile_GeomType_Polygon = 3,
+};
+
+GPBEnumDescriptor *Tile_GeomType_EnumDescriptor(void);
+
+/**
+ * Checks to see if the given value is defined by the enum or was not known at
+ * the time this source was generated.
+ **/
+BOOL Tile_GeomType_IsValidValue(int32_t value);
+
+#pragma mark - VectorTileRoot
+
+/**
+ * Exposes the extension registry for this file.
+ *
+ * The base class provides:
+ * @code
+ *   + (GPBExtensionRegistry *)extensionRegistry;
+ * @endcode
+ * which is a @c GPBExtensionRegistry that includes all the extensions defined by
+ * this file and all files that it depends on.
+ **/
+GPB_FINAL @interface VectorTileRoot : GPBRootObject
+@end
+
+#pragma mark - Tile
+
+typedef GPB_ENUM(Tile_FieldNumber) {
+  Tile_FieldNumber_LayersArray = 3,
+};
+
+GPB_FINAL @interface Tile : GPBMessage
+
+@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Tile_Layer*> *layersArray;
+/** The number of items in @c layersArray without causing the container to be created. */
+@property(nonatomic, readonly) NSUInteger layersArray_Count;
+
+@end
+
+#pragma mark - Tile_Value
+
+typedef GPB_ENUM(Tile_Value_FieldNumber) {
+  Tile_Value_FieldNumber_StringValue = 1,
+  Tile_Value_FieldNumber_FloatValue = 2,
+  Tile_Value_FieldNumber_DoubleValue = 3,
+  Tile_Value_FieldNumber_IntValue = 4,
+  Tile_Value_FieldNumber_UintValue = 5,
+  Tile_Value_FieldNumber_SintValue = 6,
+  Tile_Value_FieldNumber_BoolValue = 7,
+};
+
+/**
+ * Variant type encoding
+ * The use of values is described in section 4.1 of the specification
+ **/
+GPB_FINAL @interface Tile_Value : GPBMessage
+
+/** Exactly one of these values must be present in a valid message */
+@property(nonatomic, readwrite, copy, null_resettable) NSString *stringValue;
+/** Test to see if @c stringValue has been set. */
+@property(nonatomic, readwrite) BOOL hasStringValue;
+
+@property(nonatomic, readwrite) float floatValue;
+@property(nonatomic, readwrite) BOOL hasFloatValue;
+
+@property(nonatomic, readwrite) double doubleValue;
+@property(nonatomic, readwrite) BOOL hasDoubleValue;
+
+@property(nonatomic, readwrite) int64_t intValue;
+@property(nonatomic, readwrite) BOOL hasIntValue;
+
+@property(nonatomic, readwrite) uint64_t uintValue;
+@property(nonatomic, readwrite) BOOL hasUintValue;
+
+@property(nonatomic, readwrite) int64_t sintValue;
+@property(nonatomic, readwrite) BOOL hasSintValue;
+
+@property(nonatomic, readwrite) BOOL boolValue;
+@property(nonatomic, readwrite) BOOL hasBoolValue;
+
+@end
+
+#pragma mark - Tile_Feature
+
+typedef GPB_ENUM(Tile_Feature_FieldNumber) {
+  Tile_Feature_FieldNumber_Id_p = 1,
+  Tile_Feature_FieldNumber_TagsArray = 2,
+  Tile_Feature_FieldNumber_Type = 3,
+  Tile_Feature_FieldNumber_GeometryArray = 4,
+};
+
+/**
+ * Features are described in section 4.2 of the specification
+ **/
+GPB_FINAL @interface Tile_Feature : GPBMessage
+
+@property(nonatomic, readwrite) uint64_t id_p;
+@property(nonatomic, readwrite) BOOL hasId_p;
+
+/**
+ * Tags of this feature are encoded as repeated pairs of
+ * integers.
+ * A detailed description of tags is located in sections
+ * 4.2 and 4.4 of the specification
+ **/
+@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *tagsArray;
+/** The number of items in @c tagsArray without causing the container to be created. */
+@property(nonatomic, readonly) NSUInteger tagsArray_Count;
+
+/** The type of geometry stored in this feature. */
+@property(nonatomic, readwrite) Tile_GeomType type;
+@property(nonatomic, readwrite) BOOL hasType;
+
+/**
+ * Contains a stream of commands and parameters (vertices).
+ * A detailed description on geometry encoding is located in
+ * section 4.3 of the specification.
+ **/
+@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *geometryArray;
+/** The number of items in @c geometryArray without causing the container to be created. */
+@property(nonatomic, readonly) NSUInteger geometryArray_Count;
+
+@end
+
+#pragma mark - Tile_Layer
+
+typedef GPB_ENUM(Tile_Layer_FieldNumber) {
+  Tile_Layer_FieldNumber_Name = 1,
+  Tile_Layer_FieldNumber_FeaturesArray = 2,
+  Tile_Layer_FieldNumber_KeysArray = 3,
+  Tile_Layer_FieldNumber_ValuesArray = 4,
+  Tile_Layer_FieldNumber_Extent = 5,
+  Tile_Layer_FieldNumber_Version = 15,
+};
+
+/**
+ * Layers are described in section 4.1 of the specification
+ **/
+GPB_FINAL @interface Tile_Layer : GPBMessage
+
+/**
+ * Any compliant implementation must first read the version
+ * number encoded in this message and choose the correct
+ * implementation for this version number before proceeding to
+ * decode other parts of this message.
+ **/
+@property(nonatomic, readwrite) uint32_t version;
+@property(nonatomic, readwrite) BOOL hasVersion;
+
+@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
+/** Test to see if @c name has been set. */
+@property(nonatomic, readwrite) BOOL hasName;
+
+/** The actual features in this tile. */
+@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Tile_Feature*> *featuresArray;
+/** The number of items in @c featuresArray without causing the container to be created. */
+@property(nonatomic, readonly) NSUInteger featuresArray_Count;
+
+/** Dictionary encoding for keys */
+@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *keysArray;
+/** The number of items in @c keysArray without causing the container to be created. */
+@property(nonatomic, readonly) NSUInteger keysArray_Count;
+
+/** Dictionary encoding for values */
+@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Tile_Value*> *valuesArray;
+/** The number of items in @c valuesArray without causing the container to be created. */
+@property(nonatomic, readonly) NSUInteger valuesArray_Count;
+
+/**
+ * Although this is an "optional" field it is required by the specification.
+ * See https://github.com/mapbox/vector-tile-spec/issues/47
+ **/
+@property(nonatomic, readwrite) uint32_t extent;
+@property(nonatomic, readwrite) BOOL hasExtent;
+
+@end
+
+NS_ASSUME_NONNULL_END
+
+CF_EXTERN_C_END
+
+#pragma clang diagnostic pop
+
+// @@protoc_insertion_point(global_scope)
+
+// clang-format on
diff --git a/node_modules/react-native-maps/ios/AirGoogleMaps/VectorTile.pbobjc.m b/node_modules/react-native-maps/ios/AirGoogleMaps/VectorTile.pbobjc.m
new file mode 100644
index 0000000..5595147
--- /dev/null
+++ b/node_modules/react-native-maps/ios/AirGoogleMaps/VectorTile.pbobjc.m
@@ -0,0 +1,464 @@
+// Generated by the protocol buffer compiler.  DO NOT EDIT!
+// clang-format off
+// source: vector_tile.proto
+
+// This CPP symbol can be defined to use imports that match up to the framework
+// imports needed when using CocoaPods.
+#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
+ #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
+#endif
+
+#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
+ #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
+#else
+ #import "GPBProtocolBuffers_RuntimeSupport.h"
+#endif
+
+#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
+#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
+#endif
+#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
+#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
+#endif
+
+#import <stdatomic.h>
+
+#import "VectorTile.pbobjc.h"
+// @@protoc_insertion_point(imports)
+
+#pragma clang diagnostic push
+#pragma clang diagnostic ignored "-Wdeprecated-declarations"
+#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
+
+#pragma mark - Objective-C Class declarations
+// Forward declarations of Objective-C classes that we can use as
+// static values in struct initializers.
+// We don't use [Foo class] because it is not a static value.
+GPBObjCClassDeclaration(Tile);
+GPBObjCClassDeclaration(Tile_Feature);
+GPBObjCClassDeclaration(Tile_Layer);
+GPBObjCClassDeclaration(Tile_Value);
+
+#pragma mark - VectorTileRoot
+
+@implementation VectorTileRoot
+
+// No extensions in the file and no imports, so no need to generate
+// +extensionRegistry.
+
+@end
+
+static GPBFileDescription VectorTileRoot_FileDescription = {
+  .package = "vector_tile",
+  .prefix = NULL,
+  .syntax = GPBFileSyntaxProto2
+};
+
+#pragma mark - Enum Tile_GeomType
+
+GPBEnumDescriptor *Tile_GeomType_EnumDescriptor(void) {
+  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
+  if (!descriptor) {
+    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
+    static const char *valueNames =
+        "Unknown\000Point\000Linestring\000Polygon\000";
+    static const int32_t values[] = {
+        Tile_GeomType_Unknown,
+        Tile_GeomType_Point,
+        Tile_GeomType_Linestring,
+        Tile_GeomType_Polygon,
+    };
+    GPBEnumDescriptor *worker =
+        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(Tile_GeomType)
+                                       valueNames:valueNames
+                                           values:values
+                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
+                                     enumVerifier:Tile_GeomType_IsValidValue
+                                            flags:GPBEnumDescriptorInitializationFlag_IsClosed];
+    GPBEnumDescriptor *expected = nil;
+    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
+      //[worker release];
+    }
+  }
+  return descriptor;
+}
+
+BOOL Tile_GeomType_IsValidValue(int32_t value__) {
+  switch (value__) {
+    case Tile_GeomType_Unknown:
+    case Tile_GeomType_Point:
+    case Tile_GeomType_Linestring:
+    case Tile_GeomType_Polygon:
+      return YES;
+    default:
+      return NO;
+  }
+}
+
+#pragma mark - Tile
+
+@implementation Tile
+
+@dynamic layersArray, layersArray_Count;
+
+typedef struct Tile__storage_ {
+  uint32_t _has_storage_[1];
+  NSMutableArray *layersArray;
+} Tile__storage_;
+
+// This method is threadsafe because it is initially called
+// in +initialize for each subclass.
++ (GPBDescriptor *)descriptor {
+  static GPBDescriptor *descriptor = nil;
+  if (!descriptor) {
+    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
+    static GPBMessageFieldDescription fields[] = {
+      {
+        .name = "layersArray",
+        .dataTypeSpecific.clazz = GPBObjCClass(Tile_Layer),
+        .number = Tile_FieldNumber_LayersArray,
+        .hasIndex = GPBNoHasBit,
+        .offset = (uint32_t)offsetof(Tile__storage_, layersArray),
+        .flags = GPBFieldRepeated,
+        .dataType = GPBDataTypeMessage,
+      },
+    };
+    GPBDescriptor *localDescriptor =
+        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(Tile)
+                                   messageName:@"Tile"
+                               fileDescription:&VectorTileRoot_FileDescription
+                                        fields:fields
+                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
+                                   storageSize:sizeof(Tile__storage_)
+                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
+    static const GPBExtensionRange ranges[] = {
+      { .start = 16, .end = 8192 },
+    };
+    [localDescriptor setupExtensionRanges:ranges
+                                    count:(uint32_t)(sizeof(ranges) / sizeof(GPBExtensionRange))];
+    #if defined(DEBUG) && DEBUG
+      NSAssert(descriptor == nil, @"Startup recursed!");
+    #endif  // DEBUG
+    descriptor = localDescriptor;
+  }
+  return descriptor;
+}
+
+@end
+
+#pragma mark - Tile_Value
+
+@implementation Tile_Value
+
+@dynamic hasStringValue, stringValue;
+@dynamic hasFloatValue, floatValue;
+@dynamic hasDoubleValue, doubleValue;
+@dynamic hasIntValue, intValue;
+@dynamic hasUintValue, uintValue;
+@dynamic hasSintValue, sintValue;
+@dynamic hasBoolValue, boolValue;
+
+typedef struct Tile_Value__storage_ {
+  uint32_t _has_storage_[1];
+  float floatValue;
+  NSString *stringValue;
+  double doubleValue;
+  int64_t intValue;
+  uint64_t uintValue;
+  int64_t sintValue;
+} Tile_Value__storage_;
+
+// This method is threadsafe because it is initially called
+// in +initialize for each subclass.
++ (GPBDescriptor *)descriptor {
+  static GPBDescriptor *descriptor = nil;
+  if (!descriptor) {
+    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
+    static GPBMessageFieldDescription fields[] = {
+      {
+        .name = "stringValue",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Value_FieldNumber_StringValue,
+        .hasIndex = 0,
+        .offset = (uint32_t)offsetof(Tile_Value__storage_, stringValue),
+        .flags = GPBFieldOptional,
+        .dataType = GPBDataTypeString,
+      },
+      {
+        .name = "floatValue",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Value_FieldNumber_FloatValue,
+        .hasIndex = 1,
+        .offset = (uint32_t)offsetof(Tile_Value__storage_, floatValue),
+        .flags = GPBFieldOptional,
+        .dataType = GPBDataTypeFloat,
+      },
+      {
+        .name = "doubleValue",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Value_FieldNumber_DoubleValue,
+        .hasIndex = 2,
+        .offset = (uint32_t)offsetof(Tile_Value__storage_, doubleValue),
+        .flags = GPBFieldOptional,
+        .dataType = GPBDataTypeDouble,
+      },
+      {
+        .name = "intValue",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Value_FieldNumber_IntValue,
+        .hasIndex = 3,
+        .offset = (uint32_t)offsetof(Tile_Value__storage_, intValue),
+        .flags = GPBFieldOptional,
+        .dataType = GPBDataTypeInt64,
+      },
+      {
+        .name = "uintValue",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Value_FieldNumber_UintValue,
+        .hasIndex = 4,
+        .offset = (uint32_t)offsetof(Tile_Value__storage_, uintValue),
+        .flags = GPBFieldOptional,
+        .dataType = GPBDataTypeUInt64,
+      },
+      {
+        .name = "sintValue",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Value_FieldNumber_SintValue,
+        .hasIndex = 5,
+        .offset = (uint32_t)offsetof(Tile_Value__storage_, sintValue),
+        .flags = GPBFieldOptional,
+        .dataType = GPBDataTypeSInt64,
+      },
+      {
+        .name = "boolValue",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Value_FieldNumber_BoolValue,
+        .hasIndex = 6,
+        .offset = 7,  // Stored in _has_storage_ to save space.
+        .flags = GPBFieldOptional,
+        .dataType = GPBDataTypeBool,
+      },
+    };
+    GPBDescriptor *localDescriptor =
+        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(Tile_Value)
+                                   messageName:@"Value"
+                               fileDescription:&VectorTileRoot_FileDescription
+                                        fields:fields
+                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
+                                   storageSize:sizeof(Tile_Value__storage_)
+                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
+    static const GPBExtensionRange ranges[] = {
+      { .start = 8, .end = 536870912 },
+    };
+    [localDescriptor setupExtensionRanges:ranges
+                                    count:(uint32_t)(sizeof(ranges) / sizeof(GPBExtensionRange))];
+    [localDescriptor setupContainingMessageClass:GPBObjCClass(Tile)];
+    #if defined(DEBUG) && DEBUG
+      NSAssert(descriptor == nil, @"Startup recursed!");
+    #endif  // DEBUG
+    descriptor = localDescriptor;
+  }
+  return descriptor;
+}
+
+@end
+
+#pragma mark - Tile_Feature
+
+@implementation Tile_Feature
+
+@dynamic hasId_p, id_p;
+@dynamic tagsArray, tagsArray_Count;
+@dynamic hasType, type;
+@dynamic geometryArray, geometryArray_Count;
+
+typedef struct Tile_Feature__storage_ {
+  uint32_t _has_storage_[1];
+  Tile_GeomType type;
+  GPBUInt32Array *tagsArray;
+  GPBUInt32Array *geometryArray;
+  uint64_t id_p;
+} Tile_Feature__storage_;
+
+// This method is threadsafe because it is initially called
+// in +initialize for each subclass.
++ (GPBDescriptor *)descriptor {
+  static GPBDescriptor *descriptor = nil;
+  if (!descriptor) {
+    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
+    static GPBMessageFieldDescription fields[] = {
+      {
+        .name = "id_p",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Feature_FieldNumber_Id_p,
+        .hasIndex = 0,
+        .offset = (uint32_t)offsetof(Tile_Feature__storage_, id_p),
+        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue),
+        .dataType = GPBDataTypeUInt64,
+      },
+      {
+        .name = "tagsArray",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Feature_FieldNumber_TagsArray,
+        .hasIndex = GPBNoHasBit,
+        .offset = (uint32_t)offsetof(Tile_Feature__storage_, tagsArray),
+        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
+        .dataType = GPBDataTypeUInt32,
+      },
+      {
+        .name = "type",
+        .dataTypeSpecific.enumDescFunc = Tile_GeomType_EnumDescriptor,
+        .number = Tile_Feature_FieldNumber_Type,
+        .hasIndex = 1,
+        .offset = (uint32_t)offsetof(Tile_Feature__storage_, type),
+        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue | GPBFieldHasEnumDescriptor | GPBFieldClosedEnum),
+        .dataType = GPBDataTypeEnum,
+      },
+      {
+        .name = "geometryArray",
+        .dataTypeSpecific.clazz = Nil,
+        .number = Tile_Feature_FieldNumber_GeometryArray,
+        .hasIndex = GPBNoHasBit,
+        .offset = (uint32_t)offsetof(Tile_Feature__storage_, geometryArray),
+        .flags = (GPBFieldFlags)(GPBFieldRepeated | GPBFieldPacked),
+        .dataType = GPBDataTypeUInt32,
+      },
+    };
+    GPBDescriptor *localDescriptor =
+        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(Tile_Feature)
+                                   messageName:@"Feature"
+                               fileDescription:&VectorTileRoot_FileDescription
+                                        fields:fields
+                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
+                                   storageSize:sizeof(Tile_Feature__storage_)
+                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown)];
+    [localDescriptor setupContainingMessageClass:GPBObjCClass(Tile)];
+    #if defined(DEBUG) && DEBUG
+      NSAssert(descriptor == nil, @"Startup recursed!");
+    #endif  // DEBUG
+    descriptor = localDescriptor;
+  }
+  return descriptor;
+}
+
+@end
+
+#pragma mark - Tile_Layer
+
+@implementation Tile_Layer
+
+@dynamic hasVersion, version;
+@dynamic hasName, name;
+@dynamic featuresArray, featuresArray_Count;
+@dynamic keysArray, keysArray_Count;
+@dynamic valuesArray, valuesArray_Count;
+@dynamic hasExtent, extent;
+
+typedef struct Tile_Layer__storage_ {
+  uint32_t _has_storage_[1];
+  uint32_t extent;
+  uint32_t version;
+  NSString *name;
+  NSMutableArray *featuresArray;
+  NSMutableArray *keysArray;
+  NSMutableArray *valuesArray;
+} Tile_Layer__storage_;
+
+// This method is threadsafe because it is initially called
+// in +initialize for each subclass.
++ (GPBDescriptor *)descriptor {
+  static GPBDescriptor *descriptor = nil;
+  if (!descriptor) {
+    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
+    static GPBMessageFieldDescriptionWithDefault fields[] = {
+      {
+        .defaultValue.valueString = nil,
+        .core.name = "name",
+        .core.dataTypeSpecific.clazz = Nil,
+        .core.number = Tile_Layer_FieldNumber_Name,
+        .core.hasIndex = 1,
+        .core.offset = (uint32_t)offsetof(Tile_Layer__storage_, name),
+        .core.flags = GPBFieldRequired,
+        .core.dataType = GPBDataTypeString,
+      },
+      {
+        .defaultValue.valueMessage = nil,
+        .core.name = "featuresArray",
+        .core.dataTypeSpecific.clazz = GPBObjCClass(Tile_Feature),
+        .core.number = Tile_Layer_FieldNumber_FeaturesArray,
+        .core.hasIndex = GPBNoHasBit,
+        .core.offset = (uint32_t)offsetof(Tile_Layer__storage_, featuresArray),
+        .core.flags = GPBFieldRepeated,
+        .core.dataType = GPBDataTypeMessage,
+      },
+      {
+        .defaultValue.valueMessage = nil,
+        .core.name = "keysArray",
+        .core.dataTypeSpecific.clazz = Nil,
+        .core.number = Tile_Layer_FieldNumber_KeysArray,
+        .core.hasIndex = GPBNoHasBit,
+        .core.offset = (uint32_t)offsetof(Tile_Layer__storage_, keysArray),
+        .core.flags = GPBFieldRepeated,
+        .core.dataType = GPBDataTypeString,
+      },
+      {
+        .defaultValue.valueMessage = nil,
+        .core.name = "valuesArray",
+        .core.dataTypeSpecific.clazz = GPBObjCClass(Tile_Value),
+        .core.number = Tile_Layer_FieldNumber_ValuesArray,
+        .core.hasIndex = GPBNoHasBit,
+        .core.offset = (uint32_t)offsetof(Tile_Layer__storage_, valuesArray),
+        .core.flags = GPBFieldRepeated,
+        .core.dataType = GPBDataTypeMessage,
+      },
+      {
+        .defaultValue.valueUInt32 = 4096U,
+        .core.name = "extent",
+        .core.dataTypeSpecific.clazz = Nil,
+        .core.number = Tile_Layer_FieldNumber_Extent,
+        .core.hasIndex = 2,
+        .core.offset = (uint32_t)offsetof(Tile_Layer__storage_, extent),
+        .core.flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasDefaultValue),
+        .core.dataType = GPBDataTypeUInt32,
+      },
+      {
+        .defaultValue.valueUInt32 = 1U,
+        .core.name = "version",
+        .core.dataTypeSpecific.clazz = Nil,
+        .core.number = Tile_Layer_FieldNumber_Version,
+        .core.hasIndex = 0,
+        .core.offset = (uint32_t)offsetof(Tile_Layer__storage_, version),
+        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasDefaultValue),
+        .core.dataType = GPBDataTypeUInt32,
+      },
+    };
+    GPBDescriptor *localDescriptor =
+        [GPBDescriptor allocDescriptorForClass:GPBObjCClass(Tile_Layer)
+                                   messageName:@"Layer"
+                               fileDescription:&VectorTileRoot_FileDescription
+                                        fields:fields
+                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
+                                   storageSize:sizeof(Tile_Layer__storage_)
+                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown | GPBDescriptorInitializationFlag_ClosedEnumSupportKnown | GPBDescriptorInitializationFlag_FieldsWithDefault)];
+    static const GPBExtensionRange ranges[] = {
+      { .start = 16, .end = 536870912 },
+    };
+    [localDescriptor setupExtensionRanges:ranges
+                                    count:(uint32_t)(sizeof(ranges) / sizeof(GPBExtensionRange))];
+    [localDescriptor setupContainingMessageClass:GPBObjCClass(Tile)];
+    #if defined(DEBUG) && DEBUG
+      NSAssert(descriptor == nil, @"Startup recursed!");
+    #endif  // DEBUG
+    descriptor = localDescriptor;
+  }
+  return descriptor;
+}
+
+@end
+
+
+#pragma clang diagnostic pop
+
+// @@protoc_insertion_point(global_scope)
+
+// clang-format on
diff --git a/node_modules/react-native-maps/ios/AirMaps/AIRMapUrlTileCachedOverlay.m b/node_modules/react-native-maps/ios/AirMaps/AIRMapUrlTileCachedOverlay.m
index 63d305c..bcfdcf2 100644
--- a/node_modules/react-native-maps/ios/AirMaps/AIRMapUrlTileCachedOverlay.m
+++ b/node_modules/react-native-maps/ios/AirMaps/AIRMapUrlTileCachedOverlay.m
@@ -12,224 +12,293 @@
 @end
 
 @implementation AIRMapUrlTileCachedOverlay {
-    CIContext *_ciContext;
-    CGColorSpaceRef _colorspace;
-    NSURLSession *_urlSession;
+  CIContext *_ciContext;
+  CGColorSpaceRef _colorspace;
+  NSURLSession *_urlSession;
 }
 
-- (void)loadTileAtPath:(MKTileOverlayPath)path result:(void (^)(NSData *, NSError *))result
-{
-    if (!result) return;
-
-    NSInteger maximumZ = self.maximumNativeZ ? self.maximumNativeZ : path.z;
-    [self scaleIfNeededLowerZoomTile:path maximumZ:maximumZ result:^(NSData *image, NSError *error) {
-        if (!image && self.offlineMode && self.tileCachePath) {
-            NSInteger zoomLevelToStart = (path.z > maximumZ) ? maximumZ - 1 : path.z - 1; 
-            NSInteger minimumZoomToSearch = self.minimumZ >= zoomLevelToStart - 3 ? self.minimumZ : zoomLevelToStart - 3;
-            [self findLowerZoomTileAndScale:path tryZ:zoomLevelToStart minZ:minimumZoomToSearch result:result];
-        } else {
-            result(image, error);
-        }    
-    }];
+- (void)loadTileAtPath:(MKTileOverlayPath)path
+                result:(void (^)(NSData *, NSError *))result {
+  if (!result)
+    return;
+
+  NSInteger maximumZ = self.maximumNativeZ ? self.maximumNativeZ : path.z;
+  [self
+      scaleIfNeededLowerZoomTile:path
+                        maximumZ:maximumZ
+                          result:^(NSData *image, NSError *error) {
+                            if (!image && self.offlineMode &&
+                                self.tileCachePath) {
+                              NSInteger zoomLevelToStart = (path.z > maximumZ)
+                                                               ? maximumZ - 1
+                                                               : path.z - 1;
+                              NSInteger minimumZoomToSearch =
+                                  self.minimumZ >= zoomLevelToStart - 3
+                                      ? self.minimumZ
+                                      : zoomLevelToStart - 3;
+                              [self
+                                  findLowerZoomTileAndScale:path
+                                                       tryZ:zoomLevelToStart
+                                                       minZ:minimumZoomToSearch
+                                                     result:result];
+                            } else {
+                              result(image, error);
+                            }
+                          }];
 }
 
-- (void)scaleIfNeededLowerZoomTile:(MKTileOverlayPath)path maximumZ:(NSInteger)maximumZ result:(void (^)(NSData *, NSError *))result
-{
-    NSInteger overZoomLevel = path.z - maximumZ;
-    if (overZoomLevel <= 0) {
-        [self getTileImage:path result:result];
-        return;
-    }
+- (void)scaleIfNeededLowerZoomTile:(MKTileOverlayPath)path
+                          maximumZ:(NSInteger)maximumZ
+                            result:(void (^)(NSData *, NSError *))result {
+  NSInteger overZoomLevel = path.z - maximumZ;
+  if (overZoomLevel <= 0) {
+    [self getTileImage:path result:result];
+    return;
+  }
+
+  NSInteger zoomFactor = 1 << overZoomLevel;
+
+  MKTileOverlayPath parentTile;
+  parentTile.x = path.x >> overZoomLevel;
+  parentTile.y = path.y >> overZoomLevel;
+  parentTile.z = path.z - overZoomLevel;
+  parentTile.contentScaleFactor = path.contentScaleFactor;
+
+  NSInteger xOffset = path.x % zoomFactor;
+  NSInteger yOffset = path.y % zoomFactor;
+  NSInteger subTileSize = self.tileSize.width / zoomFactor;
+
+  if (!_ciContext)
+    _ciContext = [CIContext context];
+  if (!_colorspace)
+    _colorspace = CGColorSpaceCreateDeviceRGB();
+
+  [self getTileImage:parentTile
+              result:^(NSData *image, NSError *error) {
+                if (!image) {
+                  result(nil, nil);
+                  return;
+                }
 
-    NSInteger zoomFactor = 1 << overZoomLevel;
-    
-    MKTileOverlayPath parentTile;
-    parentTile.x = path.x >> overZoomLevel;
-    parentTile.y = path.y >> overZoomLevel;
-    parentTile.z = path.z - overZoomLevel;
-    parentTile.contentScaleFactor = path.contentScaleFactor;
-    
-    NSInteger xOffset = path.x % zoomFactor;
-    NSInteger yOffset = path.y % zoomFactor;
-    NSInteger subTileSize = self.tileSize.width / zoomFactor;
-
-    if (!_ciContext) _ciContext = [CIContext context];
-    if (!_colorspace) _colorspace = CGColorSpaceCreateDeviceRGB();
-
-    [self getTileImage:parentTile result:^(NSData *image, NSError *error) {
-        if (!image) {
-            result(nil, nil);
-            return;
-        }
-
-        CIImage* originalCIImage = [CIImage imageWithData:image];
-
-        CGRect rect;
-        rect.origin.x = xOffset * subTileSize;
-        rect.origin.y = self.tileSize.width - (yOffset + 1) * subTileSize;
-        rect.size.width = subTileSize;
-        rect.size.height = subTileSize;
-        CIVector *inputRect = [CIVector vectorWithCGRect:rect];
-        CIFilter* cropFilter = [CIFilter filterWithName:@"CICrop"];
-        [cropFilter setValue:originalCIImage forKey:@"inputImage"];
-        [cropFilter setValue:inputRect forKey:@"inputRectangle"];
-
-        CGAffineTransform trans = CGAffineTransformMakeScale(zoomFactor, zoomFactor);
-        CIImage* scaledCIImage = [cropFilter.outputImage imageByApplyingTransform:trans];
-
-        NSData *finalImage = [_ciContext PNGRepresentationOfImage:scaledCIImage format:kCIFormatABGR8 colorSpace:_colorspace options:nil];
-        result(finalImage, nil);
-    }];    
+                CIImage *originalCIImage = [CIImage imageWithData:image];
+
+                CGRect rect;
+                rect.origin.x = xOffset * subTileSize;
+                rect.origin.y =
+                    self.tileSize.width - (yOffset + 1) * subTileSize;
+                rect.size.width = subTileSize;
+                rect.size.height = subTileSize;
+                CIVector *inputRect = [CIVector vectorWithCGRect:rect];
+                CIFilter *cropFilter = [CIFilter filterWithName:@"CICrop"];
+                [cropFilter setValue:originalCIImage forKey:@"inputImage"];
+                [cropFilter setValue:inputRect forKey:@"inputRectangle"];
+
+                CGAffineTransform trans =
+                    CGAffineTransformMakeScale(zoomFactor, zoomFactor);
+                CIImage *scaledCIImage =
+                    [cropFilter.outputImage imageByApplyingTransform:trans];
+
+                NSData *finalImage =
+                    [_ciContext PNGRepresentationOfImage:scaledCIImage
+                                                  format:kCIFormatABGR8
+                                              colorSpace:_colorspace
+                                                 options:nil];
+                result(finalImage, nil);
+              }];
 }
 
-- (void)findLowerZoomTileAndScale:(MKTileOverlayPath)path tryZ:(NSInteger)tryZ minZ:(NSInteger)minZ result:(void (^)(NSData *, NSError *))result
-{
-    [self scaleIfNeededLowerZoomTile:path maximumZ:tryZ result:^(NSData *image, NSError *error) {
-        if (image) {
-            result(image, error);
-        } else if (tryZ >= minZ) {
-            [self findLowerZoomTileAndScale:path tryZ:tryZ - 1 minZ:minZ result:result];
-        } else {
-            result(nil, nil);
-        }
-    }];
+- (void)findLowerZoomTileAndScale:(MKTileOverlayPath)path
+                             tryZ:(NSInteger)tryZ
+                             minZ:(NSInteger)minZ
+                           result:(void (^)(NSData *, NSError *))result {
+  [self scaleIfNeededLowerZoomTile:path
+                          maximumZ:tryZ
+                            result:^(NSData *image, NSError *error) {
+                              if (image) {
+                                result(image, error);
+                              } else if (tryZ >= minZ) {
+                                [self findLowerZoomTileAndScale:path
+                                                           tryZ:tryZ - 1
+                                                           minZ:minZ
+                                                         result:result];
+                              } else {
+                                result(nil, nil);
+                              }
+                            }];
 }
 
-- (void)getTileImage:(MKTileOverlayPath)path result:(void (^)(NSData *, NSError *))result
-{
-    NSData *image;
-    NSURL *tileCacheFileDirectory = [NSURL URLWithString:[NSString stringWithFormat:@"%d/%d/", (int)path.z, (int)path.x] relativeToURL:self.tileCachePath];
-    NSURL *tileCacheFilePath = [NSURL URLWithString:[NSString stringWithFormat:@"%d", (int)path.y] relativeToURL:tileCacheFileDirectory];
-
-    if (self.tileCachePath) {
-        image = [self readTileImage:path fromFilePath:tileCacheFilePath];
-        if (image) {
-            result(image, nil);
-            if (!self.offlineMode && self.tileCacheMaxAge) {
-                [self checkForRefresh:path fromFilePath:tileCacheFilePath];
-            }
-        }
+- (void)getTileImage:(MKTileOverlayPath)path
+              result:(void (^)(NSData *, NSError *))result {
+  NSData *image;
+  NSURL *tileCacheFileDirectory =
+      [NSURL URLWithString:[NSString stringWithFormat:@"%d/%d/", (int)path.z,
+                                                      (int)path.x]
+             relativeToURL:self.tileCachePath];
+  NSURL *tileCacheFilePath =
+      [NSURL URLWithString:[NSString stringWithFormat:@"%d", (int)path.y]
+             relativeToURL:tileCacheFileDirectory];
+
+  if (self.tileCachePath) {
+    image = [self readTileImage:path fromFilePath:tileCacheFilePath];
+    if (image) {
+      result(image, nil);
+      if (!self.offlineMode && self.tileCacheMaxAge) {
+        [self checkForRefresh:path fromFilePath:tileCacheFilePath];
+      }
     }
-
-    if (!image) {
-        if (!self.offlineMode) {
-            [self fetchTile:path result:^(NSData *image, NSError *error) {
-                result(image, error);
-                if (image && self.tileCachePath) {
-                    [self writeTileImage:tileCacheFileDirectory withTileCacheFilePath:tileCacheFilePath withTileData:image];
-                }
-            }];
-        } else {
-            result(nil, nil);
-        }
+  }
+
+  if (!image) {
+    if (!self.offlineMode) {
+      [self fetchTile:path
+               result:^(NSData *image, NSError *error) {
+                 result(image, error);
+                 if (image && self.tileCachePath) {
+                   [self writeTileImage:tileCacheFileDirectory
+                       withTileCacheFilePath:tileCacheFilePath
+                                withTileData:image];
+                 }
+               }];
+    } else {
+      result(nil, nil);
     }
+  }
 }
 
-- (NSData *)readTileImage:(MKTileOverlayPath)path fromFilePath:(NSURL *)tileCacheFilePath
-{
-    NSError *error;
-
-    if ([[NSFileManager defaultManager] fileExistsAtPath:[tileCacheFilePath path]]) {
-        if (!self.tileCacheMaxAge) {
-            [[NSFileManager defaultManager] setAttributes:@{NSFileModificationDate:[NSDate date]}
-                            ofItemAtPath:[tileCacheFilePath path]
-                                    error:&error];
-        }
-
-        NSData *tile = [NSData dataWithContentsOfFile:[tileCacheFilePath path]];
-        NSLog(@"tileCache HIT for %d_%d_%d", (int)path.z, (int)path.x, (int)path.y);
-        NSLog(@"tileCache HIT, with max age set at %d", self.tileCacheMaxAge);
-        return tile;
-    } else {
-        NSLog(@"tileCache MISS for %d_%d_%d", (int)path.z, (int)path.x, (int)path.y);
-        return nil;
+- (NSData *)readTileImage:(MKTileOverlayPath)path
+             fromFilePath:(NSURL *)tileCacheFilePath {
+  NSError *error;
+
+  if ([[NSFileManager defaultManager]
+          fileExistsAtPath:[tileCacheFilePath path]]) {
+    if (!self.tileCacheMaxAge) {
+      [[NSFileManager defaultManager]
+          setAttributes:@{NSFileModificationDate : [NSDate date]}
+           ofItemAtPath:[tileCacheFilePath path]
+                  error:&error];
     }
+
+    NSData *tile = [NSData dataWithContentsOfFile:[tileCacheFilePath path]];
+    NSLog(@"tileCache HIT for %d_%d_%d", (int)path.z, (int)path.x, (int)path.y);
+    NSLog(@"tileCache HIT, with max age set at %d", self.tileCacheMaxAge);
+    return tile;
+  } else {
+    NSLog(@"tileCache MISS for %d_%d_%d", (int)path.z, (int)path.x,
+          (int)path.y);
+    return nil;
+  }
 }
 
-- (void)fetchTile:(MKTileOverlayPath)path result:(void (^)(NSData *, NSError *))result
-{
-    if (!_urlSession) [self createURLSession];
+- (void)fetchTile:(MKTileOverlayPath)path
+           result:(void (^)(NSData *, NSError *))result {
+  if (!_urlSession)
+    [self createURLSession];
 
-    [[_urlSession dataTaskWithURL:[self URLForTilePath:path]
-        completionHandler:^(NSData *data,
-                            NSURLResponse *response,
-                            NSError *error) {
-            result(data, error);
-        }] resume];
+  [[_urlSession dataTaskWithURL:[self URLForTilePath:path]
+              completionHandler:^(NSData *data, NSURLResponse *response,
+                                  NSError *error) {
+                result(data, error);
+              }] resume];
 }
 
-- (void)writeTileImage:(NSURL *)tileCacheFileDirectory withTileCacheFilePath:(NSURL *)tileCacheFilePath withTileData:(NSData *)data
-{
-    NSError *error;
-    
-    if (![[NSFileManager defaultManager] fileExistsAtPath:[tileCacheFileDirectory path]]) {
-        [[NSFileManager defaultManager] createDirectoryAtPath:[tileCacheFileDirectory path] withIntermediateDirectories:YES attributes:nil error:&error];
-        if (error) {
-            NSLog(@"Error: %@", error);
-            return;
-        }
+- (void)writeTileImage:(NSURL *)tileCacheFileDirectory
+    withTileCacheFilePath:(NSURL *)tileCacheFilePath
+             withTileData:(NSData *)data {
+  NSError *error;
+
+  if (![[NSFileManager defaultManager]
+          fileExistsAtPath:[tileCacheFileDirectory path]]) {
+    [[NSFileManager defaultManager]
+              createDirectoryAtPath:[tileCacheFileDirectory path]
+        withIntermediateDirectories:YES
+                         attributes:nil
+                              error:&error];
+    if (error) {
+      NSLog(@"Error: %@", error);
+      return;
     }
+  }
 
-    [[NSFileManager defaultManager] createFileAtPath:[tileCacheFilePath path] contents:data attributes:nil];
-    NSLog(@"tileCache SAVED tile %@", [tileCacheFilePath path]);
+  [[NSFileManager defaultManager] createFileAtPath:[tileCacheFilePath path]
+                                          contents:data
+                                        attributes:nil];
+  NSLog(@"tileCache SAVED tile %@", [tileCacheFilePath path]);
 }
 
-- (void)createTileCacheDirectory
-{
-    NSError *error;
-    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
-    NSString *documentsDirectory = [paths objectAtIndex:0];
-    NSString *tileCacheBaseDirectory = [NSString stringWithFormat:@"%@/tileCache", documentsDirectory];
-    self.tileCachePath = [NSURL fileURLWithPath:tileCacheBaseDirectory isDirectory:YES];
-    
-    if (![[NSFileManager defaultManager] fileExistsAtPath:[self.tileCachePath path]])
-        [[NSFileManager defaultManager] createDirectoryAtPath:[self.tileCachePath path] withIntermediateDirectories:NO attributes:nil error:&error];
+- (void)createTileCacheDirectory {
+  NSError *error;
+  NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,
+                                                       NSUserDomainMask, YES);
+  NSString *documentsDirectory = [paths objectAtIndex:0];
+  NSString *tileCacheBaseDirectory =
+      [NSString stringWithFormat:@"%@/tileCache", documentsDirectory];
+  self.tileCachePath = [NSURL fileURLWithPath:tileCacheBaseDirectory
+                                  isDirectory:YES];
+
+  if (![[NSFileManager defaultManager]
+          fileExistsAtPath:[self.tileCachePath path]])
+    [[NSFileManager defaultManager]
+              createDirectoryAtPath:[self.tileCachePath path]
+        withIntermediateDirectories:NO
+                         attributes:nil
+                              error:&error];
 }
 
-- (void)createURLSession
-{
- if (!_urlSession) {
-     _urlSession = [NSURLSession sharedSession];
- }
+- (void)createURLSession {
+  if (!_urlSession) {
+    _urlSession = [NSURLSession sharedSession];
+  }
 }
 
-- (void)checkForRefresh:(MKTileOverlayPath)path fromFilePath:(NSURL *)tileCacheFilePath
-{
-    if ([self doesFileNeedRefresh:path fromFilePath:tileCacheFilePath withMaxAge:self.tileCacheMaxAge]) {
-        dispatch_async(dispatch_get_global_queue(QOS_CLASS_UTILITY, 0), ^ {
-            // This code runs asynchronously!
-            if ([self doesFileNeedRefresh:path fromFilePath:tileCacheFilePath withMaxAge:self.tileCacheMaxAge]) {
-                if (!_urlSession) [self createURLSession];
-
-                [[_urlSession dataTaskWithURL:[self URLForTilePath:path]
-                    completionHandler:^(NSData *data,
-                                        NSURLResponse *response,
+- (void)checkForRefresh:(MKTileOverlayPath)path
+           fromFilePath:(NSURL *)tileCacheFilePath {
+  if ([self doesFileNeedRefresh:path
+                   fromFilePath:tileCacheFilePath
+                     withMaxAge:self.tileCacheMaxAge]) {
+    dispatch_async(dispatch_get_global_queue(QOS_CLASS_UTILITY, 0), ^{
+      // This code runs asynchronously!
+      if ([self doesFileNeedRefresh:path
+                       fromFilePath:tileCacheFilePath
+                         withMaxAge:self.tileCacheMaxAge]) {
+        if (!_urlSession)
+          [self createURLSession];
+
+        [[_urlSession dataTaskWithURL:[self URLForTilePath:path]
+                    completionHandler:^(NSData *data, NSURLResponse *response,
                                         NSError *error) {
-                    if (!error) {
-                        [[NSFileManager defaultManager] createFileAtPath:[tileCacheFilePath path] contents:data attributes:nil];
-                        NSLog(@"tileCache File refreshed at %@", [tileCacheFilePath path]);
-                    }
-                }] resume];             
-            }
-        });
-    }
+                      if (!error) {
+                        [[NSFileManager defaultManager]
+                            createFileAtPath:[tileCacheFilePath path]
+                                    contents:data
+                                  attributes:nil];
+                        NSLog(@"tileCache File refreshed at %@",
+                              [tileCacheFilePath path]);
+                      }
+                    }] resume];
+      }
+    });
+  }
 }
 
-- (BOOL)doesFileNeedRefresh:(MKTileOverlayPath)path fromFilePath:(NSURL *)tileCacheFilePath withMaxAge:(NSInteger)tileCacheMaxAge
-{
-    NSError *error;
-    NSDictionary<NSFileAttributeKey, id> *fileAttributes = [[NSFileManager defaultManager] attributesOfItemAtPath:[tileCacheFilePath path] error:&error]; 
-
-    if (fileAttributes) {
-        NSDate *modificationDate = fileAttributes[@"NSFileModificationDate"];
-        if (modificationDate) {
-            if (-1 * (int)modificationDate.timeIntervalSinceNow > tileCacheMaxAge) {
-                return YES;
-            }
-        }
+- (BOOL)doesFileNeedRefresh:(MKTileOverlayPath)path
+               fromFilePath:(NSURL *)tileCacheFilePath
+                 withMaxAge:(NSInteger)tileCacheMaxAge {
+  NSError *error;
+  NSDictionary<NSFileAttributeKey, id> *fileAttributes =
+      [[NSFileManager defaultManager]
+          attributesOfItemAtPath:[tileCacheFilePath path]
+                           error:&error];
+
+  if (fileAttributes) {
+    NSDate *modificationDate = fileAttributes[@"NSFileModificationDate"];
+    if (modificationDate) {
+      if (-1 * (int)modificationDate.timeIntervalSinceNow > tileCacheMaxAge) {
+        return YES;
+      }
     }
+  }
 
-    return NO;
+  return NO;
 }
 
 @end
diff --git a/node_modules/react-native-maps/lib/MapPMTile.d.ts b/node_modules/react-native-maps/lib/MapPMTile.d.ts
new file mode 100644
index 0000000..75b0cc9
--- /dev/null
+++ b/node_modules/react-native-maps/lib/MapPMTile.d.ts
@@ -0,0 +1,134 @@
+import * as React from 'react';
+import { ProviderContext, NativeComponent, MapManagerCommand, UIManagerCommand } from './decorateMapComponent';
+import { ViewProps } from 'react-native';
+export type MapPMTileProps = ViewProps & {
+    /**
+     * Doubles tile size from 256 to 512 utilising higher zoom levels
+     * i.e loading 4 higher zoom level tiles and combining them for one high-resolution tile.
+     * iOS does this automatically, even if it is not desirable always.
+     * NB! using this makes text labels smaller than in the original map style.
+     *
+     * @platform iOS: Not supported
+     * @platform Android: Supported
+     */
+    doubleTileSize?: boolean;
+    /**
+     * Allow tiles using the TMS coordinate system (origin bottom left) to be used,
+     * and displayed at their correct coordinates.
+     *
+     * @platform iOS: Supported
+     * @platform Android: Supported
+     */
+    flipY?: boolean;
+    /**
+     * The maximum native zoom level for this tile overlay i.e. the highest zoom level that the tile server provides.
+     * Tiles are auto-scaled for higher zoom levels.
+     *
+     * @platform iOS: Apple Maps only
+     * @platform Android: Supported
+     */
+    maximumNativeZ?: number;
+    /**
+     * The maximum zoom level for this tile overlay.
+     *
+     * @platform iOS: Supported
+     * @platform Android: Supported
+     */
+    maximumZ?: number;
+    /**
+     * The minimum zoom level for this tile overlay.
+     *
+     * @platform iOS: Supported
+     * @platform Android: Supported
+     */
+    minimumZ?: number;
+    /**
+     * In offline-mode tiles are not fetched from the tile servers, rather only tiles stored in the cache directory are used.
+     * Furthermore automated tile scaling is activated: if tile at a desired zoom level is not found from the cache directory,
+     * then lower zoom level tile is used (up to 4 levels lower) and scaled.
+     *
+     * @default false
+     * @platform iOS: Apple Maps only
+     * @platform Android: Supported
+     */
+    offlineMode?: boolean;
+    /**
+     * Map layer opacity. Value between 0 - 1, with 0 meaning fully transparent.
+     *
+     * @platform iOS: Apple Maps only
+     * @platform Android: Supported
+     */
+    opacity?: number;
+    /**
+     * Corresponds to MKTileOverlay canReplaceMapContent i.e. if true then underlying iOS basemap is not shown.
+     *
+     * @default false
+     * @platform iOS: Apple Maps only
+     * @platform Android: Not supported
+     */
+    shouldReplaceMapContent?: boolean;
+    /**
+     * Defines maximum age in seconds for a cached tile before it's refreshed.
+     *
+     * NB! Refresh logic is "serve-stale-while-refresh"
+     * i.e. to ensure map availability a stale (over max age) tile is served
+     * while a tile refresh process is started in the background.
+     *
+     * @platform iOS: Apple Maps only
+     * @platform Android: Supported
+     */
+    tileCacheMaxAge?: number;
+    /**
+     * Enable caching of tiles in the specified directory.
+     * Directory can be specified either as a normal path or in URL format (`file://`).
+     *
+     * Tiles are stored in tileCachePath directory as `/{z}/{x}/{y}` i.e. in sub-directories 2-levels deep,
+     * filename is tile y-coordinate without any filetype-extension.
+     *
+     * NB! All cache management needs to be implemented by client e.g. deleting tiles to manage use of storage space etc.
+     *
+     * @platform iOS: Apple Maps only
+     * @platform Android: Supported
+     */
+    tileCachePath?: string;
+    /**
+     * Tile size, default size is 256 (for tiles of 256 _ 256 pixels).
+     * High-res (aka 'retina') tiles are 512 (tiles of 512 _ 512 pixels)
+     *
+     * @platform iOS: Apple Maps only
+     * @platform Android: Supported
+     */
+    tileSize?: number;
+    /**
+     * The url template of the map tileserver.
+     * (URLTile) The patterns {x} {y} {z} will be replaced at runtime.
+     * For example, http://c.tile.openstreetmap.org/{z}/{x}/{y}.png.
+     *
+     * It is also possible to refer to tiles in local filesystem with file:///top-level-directory/sub-directory/{z}/{x}/{y}.png URL-format.
+     * (WMSTile) The patterns {minX} {maxX} {minY} {maxY} {width} {height} will be replaced at runtime according to EPSG:900913 specification bounding box.
+     * For example, https://demo.geo-solutions.it/geoserver/tiger/wms?service=WMS&version=1.1.0&request=GetMap&layers=tiger:poi&styles=&bbox={minX},{minY},{maxX},{maxY}&width={width}&height={height}&srs=EPSG:900913&format=image/png&transparent=true&format_options=dpi:213.
+     *
+     * @platform iOS: Supported
+     * @platform Android: Supported
+     */
+    urlTemplate: string;
+    /**
+     * The order in which this tile overlay is drawn with respect to other overlays.
+     * An overlay with a larger z-index is drawn over overlays with smaller z-indices.
+     * The order of overlays with the same z-index is arbitrary.
+     *
+     * @platform iOS: Google Maps only
+     * @platform Android: Supported
+     */
+    zIndex?: number;
+};
+type NativeProps = MapPMTileProps;
+export declare class MapPMTile extends React.Component<MapPMTileProps> {
+    context: React.ContextType<typeof ProviderContext>;
+    getNativeComponent: () => NativeComponent<NativeProps>;
+    getMapManagerCommand: (name: string) => MapManagerCommand;
+    getUIManagerCommand: (name: string) => UIManagerCommand;
+    render(): JSX.Element;
+}
+declare const _default: typeof MapPMTile;
+export default _default;
diff --git a/node_modules/react-native-maps/lib/MapPMTile.js b/node_modules/react-native-maps/lib/MapPMTile.js
new file mode 100644
index 0000000..2e5823b
--- /dev/null
+++ b/node_modules/react-native-maps/lib/MapPMTile.js
@@ -0,0 +1,44 @@
+"use strict";
+var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    var desc = Object.getOwnPropertyDescriptor(m, k);
+    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
+      desc = { enumerable: true, get: function() { return m[k]; } };
+    }
+    Object.defineProperty(o, k2, desc);
+}) : (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    o[k2] = m[k];
+}));
+var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
+    Object.defineProperty(o, "default", { enumerable: true, value: v });
+}) : function(o, v) {
+    o["default"] = v;
+});
+var __importStar = (this && this.__importStar) || function (mod) {
+    if (mod && mod.__esModule) return mod;
+    var result = {};
+    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
+    __setModuleDefault(result, mod);
+    return result;
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.MapPMTile = void 0;
+const React = __importStar(require("react"));
+const decorateMapComponent_1 = __importStar(require("./decorateMapComponent"));
+class MapPMTile extends React.Component {
+    getNativeComponent;
+    getMapManagerCommand;
+    getUIManagerCommand;
+    render() {
+        const AIRMapPMTile = this.getNativeComponent();
+        return <AIRMapPMTile {...this.props}/>;
+    }
+}
+exports.MapPMTile = MapPMTile;
+exports.default = (0, decorateMapComponent_1.default)(MapPMTile, 'PMTile', {
+    google: {
+        ios: decorateMapComponent_1.SUPPORTED,
+        android: decorateMapComponent_1.USES_DEFAULT_IMPLEMENTATION,
+    },
+});
diff --git a/node_modules/react-native-maps/lib/decorateMapComponent.d.ts b/node_modules/react-native-maps/lib/decorateMapComponent.d.ts
index 87b44b2..4133386 100644
--- a/node_modules/react-native-maps/lib/decorateMapComponent.d.ts
+++ b/node_modules/react-native-maps/lib/decorateMapComponent.d.ts
@@ -11,6 +11,7 @@ import { MapMarker } from './MapMarker';
 import { MapPolygon } from './MapPolygon';
 import { MapPolyline } from './MapPolyline';
 import { MapUrlTile } from './MapUrlTile';
+import { MapPMTile } from './MapPMTile';
 import { MapWMSTile } from './MapWMSTile';
 export declare const SUPPORTED: ImplementationStatus;
 export declare const USES_DEFAULT_IMPLEMENTATION: ImplementationStatus;
@@ -30,6 +31,6 @@ type Providers = {
 export type UIManagerCommand = number;
 export type MapManagerCommand = any;
 export type NativeComponent<H = unknown> = HostComponent<H> | ReturnType<typeof createNotSupportedComponent>;
-type Component = typeof MapCallout | typeof MapCalloutSubview | typeof MapCircle | typeof MapHeatmap | typeof MapLocalTile | typeof MapMarker | typeof MapOverlay | typeof MapPolygon | typeof MapPolyline | typeof MapUrlTile | typeof MapWMSTile;
-type ComponentName = 'Callout' | 'CalloutSubview' | 'Circle' | 'Heatmap' | 'LocalTile' | 'Marker' | 'Overlay' | 'Polygon' | 'Polyline' | 'UrlTile' | 'WMSTile';
+type Component = typeof MapCallout | typeof MapCalloutSubview | typeof MapCircle | typeof MapHeatmap | typeof MapLocalTile | typeof MapMarker | typeof MapOverlay | typeof MapPolygon | typeof MapPolyline | typeof MapUrlTile | typeof MapPMTile | typeof MapWMSTile;
+type ComponentName = 'Callout' | 'CalloutSubview' | 'Circle' | 'Heatmap' | 'LocalTile' | 'Marker' | 'Overlay' | 'Polygon' | 'Polyline' | 'UrlTile' | 'PMTile' | 'WMSTile';
 export {};
diff --git a/node_modules/react-native-maps/lib/index.d.ts b/node_modules/react-native-maps/lib/index.d.ts
index 9fe6aa1..657fbab 100644
--- a/node_modules/react-native-maps/lib/index.d.ts
+++ b/node_modules/react-native-maps/lib/index.d.ts
@@ -15,6 +15,8 @@ export { default as Circle, MapCircle } from './MapCircle';
 export type { MapCircleProps } from './MapCircle';
 export { default as UrlTile, MapUrlTile } from './MapUrlTile';
 export type { MapUrlTileProps } from './MapUrlTile';
+export { default as PMTile, MapPMTile } from './MapPMTile';
+export type { MapPMTileProps } from './MapPMTile';
 export { default as WMSTile, MapWMSTile } from './MapWMSTile';
 export type { MapWMSTileProps } from './MapWMSTile';
 export { default as LocalTile, MapLocalTile } from './MapLocalTile';
diff --git a/node_modules/react-native-maps/lib/index.js b/node_modules/react-native-maps/lib/index.js
index b752130..2c74fd6 100644
--- a/node_modules/react-native-maps/lib/index.js
+++ b/node_modules/react-native-maps/lib/index.js
@@ -29,7 +29,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.OverlayAnimated = exports.MarkerAnimated = exports.enableLatestRenderer = exports.MAP_TYPES = exports.Animated = exports.Overlay = exports.Marker = exports.Geojson = exports.AnimatedRegion = exports.MapCalloutSubview = exports.CalloutSubview = exports.MapCallout = exports.Callout = exports.MapLocalTile = exports.LocalTile = exports.MapWMSTile = exports.WMSTile = exports.MapUrlTile = exports.UrlTile = exports.MapCircle = exports.Circle = exports.MapPolygon = exports.Polygon = exports.MapHeatmap = exports.Heatmap = exports.MapPolyline = exports.Polyline = exports.MapOverlay = exports.MapMarker = void 0;
+exports.OverlayAnimated = exports.MarkerAnimated = exports.enableLatestRenderer = exports.MAP_TYPES = exports.Animated = exports.Overlay = exports.Marker = exports.Geojson = exports.AnimatedRegion = exports.MapCalloutSubview = exports.CalloutSubview = exports.MapCallout = exports.Callout = exports.MapLocalTile = exports.LocalTile = exports.MapWMSTile = exports.WMSTile = exports.MapPMTile = exports.PMTile = exports.MapUrlTile = exports.UrlTile = exports.MapCircle = exports.Circle = exports.MapPolygon = exports.Polygon = exports.MapHeatmap = exports.Heatmap = exports.MapPolyline = exports.Polyline = exports.MapOverlay = exports.MapMarker = void 0;
 const MapView_1 = __importStar(require("./MapView"));
 Object.defineProperty(exports, "Animated", { enumerable: true, get: function () { return MapView_1.AnimatedMapView; } });
 Object.defineProperty(exports, "MAP_TYPES", { enumerable: true, get: function () { return MapView_1.MAP_TYPES; } });
@@ -57,6 +57,9 @@ Object.defineProperty(exports, "MapCircle", { enumerable: true, get: function ()
 var MapUrlTile_1 = require("./MapUrlTile");
 Object.defineProperty(exports, "UrlTile", { enumerable: true, get: function () { return __importDefault(MapUrlTile_1).default; } });
 Object.defineProperty(exports, "MapUrlTile", { enumerable: true, get: function () { return MapUrlTile_1.MapUrlTile; } });
+var MapPMTile_1 = require("./MapPMTile");
+Object.defineProperty(exports, "PMTile", { enumerable: true, get: function () { return __importDefault(MapPMTile_1).default; } });
+Object.defineProperty(exports, "MapPMTile", { enumerable: true, get: function () { return MapPMTile_1.MapPMTile; } });
 var MapWMSTile_1 = require("./MapWMSTile");
 Object.defineProperty(exports, "WMSTile", { enumerable: true, get: function () { return __importDefault(MapWMSTile_1).default; } });
 Object.defineProperty(exports, "MapWMSTile", { enumerable: true, get: function () { return MapWMSTile_1.MapWMSTile; } });
diff --git a/node_modules/react-native-maps/react-native-google-maps.podspec b/node_modules/react-native-maps/react-native-google-maps.podspec
index ab7cd27..2622a6d 100644
--- a/node_modules/react-native-maps/react-native-google-maps.podspec
+++ b/node_modules/react-native-maps/react-native-google-maps.podspec
@@ -18,4 +18,9 @@ Pod::Spec.new do |s|
   s.dependency 'React-Core'
   s.dependency 'GoogleMaps', '7.3.0'
   s.dependency 'Google-Maps-iOS-Utils', '4.1.0'
+
+  s.subspec 'NonARCFiles' do |ss|
+    ss.source_files = "ios/AirGoogleMaps/VectorTile.pbobjc.m"
+    ss.compiler_flags = '-fno-objc-arc'
+  end
 end
